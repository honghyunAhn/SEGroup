<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SEGroup 통합잡페어 기업 SQL -->
<mapper namespace="global.segroup.society.fap.agency.dao.SocietyFapAgencyMapper">
	
	<!-- 회원 아이디 중복 체크  시작; 2018. 12. 11. 김준영-->
	<select id="user_id_check" parameterType="String" resultType="String">
		select
			user_id
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 회원 아이디 중복 체크  종료 -->
	
	<!-- 회원 공통 등록 시작; 2018. 12. 11. 김준영 -->
	<insert id="insert_com_user" parameterType="User">
		insert into
			com_user_tb
			(
				user_id
				, user_pw
				, user_nm
				, user_phone
				, user_email
				, user_birth
				, user_sex
				, user_flag
				, user_state
				, user_ins_id
				, user_ins_dt
				, user_udt_id
				, user_udt_dt
				, user_terms_ck
			) values (
				#{user_id}
				, #{user_pw}
				, #{user_nm}
				, #{user_phone}
				, #{user_email}
				, '2999-12-31'
				, 'A0000'
				, #{user_flag}
				, #{user_state}
				, #{user_id}
				, #{user_ins_dt}
				, #{user_id}
				, #{user_udt_dt}
				, #{user_terms_ck}
			)
	</insert>
	<!-- 회원 공통 등록 종료 -->
	
	<!-- 에이전시 회원 등록 시작; 2018. 12. 11. 김준영 -->
	<insert id="insert_agency" parameterType="SocietyFapCompanyUser">
		insert into
			fap_company_user_tb
			(
				fap_comp_id
				, fap_comp_en_nm
				, fap_comp_ja_nm
				, fap_comp_business_num
				, fap_comp_rep
				, fap_comp_major_bussiness
				, fap_comp_homepage
				, fap_comp_postcode
				, fap_comp_address
				, fap_comp_address_detail
				, fap_comp_est_dt
				, fap_comp_stock
				, fap_comp_3years_avg_sales
				, fap_comp_employee_num
				, fap_comp_scit_num
				, fap_comp_korean_num
				, fap_comp_foreigner_num
				, fap_comp_ins_id
				, fap_comp_ins_dt
				, fap_comp_udt_id
				, fap_comp_udt_dt
				, fap_comp_log_saved
				, fap_comp_log_origin
				, fap_comp_log_using
			) values (
				#{fap_comp_id}
				, #{fap_comp_en_nm}
				, #{fap_comp_ja_nm}
				, #{fap_comp_business_num}
				, #{fap_comp_rep}
				, #{fap_comp_major_bussiness}
				, #{fap_comp_homepage}
				, #{fap_comp_postcode}
				, #{fap_comp_address}
				, #{fap_comp_address_detail}
				, #{fap_comp_est_dt}
				, #{fap_comp_stock}
				, #{fap_comp_3years_avg_sales}
				, #{fap_comp_employee_num}
				, #{fap_comp_scit_num}
				, #{fap_comp_korean_num}
				, #{fap_comp_foreigner_num}
				, #{fap_comp_id}
				, #{fap_comp_ins_dt}
				, #{fap_comp_id}
				, #{fap_comp_udt_dt}
				, #{fap_comp_log_saved}
				, #{fap_comp_log_origin}
				, #{fap_comp_log_using}
			)
	</insert>
	<!-- 에이전시 회원 등록 종료 -->
	
	<!-- 에이전시-담당자 연결 등록 시작; 2018. 12. 12. 김준영 -->
	<insert id="comp_user_connect" parameterType="SocietyFapCompanyUserConnect">
		insert into
			fap_comp_user_connect_tb
			(
				user_id
				, fap_comp_id
				, fap_comp_user_connect_ck
			) values (
				#{user_id}
				, #{fap_comp_id}
				, #{fap_comp_user_connect_ck}
			)
	</insert>
	<!-- 에이전시-담당자 연결 등록 종료 -->
	
	<!-- 에이전시 담당자 정보 가져오기 시작; 2018. 12. 17. 김준영 -->
	<select id="select_user" parameterType="String" resultType="User">
		select
			user_id
			, user_pw
			, user_nm
			, user_phone
			, user_email
			, user_birth
			, user_sex
			, user_flag
			, user_state
			, user_ins_id
			, user_ins_dt
			, user_udt_id
			, user_udt_dt
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 에이전시 담당자 정보 가져오기 종료 -->
	
	<!-- 공통 회원 정보 수정 시작; 2018. 12. 17. 김준영 -->
	<update id="update_user" parameterType="User">
		update
			com_user_tb
		set
			user_nm = #{user_nm}
			<if test="user_pw != ''">
				, user_pw = #{user_pw}			
			</if>
			, user_phone = #{user_phone}
			, user_email = #{user_email}
			, user_flag = #{user_flag}
			, user_state = #{user_state}
			, user_udt_id = #{user_udt_id}
			, user_udt_dt = #{user_udt_dt}
		where
			user_id = #{user_id}
	</update>
	<!-- 공통 회원 정보 수정 종료 -->
	
	<!-- 에이전시-회사 연결 시작; 2018. 12. 18. 김준영 -->
	<insert id="agency_company_connect" parameterType="AgencyCompanyConnect">
		insert into
			fap_ag_comp_connect_tb
			(
				fap_ag_id
				, fap_comp_id
				, fap_ag_comp_connect_ck
			) values (
				#{fap_ag_id}
				, #{fap_comp_id}
				, #{fap_ag_comp_connect_ck}
			)
	</insert>
	<!-- 에이전시-회사 연결 종료 -->
	
	<!-- 유저가 가지고 있는 회사 정보 가져오기 시작; 2018. 12. 18. 김준영 -->
	<select id="select_comp_user_connect" parameterType="String" resultType="SocietyFapCompanyUserConnect">
		select
			user_id
			, fap_comp_id
			, fap_comp_user_connect_ck
		from
			fap_comp_user_connect_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 유저가 가지고 있는 회사 정보 가져오기 종료 -->
	
	<!-- 유저가 가지고 있는 회사 정보 가져오기 시작; 2019. 02. 11. 김홍일 -->
	<select id="select_agen_user_connect" parameterType="String" resultType="SocietyFapCompanyUserConnect">
		select
			user_id
			, fap_comp_id
			, fap_comp_user_connect_ck
		from
			fap_comp_user_connect_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 유저가 가지고 있는 회사 정보 가져오기 종료 -->
	
	<!-- 에이전시가 가지고 있는 기업 연결 정보 가져오기 시작; 2018. 12. 18. 김준영 -->
	<select id="select_ag_comp" parameterType="String" resultType="hashmap">
		select
			ag_comp_connect.fap_ag_comp_connect_seq as fap_ag_comp_connect_seq
			, ag_comp_connect.fap_ag_id as fap_ag_id
			, ag_comp_connect.fap_ag_comp_connect_ck as fap_ag_comp_connect_ck
			, company_user.fap_comp_id as fap_comp_id
			, company_user.fap_comp_en_nm as fap_comp_en_nm
			, company_user.fap_comp_ja_nm as fap_comp_ja_nm
			, company_user.fap_comp_business_num as fap_comp_business_num
			, company_user.fap_comp_rep as fap_comp_rep
			, company_user.fap_comp_major_bussiness as fap_comp_major_bussiness
			, company_user.fap_comp_homepage as fap_comp_homepage
			, company_user.fap_comp_postcode as fap_comp_postcode
			, company_user.fap_comp_address as fap_comp_address
			, company_user.fap_comp_address_detail as fap_comp_address_detail
			, company_user.fap_comp_est_dt as fap_comp_est_dt
			, company_user.fap_comp_stock as fap_comp_stock
			, company_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
			, company_user.fap_comp_employee_num as fap_comp_employee_num
			, company_user.fap_comp_scit_num as fap_comp_scit_num
			, company_user.fap_comp_korean_num as fap_comp_korean_num
			, company_user.fap_comp_foreigner_num as fap_comp_foreigner_num
			, company_user.fap_comp_ins_id as fap_comp_ins_id
			, company_user.fap_comp_ins_dt as fap_comp_ins_dt
			, company_user.fap_comp_udt_id as fap_comp_udt_id
			, company_user.fap_comp_udt_dt as fap_comp_udt_dt
			, company_user.fap_comp_log_saved as fap_comp_log_saved
			, company_user.fap_comp_log_origin as fap_comp_log_origin
			, company_user.fap_comp_log_using  as fap_comp_log_using
		from
			fap_ag_comp_connect_tb as ag_comp_connect
            , fap_company_user_tb as company_user
		where
			ag_comp_connect.fap_ag_id = (select
											fap_comp_id
										 from
											fap_comp_user_connect_tb
										 where
											user_id = #{user_id}
										 )
             and company_user.fap_comp_id = ag_comp_connect.fap_comp_id
		order by
			company_user.fap_comp_udt_dt desc
	</select>
	<!-- 에이전시가 가지고 있는 기업 연결 정보 가져오기 종료 -->
	
	<!-- 요청을 보내기 위해 기업 리스트 가져오기 시작 (에이전시 담당자가 가지고 있는 자신의 기업은 가져오기 않음); 2018. 12. 19. 김준영 -->
	<select id="select_comp_list" resultType="SocietyFapCompanyUser" parameterType="String">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id != (select
								fap_comp_id
						    from
								fap_comp_user_connect_tb
						    where
								user_id = #{user_id}
							)
			and fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb as comp_user_connect
						   where
						   		user_id in (select
						   						user_id
						   				    from
						   				   		com_user_tb
						   				   	where
						   				   		user_flag = 'A0103'
						   				    )
						   		  )
	</select>
	<!-- 요청을 보내기 위해 기업 리스트 가져오기 종료 -->
	
	<!-- 회사 정보 가져오기(유저 아이디) 시작; 2018. 12. 19. 김준영 -->
	<select id="select_company" parameterType="String" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id = (select
								fap_comp_id
						   from
							 	fap_comp_user_connect_tb
						   where
						   		user_id = #{user_id}
						   )
	</select>
	<!-- 회사 정보 가져오기 종료 -->
	
	<!-- 회사 정보 수정 시작; 2018. 12. 19. 김준영 -->
	<update id="update_company" parameterType="SocietyFapCompanyUser">
		update
			fap_company_user_tb
		set
			fap_comp_en_nm = #{fap_comp_en_nm}
			, fap_comp_ja_nm = #{fap_comp_ja_nm}
			, fap_comp_business_num = #{fap_comp_business_num}
			, fap_comp_rep = #{fap_comp_rep}
			, fap_comp_major_bussiness = #{fap_comp_major_bussiness}
			, fap_comp_homepage = #{fap_comp_homepage}
			, fap_comp_postcode = #{fap_comp_postcode}
			, fap_comp_address = #{fap_comp_address}
			, fap_comp_address_detail = #{fap_comp_address_detail}
			, fap_comp_est_dt = #{fap_comp_est_dt}
			, fap_comp_stock = #{fap_comp_stock}
			, fap_comp_3years_avg_sales = #{fap_comp_3years_avg_sales}
			, fap_comp_employee_num = #{fap_comp_employee_num}
			, fap_comp_scit_num = #{fap_comp_scit_num}
			, fap_comp_korean_num = #{fap_comp_korean_num}
			, fap_comp_foreigner_num = #{fap_comp_foreigner_num}
			, fap_comp_udt_id = #{fap_comp_udt_id}
			, fap_comp_udt_dt = #{fap_comp_udt_dt}
			<if test="fap_comp_log_saved != null">
				, fap_comp_log_saved = #{fap_comp_log_saved}
			</if>
			<if test="fap_comp_log_origin != null">
				, fap_comp_log_origin = #{fap_comp_log_origin}
			</if>
			, fap_comp_log_using = #{fap_comp_log_using}
		where
			fap_comp_id = #{fap_comp_id}
	</update>
	<!-- 회사 정보 수정 종료 -->
	
	<!-- 에이전시가 관리하는 기업 추가 시작; 2018. 12. 19. 김준영 -->
	<insert id="insert_ag_comp_connect" parameterType="hashmap">
		insert into 
			fap_ag_comp_connect_tb(
					fap_ag_id
					, fap_comp_id
					, fap_ag_comp_connect_ck
			) values (
				(select
						fap_comp_id
					from
						fap_comp_user_connect_tb
					where
						user_id = #{agency_user_id}
				   )
				, (select
						fap_comp_id
					from
						fap_comp_user_connect_tb
					where
						user_id = #{company_user_id}
				   )
				, #{connect_ck}
			)
	</insert>
	<!-- 에이전시가 관리하는 기업 추가 종료 -->
	
	<!-- 에이전시가 요청을 보낼 경우 처리 시작; 2018. 12. 21. 김준영 -->
	<insert id="connect_request" parameterType="hashmap">
		insert into
			fap_ag_comp_connect_tb
			(
				fap_ag_id
				, fap_comp_id
				, fap_ag_comp_connect_ck
			) values 
				<foreach item="comp_nm_list" index="index" collection="comp_nm_list" separator=",">
				(
					(select
						fap_comp_id
					 from
						fap_comp_user_connect_tb
					 where
						user_id = #{agency_user_id}
					 )
					, #{comp_nm_list}
					, #{fap_ag_comp_connect_ck}
				)
				</foreach>
	</insert>
	<!-- 에이전시가 요청을 보낼 경우 처리 종료 -->
	
	<!-- 에이전시 기업 연결 끊기 시작; 2018. 12. 21. 김준영 -->
	<delete id="ag_comp_disconnect" parameterType="int">
		delete
		from
			fap_ag_comp_connect_tb
		where
			fap_ag_comp_connect_seq = #{fap_ag_comp_connect_seq}
	</delete>
	<!-- 에이전시 기업 연결 끊기 종료 -->
	
	<!-- 기업의 연결 여부 확인 시작; 2018. 12. 21. 김준영 -->
	<select id="ck_ag_comp_connect" parameterType="String" resultType="AgencyCompanyConnect">
		select
			fap_ag_comp_connect_seq
			, fap_ag_id
			, fap_comp_id
			, fap_ag_comp_connect_ck
		from
			fap_ag_comp_connect_tb
		where
			fap_comp_id = (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb
						   where
						   		user_id = #{user_id}
						   )
	</select>
	<!-- 기업의 연결 여부 확인 종료 -->
	
	<!-- 에이전시 - 기업의 연결 여부 변경; 2018. 12. 21. 김준영 -->
	<update id="update_ag_comp_connect" parameterType="AgencyCompanyConnect">
		update
			fap_ag_comp_connect_tb
		set
			fap_ag_comp_connect_ck = #{fap_ag_comp_connect_ck}
		where
			fap_ag_comp_connect_seq = #{fap_ag_comp_connect_seq}
	</update>
	
	<!-- FAP 에이전시 담당자 정보 삭제 시작; 2018. 12. 26. 김준영 -->
	<update id="delete_agency_user_info" parameterType="HashMap">
        update
           	com_user_tb
        set
            user_ID = #{user_delete_id}
            , user_pw = ''
            , user_phone = ''
            , user_email = ''
            , user_birth = now()
            , user_sex = 'A0000'
            , user_state = #{user_state}
            , user_ins_id = #{user_delete_id}
            , user_ins_dt = now()
            , user_udt_id = #{user_delete_id}
            , user_udt_dt = now()
        where
            user_id = #{user_id}
    </update>
	<!-- FAP 에이전시 담당자 정보 삭제 종료 -->
	
	<!-- FAP 에이전시가 담당하지 않는 기업 리스트 가져오기 시작; 2018. 12. 27. 김준영 -->
	<select id="select_exclude_comp_list" parameterType="String" resultType="AgencyCompanyConnect">
		select
			fap_ag_comp_connect_seq
			, fap_ag_id
			, fap_comp_id
			, fap_ag_comp_connect_ck
		from
			fap_ag_comp_connect_tb
		where
			fap_ag_id != (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb
						   where
						   		user_id = #{user_id}
						   )
	</select>
	<!-- FAP 에이전시가 담당하지 않는 기업 리스트 가져오기 종료 -->
	
	<!-- 회사 정보 가져오기(기업 아이디) 시작; 2018. 12. 28. 김준영 -->
	<select id="select_company_compare_id" parameterType="String" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id = #{fap_comp_id}
	</select>
	<!-- 회사 정보 가져오기 종료 -->
	
	<!-- 에이전시 - 기업 연결 요청 삭제 시작; 2018. 12. 31. 김준영 -->
	<delete id="delete_connect_request" parameterType="AgencyCompanyConnect">
		delete
		from
			fap_ag_comp_connect_tb
		where
			fap_ag_id = (select
							fap_comp_id
						 from
						 	fap_comp_user_connect_tb
						 where
						 	user_id = #{fap_ag_id}
						 )
			and 
				fap_comp_id = #{fap_comp_id}
			and 
				fap_ag_comp_connect_ck = #{fap_ag_comp_connect_ck}
	</delete>
	<!-- 에이전시 - 기업 연결 요청 삭제 종료 -->
	
	<!-- 에이전시 기업 가져오기 시작; 2019. 1. 2. 김준영 -->
	<select id="select_agency" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb
						   where
						   		user_id in (select
						   				   		user_id
						   				   from
						   				   		com_user_tb
						   				   where
						   				   		user_flag = 'A0104'
						   				   )
						   )
	</select>
	<!-- 에이전시 기업 가져오기 종료 -->
	
	<!-- 에이전시 - 기업 연결 객체 승인 상태 '거절(B3802)'로 업데이트 시작; 2019. 1. 2. 김준영 -->
	<update id="connect_refusal" parameterType="hashmap">
		update
			fap_ag_comp_connect_tb
		set
			fap_ag_comp_connect_ck = 'B3802'
		where
			fap_ag_id != (select
						  		fap_comp_id
						  from
						  		fap_comp_user_connect_tb
						  where
						  		user_id = #{agency_user_id}
						  )
			and fap_comp_id = (select
							  		fap_comp_id
							   from
							  		fap_comp_user_connect_tb
							   where
							  		user_id = #{company_user_id}
							   )
	</update>
	<!-- 에이전시 - 기업 연결 객체 승인 상태 '거절(B3802)'로 업데이트 종료 -->
	
	<!-- FAP 에이전시 기업 가져오기 시작; 2019. 1. 8. 김준영 -->
	<select id="select_agency_company" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb as comp_user
		where
			fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb as comp_user_connect
						   where
						   		user_id in (select
						   						user_id
						   				    from
						   				   		com_user_tb
						   				   	where
						   				   		user_flag = 'A0104'
						   				   )
						   )
	</select>
	<!-- FAP 에이전시 기업 가져오기 종료 -->
	
	<!-- FAP 담당자 - 기업 연결 객체 삭제 시작; 2019. 1. 10. 김준영 -->
	<delete id="user_connect_delete" parameterType="String">
		delete
		from
			fap_comp_user_connect_tb
		where
			user_id = #{user_id}
	</delete>
	<!-- FAP 담당자 - 기업 연결 객체 삭제 종료 -->
	
	<!-- 노출된 잡페어 정보 리스트 검색 시작; 2019. 1. 21. 이재준 -->
	<resultMap type="hashmap" id="fapJobfairMap">
		<id property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<collection property="fapJobfairList" javaType="java.util.ArrayList" resultMap="fapJobfair" />
		<collection property="fapJobfairLoList" javaType="java.util.ArrayList" resultMap="fapJobfairLo" />
	</resultMap>	
	<resultMap type="hashmap" id="fapJobfair">
		<id property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_jobfair_title" column="fap_jobfair_title" />
		<result property="fap_jobfair_st" column="fap_jobfair_st" />
		<result property="fap_jobfair_et" column="fap_jobfair_et" />
		<result property="fap_jobfair_log_saved" column="fap_jobfair_log_saved" />
		<result property="fap_jobfair_log_origin" column="fap_jobfair_log_origin" />
		<result property="fap_jobfair_eps" column="fap_jobfair_eps" />
	</resultMap>	
	<resultMap type="hashmap" id="fapJobfairLo">
		<id property="fap_jobfair_lo_seq" column="fap_jobfair_lo_seq" />
		<result property="fap_jobfair_lo" column="fap_jobfair_lo" />
	</resultMap>	
	
	<select id="jobfair_search_list" resultMap="fapJobfairMap">
		select
			jobfair.fap_jobfair_seq as fap_jobfair_seq
		    ,jobfair.fap_jobfair_title as fap_jobfair_title
		    ,DATE_FORMAT(jobfair.fap_jobfair_st, '%Y-%m-%d') as fap_jobfair_st
		    ,DATE_FORMAT(jobfair.fap_jobfair_et, '%Y-%m-%d') as fap_jobfair_et
		    ,jobfair.fap_jobfair_log_saved as fap_jobfair_log_saved
		    ,jobfair.fap_jobfair_log_origin as fap_jobfair_log_origin
		    ,jobfair.fap_jobfair_eps as fap_jobfair_eps
		    ,jobfair_lo.fap_jobfair_lo as fap_jobfair_lo
		from
			fap_jobfair_tb jobfair
			left join fap_jobfair_lo_tb jobfair_lo
				on jobfair.fap_jobfair_seq = jobfair_lo.fap_jobfair_seq
		where
			jobfair.fap_jobfair_eps = 'C1201'
		order by
			jobfair.fap_jobfair_ins_dt desc
	</select>
	<!-- 노출된 잡페어 정보 리스트 검색 종료-->
	
	<!-- 선택한 잡페어 세부정보 검색 시작; 2019. 1. 22. 이재준 -->
	<select id="jobfair_divide_search_list" parameterType="int" resultType="hashmap">
		select
			jobfair.fap_jobfair_seq as fap_jobfair_seq
		    ,jobfair.fap_jobfair_title as fap_jobfair_title
		    ,jobfair.fap_jobfair_log_saved as fap_jobfair_log_saved
		    ,jobfair.fap_jobfair_log_origin as fap_jobfair_log_origin
		    ,jobfair_divide.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,jobfair_divide.fap_jobfair_divide_gb as fap_jobfair_divide_gb
		    ,jobfair_divide.fap_jobfair_divide_detail as fap_jobfair_divide_detail
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_st, '%Y-%m-%d') as fap_jobfair_divide_st
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_et, '%Y-%m-%d') as fap_jobfair_divide_et
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_app_st, '%Y-%m-%d') as fap_jobfair_divide_app_st
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_app_et, '%Y-%m-%d') as fap_jobfair_divide_app_et
		    ,DATE_FORMAT(now(), '%Y-%m-%d') as now_day
		from
			fap_jobfair_tb jobfair
			left join fap_jobfair_divide_tb jobfair_divide
				on jobfair.fap_jobfair_seq = jobfair_divide.fap_jobfair_seq
		where
			jobfair_divide.fap_jobfair_divide_gb_eps = 'C1301'
			and jobfair.fap_jobfair_seq = #{fap_jobfair_seq}
		order by
			jobfair.fap_jobfair_ins_dt desc
	</select>
	<!-- 선택한 잡페어 세부정보 검색 종료-->
	
	<!-- 채용공고 저장 시작  1. 22. 이재준-->
	<!-- 채용공고 기본 정보 입력  -->
	<insert id ="insert_job_ad" parameterType="JobAd" useGeneratedKeys="true" keyProperty="fap_job_ad_seq">
		insert into fap_job_ad_tb(
			fap_job_ad_major_business
			,fap_job_ad_homepage
			,fap_job_ad_est_dt
			,fap_job_ad_stock
			,fap_job_ad_3years_avg_sales
			,fap_job_ad_employee_num
			,fap_job_ad_foreigner_num
			,fap_job_ad_korean_num
			,fap_job_ad_postcode
			,fap_job_ad_address
			,fap_job_ad_address_dtl
			,fap_job_ad_title
			,fap_job_ad_worktime
			,fap_job_ad_overtime
			,fap_job_ad_hire_type
			,fap_job_ad_intern
			,fap_job_ad_recruit_num
			,fap_job_ad_ideal_person
			,fap_job_ad_age
			,fap_job_ad_gender
			,fap_job_ad_isdorm
			,fap_job_ad_promotion
			,fap_job_ad_vacation
			,fap_job_ad_welfare
			,fap_job_ad_open_grade
			,fap_job_ad_qual_dpe
			,fap_job_ad_terms_dpe
			,fap_job_ad_coc_agree
			<if test="fap_job_ad_overlap != null and fap_job_ad_overlap != '' ">
			,fap_job_ad_overlap
			</if>
			,fap_job_ad_ins_id
			,fap_job_ad_ins_dt
			,fap_job_ad_udt_id
			,fap_job_ad_udt_dt
			,fap_comp_id
			,fap_jobfair_divide_seq
			,fap_jobfair_seq
			,fap_jobfair_comp_seq
		<if test="fap_job_ad_state != null and fap_job_ad_state != '' ">
			,fap_job_ad_state
		</if>
			,fap_job_ad_category_type
		)
		values(
			#{fap_job_ad_major_business}
			,#{fap_job_ad_homepage}
			,#{fap_job_ad_est_dt}
			,#{fap_job_ad_stock}
			,#{fap_job_ad_3years_avg_sales}
			,#{fap_job_ad_employee_num}
			,#{fap_job_ad_foreigner_num}
			,#{fap_job_ad_korean_num}
			,#{fap_job_ad_postcode}
			,#{fap_job_ad_address}
			,#{fap_job_ad_address_dtl}
			,#{fap_job_ad_title}
			,#{fap_job_ad_worktime}
			,#{fap_job_ad_overtime}
			,#{fap_job_ad_hire_type}
			,#{fap_job_ad_intern}
			,#{fap_job_ad_recruit_num}
			,#{fap_job_ad_ideal_person}
			,#{fap_job_ad_age}
			,#{fap_job_ad_gender}
			,#{fap_job_ad_isdorm}
			,#{fap_job_ad_promotion}
			,#{fap_job_ad_vacation}
			,#{fap_job_ad_welfare}
			,#{fap_job_ad_open_grade}
			,#{fap_job_ad_qual_dpe}
			,#{fap_job_ad_terms_dpe}
			,#{fap_job_ad_coc_agree}
			<if test="fap_job_ad_overlap != null and fap_job_ad_overlap != '' ">
			,#{fap_job_ad_overlap}
			</if>
			,#{fap_job_ad_ins_id}
			,now()
			,#{fap_job_ad_udt_id}
			,now()
			,#{fap_comp_id}
			,#{fap_jobfair_divide_seq}
			,#{fap_jobfair_seq}
			,(
				select
					fap_jobfair_comp_seq
				from
					fap_jobfair_comp_tb
				where
					fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
				and
					fap_jobfair_seq = #{fap_jobfair_seq}
				and
					fap_comp_id = #{fap_comp_id}
			)
		<if test="fap_job_ad_state != null and fap_job_ad_state != '' ">
			,#{fap_job_ad_state}
		</if>
			,#{fap_job_ad_category_type}
		)
		
	</insert>
	<!-- 채용공고 기본 정보 입력 종료--> 
	
	<!-- 기숙사 정보 입력 시작  -->
	<insert id ="insert_job_dorm" parameterType="JobDorm">
		insert into fap_job_dorm_tb(
			fap_job_dorm_seq
			,fap_job_dorm_lo
			,fap_job_dorm_cost
			,fap_job_dorm_ins_id
			,fap_job_dorm_ins_dt
			,fap_job_dorm_udt_id
			,fap_job_dorm_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_dorm_seq}
			,#{fap_job_dorm_lo}
			,#{fap_job_dorm_cost}
			,#{fap_job_dorm_ins_id}
			,#{fap_job_dorm_ins_dt}
			,#{fap_job_dorm_udt_id}
			,#{fap_job_dorm_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 기숙사 정보 입력 종료 -->
	
	<!-- 계약사원 정보 입력 시작 -->
	<insert id ="insert_job_jit_employee" parameterType="JobJitEmployee">
		insert into fap_job_jit_employee_tb(
			fap_job_jit_employee_seq
			,fap_job_jit_employee_isswitch
			,fap_job_jit_employee_term
			,fap_job_jit_employee_dtl
			,fap_job_jit_employee_ins_id
			,fap_job_jit_employee_ins_dt
			,fap_job_jit_employee_udt_id
			,fap_job_jit_employee_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_jit_employee_seq}
			,#{fap_job_jit_employee_isswitch}
			,#{fap_job_jit_employee_term}
			,#{fap_job_jit_employee_dtl}
			,#{fap_job_jit_employee_ins_id}
			,#{fap_job_jit_employee_ins_dt}
			,#{fap_job_jit_employee_udt_id}
			,#{fap_job_jit_employee_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 기숙사 정보 입력 종료 -->
	
	<!-- 업무에 필요한 일본어 정보 입력 시작 -->
	<insert id ="insert_job_ja_level" parameterType="JobJaLevel">
		insert into fap_job_ja_level_tb(
			fap_job_ja_level_seq
			,fap_job_ja_level_gb
			,fap_job_ja_level_dtl
			,fap_job_ja_level_ins_id
			,fap_job_ja_level_ins_dt
			,fap_job_ja_level_udt_id
			,fap_job_ja_level_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_ja_level_seq}
			,#{fap_job_ja_level_gb}
			,#{fap_job_ja_level_dtl}
			,#{fap_job_ja_level_ins_id}
			,#{fap_job_ja_level_ins_dt}
			,#{fap_job_ja_level_udt_id}
			,#{fap_job_ja_level_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 업무에 필요한 일본어 정보 입력 종료 -->
	
	<!-- 시용기간 정보 입력 시작 -->
	<insert id ="insert_job_trial" parameterType="JobTrial">
		insert into fap_job_trial_tb(
			fap_job_trial_seq
			,fap_job_trial_pd
			,fap_job_trial_pay
			,fap_job_trial_pay_equal
			,fap_job_trial_ins_id
			,fap_job_trial_ins_dt
			,fap_job_trial_udt_id
			,fap_job_trial_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_trial_seq}
			,#{fap_job_trial_pd}
			,#{fap_job_trial_pay}
			,#{fap_job_trial_pay_equal}
			,#{fap_job_trial_ins_id}
			,#{fap_job_trial_ins_dt}
			,#{fap_job_trial_udt_id}
			,#{fap_job_trial_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 시용기간 정보 입력 종료 -->
	
	<!-- 회사명 정보 입력 시작 -->
	<insert id ="insert_job_comp" parameterType="JobComp">
		insert into fap_job_comp_tb(
			fap_job_comp_seq
			,fap_job_comp_nm
			,fap_job_comp_gb
			,fap_job_comp_ins_id
			,fap_job_comp_ins_dt
			,fap_job_comp_udt_id
			,fap_job_comp_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobComp" collection="jobCompList" index="index" open=" " separator="," close=" ">
		(	
			#{JobComp.fap_job_comp_seq}
			,#{JobComp.fap_job_comp_nm}
			,#{JobComp.fap_job_comp_gb}
			,#{JobComp.fap_job_comp_ins_id}
			,now()
			,#{JobComp.fap_job_comp_udt_id}
			,now()
			,#{JobComp.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 회사명 정보 입력 완료  --> 
	
	<!-- 채용공고 파일 정보 입력 시작 -->
	<insert id="insert_job_file" parameterType="JobFile">
		insert into fap_job_file_tb(
			fap_job_file_seq
			,fap_job_file_gb
			,fap_job_file_saved
			,fap_job_file_origin
			,fap_job_file_ins_id
			,fap_job_file_ins_dt
			,fap_job_file_udt_id
			,fap_job_file_udt_dt
			,fap_job_ad_seq
		)
		values 
		<foreach item ="JobFile" collection="jobFileList" index="index" open=" " separator="," close=" ">
		(
			#{JobFile.fap_job_file_seq}
			,#{JobFile.fap_job_file_gb}
			,#{JobFile.fap_job_file_saved}
			,#{JobFile.fap_job_file_origin}
			,#{JobFile.fap_job_file_ins_id}
			,now()
			,#{JobFile.fap_job_file_udt_id}
			,now()
			,#{JobFile.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 채용공고 파일 정보 입력 완료 -->
	
	<!-- 보험 정보 입력 시작 -->
	<insert id ="insert_job_isr" parameterType="JobIsr">
		insert into fap_job_isr_tb(
			fap_job_isr_seq
			,fap_job_isr_gb
			,fap_job_isr_ins_id
			,fap_job_isr_ins_dt
			,fap_job_isr_udt_id
			,fap_job_isr_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobIsr" collection="jobIsrList" index="index" open=" " separator="," close=" ">
		(	
			#{JobIsr.fap_job_isr_seq}
			,#{JobIsr.fap_job_isr_gb}
			,#{JobIsr.fap_job_isr_ins_id}
			,now()
			,#{JobIsr.fap_job_isr_udt_id}
			,now()
			,#{JobIsr.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 보험 정보 입력 완료  --> 
	
	<!-- 입사예정일 정보 입력 시작 -->
	<insert id ="insert_job_join_dt" parameterType="JobJoinDt">
		insert into fap_job_join_dt_tb(
			fap_job_join_dt_seq
			,fap_job_join_dt_gb
			,fap_job_join_dt_dtl
			,fap_job_join_dt_ins_id
			,fap_job_join_dt_ins_dt
			,fap_job_join_dt_udt_id
			,fap_job_join_dt_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobJoinDt" collection="jobJoinDtList" index="index" open=" " separator="," close=" ">
		(	
			#{JobJoinDt.fap_job_join_dt_seq}
			,#{JobJoinDt.fap_job_join_dt_gb}
			,#{JobJoinDt.fap_job_join_dt_dtl}
			,#{JobJoinDt.fap_job_join_dt_ins_id}
			,now()
			,#{JobJoinDt.fap_job_join_dt_udt_id}
			,now()
			,#{JobJoinDt.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 입사예정일 정보 입력 완료  --> 
	
	<!-- 주요업무 정보 입력 시작 -->
	<insert id ="insert_job_work" parameterType="JobWork">
		insert into fap_job_work_tb(
			fap_job_work_seq
			,fap_job_work_gb
			,fap_job_work_dtl
			,fap_job_work_ins_id
			,fap_job_work_ins_dt
			,fap_job_work_udt_id
			,fap_job_work_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobWork" collection="jobWorkList" index="index" open=" " separator="," close=" ">
		(	
			#{JobWork.fap_job_work_seq}
			,#{JobWork.fap_job_work_gb}
			,#{JobWork.fap_job_work_dtl}
			,#{JobWork.fap_job_work_ins_id}
			,now()
			,#{JobWork.fap_job_work_udt_id}
			,now()
			,#{JobWork.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 주요업무 정보 입력 완료  --> 
	
	<!-- 모집직종 정보 입력 시작 -->
	<insert id ="insert_job_category" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_category_seq">
		insert into fap_job_category_tb(
			fap_job_category_seq
			,fap_job_category_gb
			,fap_job_category_ins_id
			,fap_job_category_ins_dt
			,fap_job_category_udt_id
			,fap_job_category_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobCategory" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobCategory.fap_job_category_seq}
			,#{JobCategory.fap_job_category_gb}
			,#{JobCategory.fap_job_category_ins_id}
			,now()
			,#{JobCategory.fap_job_category_udt_id}
			,now()
			,#{JobCategory.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 모집직종 정보 입력 완료  --> 
	
	<!-- 모집직종(기타) 정보 입력 시작 2.8 이재준 -->
	<insert id ="insert_job_category_etc" parameterType="JobCategoryEtc">
		insert into fap_job_category_etc_tb(
			fap_job_category_seq
			,fap_job_category_etc_dtl
			,fap_job_category_etc_ins_id
			,fap_job_category_etc_ins_dt
			,fap_job_category_etc_udt_id
			,fap_job_category_etc_udt_dt
		)
		values(	
			#{fap_job_category_seq}
			,#{fap_job_category_etc_dtl}
			,#{fap_job_category_etc_ins_id}
			,now()
			,#{fap_job_category_etc_udt_id}
			,now()
		)
	</insert>
	
	<!-- 우대사항 정보 입력 시작 -->
	<insert id ="insert_job_pref" parameterType="JobPref">
		insert into fap_job_pref_tb(
			fap_job_pref_seq
			,fap_job_pref_gb
			,fap_job_pref_dtl
			,fap_job_pref_ins_id
			,fap_job_pref_ins_dt
			,fap_job_pref_udt_id
			,fap_job_pref_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobPref" collection="jobPrefList" index="index" open=" " separator="," close=" ">
		(	
			#{JobPref.fap_job_pref_seq}
			,#{JobPref.fap_job_pref_gb}
			,#{JobPref.fap_job_pref_dtl}
			,#{JobPref.fap_job_pref_ins_id}
			,now()
			,#{JobPref.fap_job_pref_udt_id}
			,now()
			,#{JobPref.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 우대사항 정보 입력 완료  --> 
	
	<!-- 근무예정지 정보 입력 시작 -->
	<insert id ="insert_job_workplace" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_workplace_seq">
		insert into fap_job_workplace_tb(
			fap_job_workplace_gb
			,fap_job_workplace_ins_id
			,fap_job_workplace_ins_dt
			,fap_job_workplace_udt_id
			,fap_job_workplace_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobWorkplace" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobWorkplace.fap_job_workplace_gb}
			,#{JobWorkplace.fap_job_workplace_ins_id}
			,now()
			,#{JobWorkplace.fap_job_workplace_udt_id}
			,now()
			,#{JobWorkplace.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 근무예정지 정보 입력 완료  --> 
	
	<!-- 상세근무예정지 정보 입력 시작 -->
	<insert id ="insert_job_workplace_dtl" parameterType="list">
		insert into fap_job_workplace_dtl_tb(
			fap_job_workplace_dtl_gb
			,fap_job_workplace_dtl_ins_id
			,fap_job_workplace_dtl_ins_dt
			,fap_job_workplace_dtl_udt_id
			,fap_job_workplace_dtl_udt_dt
			,fap_job_workplace_seq
		)
		values
		<foreach item ="JobWorkplaceDtl" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobWorkplaceDtl.fap_job_workplace_dtl_gb}
			,#{JobWorkplaceDtl.fap_job_workplace_dtl_ins_id}
			,now()
			,#{JobWorkplaceDtl.fap_job_workplace_dtl_udt_id}
			,now()
			,#{JobWorkplaceDtl.fap_job_workplace_seq}
		)
		</foreach>
	</insert>
	<!-- 상세근무예정지 정보 입력 완료  --> 
	
	<!-- 근무예정지(기타) 정보 입력 시작 2.8 이재준 -->
	<insert id ="insert_job_workplace_etc" parameterType="JobWorkplaceEtc">
		insert into fap_job_workplace_etc_tb(
			fap_job_workplace_seq
			,fap_job_workplace_etc_address
			,fap_job_workplace_etc_ins_id
			,fap_job_workplace_etc_ins_dt
			,fap_job_workplace_etc_udt_id
			,fap_job_workplace_etc_udt_dt
		)
		values(	
			#{fap_job_workplace_seq}
			,#{fap_job_workplace_etc_address}
			,#{fap_job_workplace_etc_ins_id}
			,now()
			,#{fap_job_workplace_etc_udt_id}
			,now()
		)
	</insert>
	
	<!-- 채용전형 정보 입력 시작 -->
	<insert id ="insert_job_recruitpcs" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_recruit_pcs_seq">
		insert into fap_job_recruit_pcs_tb(
			fap_job_recruit_pcs_gb
			,fap_job_recruit_pcs_dtl
			,fap_job_recruit_pcs_od
			,fap_job_recruit_pcs_ins_id
			,fap_job_recruit_pcs_ins_dt
			,fap_job_recruit_pcs_udt_id
			,fap_job_recruit_pcs_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobRecruitPcs" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobRecruitPcs.fap_job_recruit_pcs_gb}
			,#{JobRecruitPcs.fap_job_recruit_pcs_dtl}
			,#{JobRecruitPcs.fap_job_recruit_pcs_od}
			,#{JobRecruitPcs.fap_job_recruit_pcs_ins_id}
			,now()
			,#{JobRecruitPcs.fap_job_recruit_pcs_udt_id}
			,now()
			,#{JobRecruitPcs.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 채용전형 정보 입력 완료  --> 
	<!-- 면접전형 정보 입력 시작 -->
	<insert id ="insert_job_itv" parameterType="JobItv" useGeneratedKeys="true" keyProperty="fap_job_itv_seq">
		insert into fap_job_itv_tb(
			fap_job_itv_gb
			,fap_job_itv_obj
			,fap_job_itv_tp
			,fap_job_itv_tm
			,fap_job_itv_skype
			,fap_job_itv_ins_id
			,fap_job_itv_ins_dt
			,fap_job_itv_udt_id
			,fap_job_itv_udt_dt
			,fap_job_recruit_pcs_seq
		)
		values(	
			#{fap_job_itv_gb}
			,#{fap_job_itv_obj}
			,#{fap_job_itv_tp}
			,#{fap_job_itv_tm}
			,#{fap_job_itv_skype}
			,#{fap_job_itv_ins_id}
			,now()
			,#{fap_job_itv_udt_id}
			,now()
			,#{fap_job_recruit_pcs_seq}
		)
	</insert>
	<!-- 면접전형 정보 입력 종료 -->
	<!-- 기타전형 정보 입력 시작 -->
	<insert id ="insert_job_test_etc" parameterType="JobTestEtc" useGeneratedKeys="true" keyProperty="fap_job_test_etc_seq">
		insert into fap_job_test_etc_tb(
			fap_job_test_etc_obj
			,fap_job_test_etc_dtl
			,fap_job_test_etc_ins_id
			,fap_job_test_etc_ins_dt
			,fap_job_test_etc_udt_id
			,fap_job_test_etc_udt_dt
			,fap_job_recruit_pcs_seq
		)
		values(	
			#{fap_job_test_etc_obj}
			,#{fap_job_test_etc_dtl}
			,#{fap_job_test_etc_ins_id}
			,now()
			,#{fap_job_test_etc_udt_id}
			,now()
			,#{fap_job_recruit_pcs_seq}
		)
	</insert>
	<!-- 기타전형 정보 입력 종료 -->
	<!-- 기타전형대상자(기타) 정보 입력 시작 -->
	<insert id ="insert_job_test_etc_obj" parameterType="JobTestEtcObj">
		insert into fap_job_test_etc_obj_tb(
			fap_job_test_etc_obj_seq
			,fap_job_test_etc_obj_dtl
			,fap_job_test_etc_obj_ins_id
			,fap_job_test_etc_obj_ins_dt
			,fap_job_test_etc_obj_udt_id
			,fap_job_test_etc_obj_udt_dt
			,fap_job_test_etc_seq
		)
		values(	
			#{fap_job_test_etc_obj_seq}
			,#{fap_job_test_etc_obj_dtl}
			,#{fap_job_test_etc_obj_ins_id}
			,now()
			,#{fap_job_test_etc_obj_udt_id}
			,now()
			,#{fap_job_test_etc_seq}
		)
	</insert>
	<!-- 기타전형대상자(기타) 정보 입력 종료 -->
	<!-- 면접방식(기타) 정보 입력 시작 -->
	<insert id ="insert_job_itv_tp_etc" parameterType="JobItvTpEtc">
		insert into fap_job_itv_tp_etc_tb(
			fap_job_itv_tp_etc_seq
			,fap_job_itv_tp_etc_dtl
			,fap_job_itv_tp_etc_ins_id
			,fap_job_itv_tp_etc_ins_dt
			,fap_job_itv_tp_etc_udt_id
			,fap_job_itv_tp_etc_udt_dt
			,fap_job_itv_seq
		)
		values(	
			#{fap_job_itv_tp_etc_seq}
			,#{fap_job_itv_tp_etc_dtl}
			,#{fap_job_itv_tp_etc_ins_id}
			,now()
			,#{fap_job_itv_tp_etc_udt_id}
			,now()
			,#{fap_job_itv_seq}
		)
	</insert>
	<!-- 면접방식(기타) 정보 입력 종료 -->
	<!-- 면접대상자(기타) 정보 입력 시작 -->
	<insert id ="insert_job_itv_obj_etc" parameterType="JobItvObjEtc">
		insert into fap_job_itv_obj_etc_tb(
			fap_job_itv_obj_etc_seq
			,fap_job_itv_obj_etc_dtl
			,fap_job_itv_obj_etc_ins_id
			,fap_job_itv_obj_etc_ins_dt
			,fap_job_itv_obj_etc_udt_id
			,fap_job_itv_obj_etc_udt_dt
			,fap_job_itv_seq
		)
		values(	
			#{fap_job_itv_obj_etc_seq}
			,#{fap_job_itv_obj_etc_dtl}
			,#{fap_job_itv_obj_etc_ins_id}
			,now()
			,#{fap_job_itv_obj_etc_udt_id}
			,now()
			,#{fap_job_itv_seq}
		)
	</insert>
	<!-- 면접대상자(기타) 정보 입력 종료 -->
	
	<!-- 급여정보 입력 -->
	<insert id ="insert_job_pay" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_pay_seq">
		insert into
			fap_job_pay_tb(
				fap_job_pay_gb
		        , fap_job_pay_info
		        , fap_job_pay_dtl
		        , fap_job_pay_ins_id
		        , fap_job_pay_ins_dt
		        , fap_job_pay_udt_id
		        , fap_job_pay_udt_dt
		        , fap_job_ad_seq
			)values
		<foreach item ="JobPay" collection="list" index="index" open=" " separator="," close=" ">
			(
			#{JobPay.fap_job_pay_gb}
	        , #{JobPay.fap_job_pay_info}
	        , #{JobPay.fap_job_pay_dtl}
	        , #{JobPay.fap_job_pay_ins_id}
	        , now()
	        , #{JobPay.fap_job_pay_udt_id}
	        , now()
		    , #{JobPay.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 급여정보 입력 종료 -->
	
	<!-- 기본급 정보 입력 -->
	<insert id ="insert_job_pay_base" parameterType="list"  useGeneratedKeys="true" keyProperty="fap_job_pay_base_seq">
		insert into
			fap_job_pay_base_tb(
				fap_job_pay_base_gb
		        , fap_job_pay_base_info
		        , fap_job_pay_base_ins_id
		        , fap_job_pay_base_ins_dt
		        , fap_job_pay_base_udt_id
		        , fap_job_pay_base_udt_dt
		        , fap_job_pay_seq
		        )
			values
		<foreach item ="JobPayBase" collection="list" index="index" open=" " separator="," close=" ">
				(
				#{JobPayBase.fap_job_pay_base_gb}
		        , #{JobPayBase.fap_job_pay_base_info}
		        , #{JobPayBase.fap_job_pay_base_ins_id}
		        , now()
		        , #{JobPayBase.fap_job_pay_base_udt_id}
		        , now()
		        , #{JobPayBase.fap_job_pay_seq}
		        )
		</foreach>
	</insert>
	<!-- 기본급 정보 입력 종료 -->
	
	<!-- 잔업수당 정보 입력 -->
	<insert id ="insert_job_pay_extra" parameterType="JobPayExtra"  useGeneratedKeys="true" keyProperty="fap_job_pay_extra_seq">
		insert into
			fap_job_pay_extra_tb(
		        fap_job_pay_extra_tm
		        , fap_job_pay_extra_ins_id
		        , fap_job_pay_extra_ins_dt
		        , fap_job_pay_extra_udt_id
		        , fap_job_pay_extra_udt_dt
		        , fap_job_pay_seq
		        )
			values(
				#{fap_job_pay_extra_tm}
		        , #{fap_job_pay_extra_ins_id}
		        , now()
		        , #{fap_job_pay_extra_udt_id}
		        , now()
		        , #{fap_job_pay_seq}
		    )
	</insert>
	<!-- 잔업수당 정보 입력 끝 -->
	
	<!-- 서비스 잔업수당 정보 입력 -->
	<insert id ="insert_job_service_work" parameterType="JobServiceWork"  useGeneratedKeys="true" keyProperty="fap_job_service_work_seq">
		insert into
			fap_job_service_work_tb(
		        fap_job_service_work_tm
		        , fap_job_service_work_ins_id
		        , fap_job_service_work_ins_dt
		        , fap_job_service_work_udt_id
		        , fap_job_service_work_udt_dt
		        , fap_job_pay_base_seq)
			values(
		        #{fap_job_service_work_tm}
		        , #{fap_job_service_work_ins_id}
		        , now()
		        , #{fap_job_service_work_udt_id}
		        , now()
		        , #{fap_job_pay_base_seq}
		    )
	</insert>
	<!-- 서비스 잔업수당 정보 입력 끝 -->
	
	<!-- 기타수당 정보 입력 -->
	<insert id ="insert_job_pay_etc" parameterType="list"  useGeneratedKeys="true" keyProperty="fap_job_pay_etc_seq">
		insert into
			fap_job_pay_etc_tb(
				fap_job_pay_etc_nm
		        , fap_job_pay_etc_info
		        , fap_job_pay_etc_ins_id
		        , fap_job_pay_etc_ins_dt
		        , fap_job_pay_etc_udt_id
		        , fap_job_pay_etc_udt_dt
		        , fap_job_pay_base_seq
		        )values
		<foreach item ="JobPayEtc" collection="list" index="index" open=" " separator="," close=" ">
			(
				#{JobPayEtc.fap_job_pay_etc_nm}
		        , #{JobPayEtc.fap_job_pay_etc_info}
		        , #{JobPayEtc.fap_job_pay_etc_ins_id}
		        , now()
		        , #{JobPayEtc.fap_job_pay_etc_udt_id}
		        , now()
		        , #{JobPayEtc.fap_job_pay_base_seq}
		        )
		</foreach>
	</insert>
	<!-- 기타수당 정보 입력 끝 -->
	
	<!-- 시험전형 정보 입력 시작 -->
	<insert id ="insert_job_exam" parameterType="JobExam" useGeneratedKeys="true" keyProperty="fap_job_exam_seq">
		insert into fap_job_exam_tb(
			fap_job_exam_gb
			,fap_job_exam_obj
			,fap_job_exam_mail
			,fap_job_exam_tm
			,fap_job_exam_sv
			,fap_job_exam_need
			,fap_job_exam_ins_id
			,fap_job_exam_ins_dt
			,fap_job_exam_udt_id
			,fap_job_exam_udt_dt
			,fap_job_recruit_pcs_seq
		)
		values(	
			#{fap_job_exam_gb}
			,#{fap_job_exam_obj}
			,#{fap_job_exam_mail}
			,#{fap_job_exam_tm}
			,#{fap_job_exam_sv}
			,#{fap_job_exam_need}
			,#{fap_job_exam_ins_id}
			,now()
			,#{fap_job_exam_udt_id}
			,now()
			,#{fap_job_recruit_pcs_seq}
		)
	</insert>
	<!-- 시험전형 정보 입력 종료 -->
	<!-- 시험대상자(기타) 정보 입력 시작 -->
	<insert id ="insert_job_exam_obj_etc" parameterType="JobExamObjEtc">
		insert into fap_job_exam_obj_etc_tb(
			fap_job_exam_obj_etc_seq
			,fap_job_exam_obj_etc_dtl
			,fap_job_exam_obj_etc_ins_id
			,fap_job_exam_obj_etc_ins_dt
			,fap_job_exam_obj_etc_udt_id
			,fap_job_exam_obj_etc_udt_dt
			,fap_job_exam_seq
		)
		values(	
			#{fap_job_exam_obj_etc_seq}
			,#{fap_job_exam_obj_etc_dtl}
			,#{fap_job_exam_obj_etc_ins_id}
			,now()
			,#{fap_job_exam_obj_etc_udt_id}
			,now()
			,#{fap_job_exam_seq}
		)
	</insert>
	<!-- 시험대상자(기타) 정보 입력 종료 -->
	<!-- 시험감독관(기타) 정보 입력 시작 -->
	<insert id ="insert_job_exam_sv_etc" parameterType="JobExamSvEtc">
		insert into fap_job_exam_sv_etc_tb(
			fap_job_exam_sv_etc_seq
			,fap_job_exam_sv_etc_dtl
			,fap_job_exam_sv_etc_ins_id
			,fap_job_exam_sv_etc_ins_dt
			,fap_job_exam_sv_etc_udt_id
			,fap_job_exam_sv_etc_udt_dt
			,fap_job_exam_seq
		)
		values(	
			#{fap_job_exam_sv_etc_seq}
			,#{fap_job_exam_sv_etc_dtl}
			,#{fap_job_exam_sv_etc_ins_id}
			,now()
			,#{fap_job_exam_sv_etc_udt_id}
			,now()
			,#{fap_job_exam_seq}
		)
	</insert>
	<!-- 시험대상자(기타) 정보 입력 종료 -->
	<!-- 시험준비물(기타) 정보 입력 시작 -->
	<insert id ="insert_job_exam_need_etc" parameterType="JobExamNeedEtc">
		insert into fap_job_exam_need_etc_tb(
			fap_job_exam_need_etc_seq
			,fap_job_exam_need_etc_dtl
			,fap_job_exam_need_etc_ins_id
			,fap_job_exam_need_etc_ins_dt
			,fap_job_exam_need_etc_udt_id
			,fap_job_exam_need_etc_udt_dt
			,fap_job_exam_seq
		)
		values(	
			#{fap_job_exam_need_etc_seq}
			,#{fap_job_exam_need_etc_dtl}
			,#{fap_job_exam_need_etc_ins_id}
			,now()
			,#{fap_job_exam_need_etc_udt_id}
			,now()
			,#{fap_job_exam_seq}
		)
	</insert>
	<!-- 시험대상자(기타) 정보 입력 종료 -->
	
	<!-- FAP 시험 파일 저장 시작; -->
	<insert id="insert_job_exam_file" parameterType="JobExamFile">
		insert into
			fap_job_exam_file_tb
			(
				fap_job_exam_seq
				, fap_job_exam_file_saved
				, fap_job_exam_file_origin
				, fap_job_exam_file_ins_id
				, fap_job_exam_file_ins_dt
				, fap_job_exam_file_udt_id
				, fap_job_exam_file_udt_dt
			) values (
				#{fap_job_exam_seq}
				, #{fap_job_exam_file_saved}
				, #{fap_job_exam_file_origin}
				, #{fap_job_exam_file_ins_id}
				, now()
				, #{fap_job_exam_file_udt_id}
				, now()
			)
	</insert>
	<!-- FAP 시험 파일 저장 종료 -->
	<!-- 시험종류 정보 입력 시작 -->
	<insert id ="insert_job_exam_type" parameterType="list">
		insert into fap_job_exam_type_tb(
			fap_job_exam_type_gb
			,fap_job_exam_type_ins_id
			,fap_job_exam_type_ins_dt
			,fap_job_exam_type_udt_id
			,fap_job_exam_type_udt_dt
			,fap_job_exam_seq
		)
		values
		<foreach item ="JobExamType" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobExamType.fap_job_exam_type_gb}
			,#{JobExamType.fap_job_exam_type_ins_id}
			,now()
			,#{JobExamType.fap_job_exam_type_udt_id}
			,now()
			,#{JobExamType.fap_job_exam_seq}
		)
		</foreach>
	</insert>
	<!-- 시험종류 정보 입력 완료  --> 
<!-- 채용공고 저장 완료 -->

<!-- 급여정보 select 원병호-->
	<resultMap type="hashmap" id="JobAdMap">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_isdorm" column="fap_job_ad_isdorm" />
		<result property="fap_job_ad_promotion" column="fap_job_ad_promotion" />
		<result property="fap_job_ad_vacation" column="fap_job_ad_vacation" />
		<result property="fap_job_ad_welfare" column="fap_job_ad_welfare" />
		<collection property="JobIsrList" javaType="java.util.ArrayList" resultMap="JobIsrMap" />
		<collection property="JobDormList" javaType="java.util.ArrayList" resultMap="JobDormMap" />
		<collection property="JobPayList" javaType="java.util.ArrayList" resultMap="JobPayMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayMap">
		<id property="fap_job_pay_seq" column="fap_job_pay_seq" />
		<result property="fap_job_pay_seq" column="fap_job_pay_seq" />
		<result property="fap_job_pay_gb" column="fap_job_pay_gb" />
		<result property="fap_job_pay_info" column="fap_job_pay_info" />
		<result property="fap_job_pay_dtl" column="fap_job_pay_dtl" />
		<collection property="JobPayBaseList" javaType="java.util.ArrayList" resultMap="JobPayBaseMap" />
		<collection property="JobPayExtraList" javaType="java.util.ArrayList" resultMap="JobPayExtraMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayBaseMap">
		<id property="fap_job_pay_base_seq" column="fap_job_pay_base_seq" />
		<result property="fap_job_pay_base_seq" column="fap_job_pay_base_seq" />
		<result property="fap_job_pay_base_gb" column="fap_job_pay_base_gb" />
		<result property="fap_job_pay_base_info" column="fap_job_pay_base_info" />
		<collection property="JobServiceWorkList" javaType="java.util.ArrayList" resultMap="JobServiceWorkMap" />
		<collection property="JobPayEtcList" javaType="java.util.ArrayList" resultMap="JobPayEtcMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobServiceWorkMap">
		<id property="fap_job_service_work_seq" column="fap_job_service_work_seq" />
		<result property="fap_job_service_work_seq" column="fap_job_service_work_seq" />
		<result property="fap_job_service_work_tm" column="fap_job_service_work_tm" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayEtcMap">
		<id property="fap_job_pay_etc_seq" column="fap_job_pay_etc_seq" />
		<result property="fap_job_pay_etc_seq" column="fap_job_pay_etc_seq" />
		<result property="fap_job_pay_etc_nm" column="fap_job_pay_etc_nm" />
		<result property="fap_job_pay_etc_info" column="fap_job_pay_etc_info" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayExtraMap">
		<id property="fap_job_pay_extra_seq" column="fap_job_pay_extra_seq" />
		<result property="fap_job_pay_extra_seq" column="fap_job_pay_extra_seq" />
		<result property="fap_job_pay_extra_tm" column="fap_job_pay_extra_tm" />
	</resultMap>
	<resultMap type="hashmap" id="JobIsrMap">
		<id property="fap_job_isr_seq" column="fap_job_isr_seq" />
		<result property="fap_job_isr_seq" column="fap_job_isr_seq" />
		<result property="fap_job_isr_gb" column="fap_job_isr_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobDormMap">
		<id property="fap_job_dorm_seq" column="fap_job_dorm_seq" />
		<result property="fap_job_dorm_seq" column="fap_job_dorm_seq" />
		<result property="fap_job_dorm_lo" column="fap_job_dorm_lo" />
		<result property="fap_job_dorm_cost" column="fap_job_dorm_cost" />
		<result property="fap_job_dorm_note" column="fap_job_dorm_note" />
	</resultMap>
		
	<select id="select_job_pay" resultMap="JobAdMap" parameterType="long">
		select
			ad.fap_job_ad_seq
			, ad.fap_job_ad_isdorm
		    , ad.fap_job_ad_promotion
		    , ad.fap_job_ad_vacation
		    , ad.fap_job_ad_welfare
			, pay.fap_job_pay_seq
			, pay.fap_job_pay_gb
			, pay.fap_job_pay_info
			, pay.fap_job_pay_dtl
			, base.fap_job_pay_base_seq
			, base.fap_job_pay_base_gb
			, base.fap_job_pay_base_info
			, base.fap_job_pay_seq
			, extra.fap_job_pay_extra_seq
			, extra.fap_job_pay_extra_tm
			, extra.fap_job_pay_seq
			, service.fap_job_service_work_seq
			, service.fap_job_service_work_tm
			, service.fap_job_pay_base_seq
			, etc.fap_job_pay_etc_seq
			, etc.fap_job_pay_etc_nm
			, etc.fap_job_pay_etc_info
			, etc.fap_job_pay_base_seq
		    , isr.fap_job_isr_seq
		    , isr.fap_job_isr_gb
		    , dorm.fap_job_dorm_seq
		    , dorm.fap_job_dorm_lo
		    , dorm.fap_job_dorm_cost
		    , dorm.fap_job_dorm_note
		from
			fap_job_ad_tb ad
		left join
			fap_job_pay_tb pay
		on
			ad.fap_job_ad_seq = pay.fap_job_ad_seq
		left join
			fap_job_pay_base_tb base
		on
			pay.fap_job_pay_seq = base.fap_job_pay_seq 
		left join
			fap_job_pay_extra_tb extra
		on
			pay.fap_job_pay_seq = extra.fap_job_pay_seq
		left join
			fap_job_service_work_tb service
		on
			base.fap_job_pay_base_seq = service.fap_job_pay_base_seq
		left join
			fap_job_pay_etc_tb etc
		on
			base.fap_job_pay_base_seq = etc.fap_job_pay_base_seq
		left join
			fap_job_isr_tb isr
		on
			ad.fap_job_ad_seq = isr.fap_job_ad_seq
		left join
			fap_job_dorm_tb dorm
		on
			ad.fap_job_ad_seq = dorm.fap_job_ad_seq
		where
			ad.fap_job_ad_seq = #{fap_job_ad_seq}
		order by 
			pay.fap_job_pay_seq, base.fap_job_pay_base_seq
	</select>
	<!-- 급여정보 select 끝 원병호-->
	
	<!-- FAP 채용공고 정보, 주요 업무, 인재상, 기술상세 가져오기 시작; 2019. 1. 11. 김준영 -->	
	<resultMap type="hashmap" id="fap_job_ad">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_job_ad_ideal_person" column="fap_job_ad_ideal_person"/>
		<result property="fap_job_ad_age" column="fap_job_ad_age"/>
		<result property="fap_job_ad_gender" column="fap_job_ad_gender"/>
		
		<association property="fap_job_ja_level" javaType="java.util.HashMap" resultMap="fap_job_ja_level"/>
		<collection property="fap_job_pref" javaType="java.util.ArrayList" resultMap="fap_job_pref" />
		<collection property="fap_job_work" javaType="java.util.ArrayList" resultMap="fap_job_work" />
	</resultMap>
	<resultMap type="hashmap" id="fap_job_ja_level">
		<id property="fap_job_ja_level_seq" column="fap_job_ja_level_seq"/>
		<result property="fap_job_ja_level_gb" column="fap_job_ja_level_gb"/>
		<result property="fap_job_ja_level_dtl" column="fap_job_ja_level_dtl"/>
		<result property="fap_job_ja_level_ins_id" column="fap_job_ja_level_ins_id"/>
		<result property="fap_job_ja_level_ins_dt" column="fap_job_ja_level_ins_dt"/>
		<result property="fap_job_ja_level_udt_id" column="fap_job_ja_level_udt_id"/>
		<result property="fap_job_ja_level_udt_dt" column="fap_job_ja_level_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="fap_job_pref">
		<id property="fap_job_pref_seq" column="fap_job_pref_seq"/>
		<result property="fap_job_pref_gb" column="fap_job_pref_gb"/>
		<result property="fap_job_pref_dtl" column="fap_job_pref_dtl"/>
		<result property="fap_job_pref_ins_id" column="fap_job_pref_ins_id"/>
		<result property="fap_job_pref_ins_dt" column="fap_job_pref_ins_dt"/>
		<result property="fap_job_pref_udt_id" column="fap_job_pref_udt_id"/>
		<result property="fap_job_pref_udt_dt" column="fap_job_pref_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="fap_job_work">
		<id property="fap_job_work_seq" column="fap_job_work_seq"/>
		<result property="fap_job_work_gb" column="fap_job_work_gb"/>
		<result property="fap_job_work_dtl" column="fap_job_work_dtl"/>
		<result property="fap_job_work_ins_id" column="fap_job_work_ins_id"/>
		<result property="fap_job_work_ins_dt" column="fap_job_work_ins_dt"/>
		<result property="fap_job_work_udt_id" column="fap_job_work_udt_id"/>
		<result property="fap_job_work_udt_dt" column="fap_job_work_udt_dt"/>
	</resultMap>
	
	<select id="select_job_ideal_person" parameterType="long" resultMap="fap_job_ad">
		select
			job_ad.fap_job_ad_seq as fap_job_ad_seq
			, job_ad.fap_job_ad_ideal_person as fap_job_ad_ideal_person
			, job_ad.fap_job_ad_age as fap_job_ad_age
			, job_ad.fap_job_ad_gender as fap_job_ad_gender
			
			, job_ja_level.fap_job_ja_level_seq as fap_job_ja_level_seq
			, job_ja_level.fap_job_ja_level_gb as fap_job_ja_level_gb
			, job_ja_level.fap_job_ja_level_dtl as fap_job_ja_level_dtl
			, job_ja_level.fap_job_ja_level_ins_id as fap_job_ja_level_ins_id
			, job_ja_level.fap_job_ja_level_ins_dt as fap_job_ja_level_ins_dt
			, job_ja_level.fap_job_ja_level_udt_id as fap_job_ja_level_udt_id
			, job_ja_level.fap_job_ja_level_udt_dt as fap_job_ja_level_udt_dt
			
			, job_pref.fap_job_pref_seq as fap_job_pref_seq
			, job_pref.fap_job_pref_gb as fap_job_pref_gb
			, job_pref.fap_job_pref_dtl as fap_job_pref_dtl
			, job_pref.fap_job_pref_ins_id as fap_job_pref_ins_id
			, job_pref.fap_job_pref_ins_dt as fap_job_pref_ins_dt
			, job_pref.fap_job_pref_udt_id as fap_job_pref_udt_id
			, job_pref.fap_job_pref_udt_dt as fap_job_pref_udt_dt
			
			, job_work.fap_job_work_seq as fap_job_work_seq
			, job_work.fap_job_work_gb as fap_job_work_gb
			, job_work.fap_job_work_dtl as fap_job_work_dtl
			, job_work.fap_job_work_ins_id as fap_job_work_ins_id
			, job_work.fap_job_work_ins_dt as fap_job_work_ins_dt
			, job_work.fap_job_work_udt_id as fap_job_work_udt_id
			, job_work.fap_job_work_udt_dt as fap_job_work_udt_dt
		from
			fap_job_ad_tb as job_ad
		left join fap_job_ja_level_tb as job_ja_level
			on job_ad.fap_job_ad_seq = job_ja_level.fap_job_ad_seq
		left join fap_job_pref_tb as job_pref
			on job_ad.fap_job_ad_seq = job_pref.fap_job_ad_seq
		left join fap_job_work_tb as job_work
			on job_ad.fap_job_ad_seq = job_work.fap_job_ad_seq
		where
			job_ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 채용공고 정보, 주요 업무, 인재상, 기술상세 가져오기 종료 -->
	
	<!-- FAP 채용공고 정보 가져오기 시작; 2019. 1. 14. 김준영 -->
	<select id="select_job_ad" parameterType="long" resultType="JobAd">
		select
			fap_job_ad_seq
			, fap_job_ad_major_business
			, fap_job_ad_homepage
			, fap_job_ad_est_dt
			, fap_job_ad_stock
			, fap_job_ad_3years_avg_sales
			, fap_job_ad_employee_num
			, fap_job_ad_foreigner_num
			, fap_job_ad_korean_num
			, fap_job_ad_postcode
			, fap_job_ad_address
			, fap_job_ad_address_dtl
			, fap_jobfair_seq
			, fap_jobfair_divide_seq
			, fap_job_ad_open_grade
			, fap_job_ad_qual_dpe
			, fap_job_ad_terms_dpe
			, fap_job_ad_coc_agree
			, fap_job_ad_overlap
			, fap_comp_id
			, fap_job_ad_category_type
		from
			fap_job_ad_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 채용공고 정보 가져오기 종료 -->
	
	<!-- FAP 채용전형 정보 가져오기 시작; 2019. 1. 14. 김준영 -->
	<resultMap type="hashmap" id="job_recruit_pcs">
		<id property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_job_recruit_pcs_gb" column="fap_job_recruit_pcs_gb"/>
		<result property="fap_job_recruit_pcs_dtl" column="fap_job_recruit_pcs_dtl"/>
		<result property="fap_job_recruit_pcs_od" column="fap_job_recruit_pcs_od"/>
		<result property="fap_job_recruit_pcs_ins_id" column="fap_job_recruit_pcs_ins_id"/>
		<result property="fap_job_recruit_pcs_ins_dt" column="fap_job_recruit_pcs_ins_dt"/>
		<result property="fap_job_recruit_pcs_udt_id" column="fap_job_recruit_pcs_udt_id"/>
		<result property="fap_job_recruit_pcs_udt_dt" column="fap_job_recruit_pcs_udt_dt"/>
		
		<association property="job_exam" javaType="java.util.HashMap" resultMap="job_exam"/>
		<association property="job_itv" javaType="java.util.HashMap" resultMap="job_itv"/>
		<association property="job_test_etc" javaType="java.util.HashMap" resultMap="job_test_etc"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam">
		<id property="fap_job_exam_seq" column="fap_job_exam_seq"/>
		<result property="fap_job_exam_gb" column="fap_job_exam_gb"/>
		<result property="fap_job_exam_gb" column="fap_job_exam_gb"/>
		<result property="fap_job_exam_obj" column="fap_job_exam_obj"/>
		<result property="fap_job_exam_mail" column="fap_job_exam_mail"/>
		<result property="fap_job_exam_tm" column="fap_job_exam_tm"/>
		<result property="fap_job_exam_sv" column="fap_job_exam_sv"/>
		<result property="fap_job_exam_need" column="fap_job_exam_need"/>
		<result property="fap_job_exam_ins_id" column="fap_job_exam_ins_id"/>
		<result property="fap_job_exam_ins_dt" column="fap_job_exam_ins_dt"/>
		<result property="fap_job_exam_udt_id" column="fap_job_exam_udt_id"/>
		<result property="fap_job_exam_udt_dt" column="fap_job_exam_udt_dt"/>

		<association property="job_exam_need_etc" javaType="java.util.HashMap" resultMap="job_exam_need_etc"/>
		<association property="job_exam_sv_etc" javaType="java.util.HashMap" resultMap="job_exam_sv_etc"/>
		<association property="job_exam_obj_etc" javaType="java.util.HashMap" resultMap="job_exam_obj_etc"/>
		<association property="job_exam_file" javaType="java.util.HashMap" resultMap="job_exam_file"/>
		<collection property="job_exam_type" javaType="java.util.ArrayList" resultMap="job_exam_type"/>
	</resultMap>
	
	<resultMap type="hashmap" id="job_exam_type">
		<id property="fap_job_exam_type_seq" column="fap_job_exam_type_seq"/>
		<result property="fap_job_exam_type_gb" column="fap_job_exam_type_gb"/>
		<result property="fap_job_exam_type_ins_id" column="fap_job_exam_type_ins_id"/>
		<result property="fap_job_exam_type_ins_dt" column="fap_job_exam_type_ins_dt"/>
		<result property="fap_job_exam_type_udt_id" column="fap_job_exam_type_udt_id"/>
		<result property="fap_job_exam_type_udt_dt" column="fap_job_exam_type_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_need_etc">
		<id property="fap_job_exam_need_etc_seq" column="fap_job_exam_need_etc_seq"/>
		<result property="fap_job_exam_need_etc_dtl" column="fap_job_exam_need_etc_dtl"/>
		<result property="fap_job_exam_need_etc_ins_id" column="fap_job_exam_need_etc_ins_id"/>
		<result property="fap_job_exam_need_etc_ins_dt" column="fap_job_exam_need_etc_ins_dt"/>
		<result property="fap_job_exam_need_etc_udt_id" column="fap_job_exam_need_etc_udt_id"/>
		<result property="fap_job_exam_need_etc_udt_dt" column="fap_job_exam_need_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_sv_etc">
		<id property="fap_job_exam_sv_etc_seq" column="fap_job_exam_sv_etc_seq"/>
		<result property="fap_job_exam_sv_etc_dtl" column="fap_job_exam_sv_etc_dtl"/>
		<result property="fap_job_exam_sv_etc_ins_id" column="fap_job_exam_sv_etc_ins_id"/>
		<result property="fap_job_exam_sv_etc_ins_dt" column="fap_job_exam_sv_etc_ins_dt"/>
		<result property="fap_job_exam_sv_etc_udt_id" column="fap_job_exam_sv_etc_udt_id"/>
		<result property="fap_job_exam_sv_etc_udt_dt" column="fap_job_exam_sv_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_obj_etc">
		<id property="fap_job_exam_obj_etc_seq" column="fap_job_exam_obj_etc_seq"/>
		<result property="fap_job_exam_obj_etc_dtl" column="fap_job_exam_obj_etc_dtl"/>
		<result property="fap_job_exam_obj_etc_ins_id" column="fap_job_exam_obj_etc_ins_id"/>
		<result property="fap_job_exam_obj_etc_ins_dt" column="fap_job_exam_obj_etc_ins_dt"/>
		<result property="fap_job_exam_obj_etc_udt_id" column="fap_job_exam_obj_etc_udt_id"/>
		<result property="fap_job_exam_obj_etc_udt_dt" column="fap_job_exam_obj_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_file">
		<id property="fap_job_exam_file_seq" column="fap_job_exam_file_seq"/>
		<result property="fap_job_exam_file_saved" column="fap_job_exam_file_saved"/>
		<result property="fap_job_exam_file_origin" column="fap_job_exam_file_origin"/>
		<result property="fap_job_exam_file_ins_id" column="fap_job_exam_file_ins_id"/>
		<result property="fap_job_exam_file_ins_dt" column="fap_job_exam_file_ins_dt"/>
		<result property="fap_job_exam_file_udt_id" column="fap_job_exam_file_udt_id"/>
		<result property="fap_job_exam_file_udt_dt" column="fap_job_exam_file_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_itv">
		<id property="fap_job_itv_seq" column="fap_job_itv_seq"/>
		<result property="fap_job_itv_gb" column="fap_job_itv_gb"/>
		<result property="fap_job_itv_obj" column="fap_job_itv_obj"/>
		<result property="fap_job_itv_tp" column="fap_job_itv_tp"/>
		<result property="fap_job_itv_tm" column="fap_job_itv_tm"/>
		<result property="fap_job_itv_skype" column="fap_job_itv_skype"/>
		<result property="fap_job_itv_ins_id" column="fap_job_itv_ins_id"/>
		<result property="fap_job_itv_ins_dt" column="fap_job_itv_ins_dt"/>
		<result property="fap_job_itv_udt_id" column="fap_job_itv_udt_id"/>
		<result property="fap_job_itv_udt_dt" column="fap_job_itv_udt_dt"/>
		
		<association property="job_itv_tp_etc" javaType="java.util.HashMap" resultMap="job_itv_tp_etc"/>
		<association property="job_itv_obj_etc" javaType="java.util.HashMap" resultMap="job_itv_obj_etc"/>
	</resultMap>
	<resultMap type="hashmap" id="job_itv_tp_etc">
		<id property="fap_job_itv_tp_etc_seq" column="fap_job_itv_tp_etc_seq"/>
		<result property="fap_job_itv_tp_etc_dtl" column="fap_job_itv_tp_etc_dtl"/>
		<result property="fap_job_itv_tp_etc_ins_id" column="fap_job_itv_tp_etc_ins_id"/>
		<result property="fap_job_itv_tp_etc_ins_dt" column="fap_job_itv_tp_etc_ins_dt"/>
		<result property="fap_job_itv_tp_etc_udt_id" column="fap_job_itv_tp_etc_udt_id"/>
		<result property="fap_job_itv_tp_etc_udt_dt" column="fap_job_itv_tp_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_itv_obj_etc">
		<id property="fap_job_itv_obj_etc_seq" column="fap_job_itv_obj_etc_seq"/>
		<result property="fap_job_itv_obj_etc_dtl" column="fap_job_itv_obj_etc_dtl"/>
		<result property="fap_job_itv_obj_etc_ins_id" column="fap_job_itv_obj_etc_ins_id"/>
		<result property="fap_job_itv_obj_etc_ins_dt" column="fap_job_itv_obj_etc_ins_dt"/>
		<result property="fap_job_itv_obj_etc_udt_id" column="fap_job_itv_obj_etc_udt_id"/>
		<result property="fap_job_itv_obj_etc_udt_dt" column="fap_job_itv_obj_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_test_etc">
		<id property="fap_job_test_etc_seq" column="fap_job_test_etc_seq"/>
		<result property="fap_job_test_etc_obj" column="fap_job_test_etc_obj"/>
		<result property="fap_job_test_etc_dtl" column="fap_job_test_etc_dtl"/>
		<result property="fap_job_test_etc_ins_id" column="fap_job_test_etc_ins_id"/>
		<result property="fap_job_test_etc_ins_dt" column="fap_job_test_etc_ins_dt"/>
		<result property="fap_job_test_etc_udt_id" column="fap_job_test_etc_udt_id"/>
		<result property="fap_job_test_etc_udt_dt" column="fap_job_test_etc_udt_dt"/>
		<association property="job_test_etc_obj" javaType="java.util.HashMap" resultMap="job_test_etc_obj"/>
	</resultMap>
	<resultMap type="hashmap" id="job_test_etc_obj">
		<id property="fap_job_test_etc_obj_seq" column="fap_job_test_etc_obj_seq"/>
		<result property="fap_job_test_etc_obj_dtl" column="fap_job_test_etc_obj_dtl"/>
		<result property="fap_job_test_etc_obj_ins_id" column="fap_job_test_etc_obj_ins_id"/>
		<result property="fap_job_test_etc_obj_ins_dt" column="fap_job_test_etc_obj_ins_dt"/>
		<result property="fap_job_test_etc_obj_udt_id" column="fap_job_test_etc_obj_udt_id"/>
		<result property="fap_job_test_etc_obj_udt_dt" column="fap_job_test_etc_obj_udt_dt"/>
	</resultMap>
	<select id="select_job_recruit_pcs" parameterType="long" resultMap="job_recruit_pcs">
		select
			job_recruit_pcs.fap_job_recruit_pcs_seq
			, job_recruit_pcs.fap_job_ad_seq
			, job_recruit_pcs.fap_job_recruit_pcs_gb
			, job_recruit_pcs.fap_job_recruit_pcs_dtl
			, job_recruit_pcs.fap_job_recruit_pcs_od
			, job_recruit_pcs.fap_job_recruit_pcs_ins_id
			, job_recruit_pcs.fap_job_recruit_pcs_ins_dt
			, job_recruit_pcs.fap_job_recruit_pcs_udt_id
			, job_recruit_pcs.fap_job_recruit_pcs_udt_dt
			
			, job_exam.fap_job_exam_seq
			, job_exam.fap_job_exam_gb
			, job_exam.fap_job_exam_obj
			, job_exam.fap_job_exam_mail
			, job_exam.fap_job_exam_tm
			, job_exam.fap_job_exam_sv
			, job_exam.fap_job_exam_need
			, job_exam.fap_job_exam_ins_id
			, job_exam.fap_job_exam_ins_dt
			, job_exam.fap_job_exam_udt_id
			, job_exam.fap_job_exam_udt_dt
			
			, job_exam_type.fap_job_exam_type_seq
			, job_exam_type.fap_job_exam_type_gb
			, job_exam_type.fap_job_exam_type_ins_id
			, job_exam_type.fap_job_exam_type_ins_dt
			, job_exam_type.fap_job_exam_type_udt_id
			, job_exam_type.fap_job_exam_type_udt_dt
			
			, job_exam_need.fap_job_exam_need_etc_seq
			, job_exam_need.fap_job_exam_need_etc_dtl
			, job_exam_need.fap_job_exam_need_etc_ins_id
			, job_exam_need.fap_job_exam_need_etc_ins_dt
			, job_exam_need.fap_job_exam_need_etc_udt_id
			, job_exam_need.fap_job_exam_need_etc_udt_dt
			
			, job_exam_sv_etc.fap_job_exam_sv_etc_seq
			, job_exam_sv_etc.fap_job_exam_sv_etc_dtl
			, job_exam_sv_etc.fap_job_exam_sv_etc_ins_id
			, job_exam_sv_etc.fap_job_exam_sv_etc_ins_dt
			, job_exam_sv_etc.fap_job_exam_sv_etc_udt_id
			, job_exam_sv_etc.fap_job_exam_sv_etc_udt_dt
			
			, job_exam_obj_etc.fap_job_exam_obj_etc_seq
			, job_exam_obj_etc.fap_job_exam_obj_etc_dtl
			, job_exam_obj_etc.fap_job_exam_obj_etc_ins_id
			, job_exam_obj_etc.fap_job_exam_obj_etc_ins_dt
			, job_exam_obj_etc.fap_job_exam_obj_etc_udt_id
			, job_exam_obj_etc.fap_job_exam_obj_etc_udt_dt

			, job_exam_file.fap_job_exam_file_seq
			, job_exam_file.fap_job_exam_file_saved
			, job_exam_file.fap_job_exam_file_origin
			, job_exam_file.fap_job_exam_file_ins_id
			, job_exam_file.fap_job_exam_file_ins_dt
			, job_exam_file.fap_job_exam_file_udt_id
			, job_exam_file.fap_job_exam_file_udt_dt
			
			, job_itv.fap_job_itv_seq
			, job_itv.fap_job_itv_gb
			, job_itv.fap_job_itv_obj
			, job_itv.fap_job_itv_tp
			, job_itv.fap_job_itv_tm
			, job_itv.fap_job_itv_skype
			, job_itv.fap_job_itv_ins_id
			, job_itv.fap_job_itv_ins_dt
			, job_itv.fap_job_itv_udt_id
			, job_itv.fap_job_itv_udt_dt

			, job_itv_tp_etc.fap_job_itv_tp_etc_seq
			, job_itv_tp_etc.fap_job_itv_tp_etc_dtl
			, job_itv_tp_etc.fap_job_itv_tp_etc_ins_id
			, job_itv_tp_etc.fap_job_itv_tp_etc_ins_dt
			, job_itv_tp_etc.fap_job_itv_tp_etc_udt_id
			, job_itv_tp_etc.fap_job_itv_tp_etc_udt_dt
			
			, job_itv_obj_etc.fap_job_itv_obj_etc_seq
			, job_itv_obj_etc.fap_job_itv_obj_etc_dtl
			, job_itv_obj_etc.fap_job_itv_obj_etc_ins_id
			, job_itv_obj_etc.fap_job_itv_obj_etc_ins_dt
			, job_itv_obj_etc.fap_job_itv_obj_etc_udt_id
			, job_itv_obj_etc.fap_job_itv_obj_etc_udt_dt

			, job_test_etc.fap_job_test_etc_seq
			, job_test_etc.fap_job_test_etc_obj
			, job_test_etc.fap_job_test_etc_dtl
			, job_test_etc.fap_job_test_etc_ins_id
			, job_test_etc.fap_job_test_etc_ins_dt
			, job_test_etc.fap_job_test_etc_udt_id
			, job_test_etc.fap_job_test_etc_udt_dt
			
			, job_test_etc_obj.fap_job_test_etc_obj_seq
			, job_test_etc_obj.fap_job_test_etc_obj_dtl
			, job_test_etc_obj.fap_job_test_etc_obj_ins_id
			, job_test_etc_obj.fap_job_test_etc_obj_ins_dt
			, job_test_etc_obj.fap_job_test_etc_obj_udt_id
			, job_test_etc_obj.fap_job_test_etc_obj_udt_dt

		from
			fap_job_recruit_pcs_tb as job_recruit_pcs
		left join fap_job_exam_tb as job_exam
			on job_recruit_pcs.fap_job_recruit_pcs_seq = job_exam.fap_job_recruit_pcs_seq
		left join fap_job_exam_type_tb as job_exam_type
			on job_exam.fap_job_exam_seq = job_exam_type.fap_job_exam_seq
		left join fap_job_exam_need_etc_tb as job_exam_need
			on job_exam.fap_job_exam_seq = job_exam_need.fap_job_exam_seq
		left join fap_job_exam_sv_etc_tb as job_exam_sv_etc
			on job_exam.fap_job_exam_seq = job_exam_sv_etc.fap_job_exam_seq
		left join fap_job_exam_obj_etc_tb as job_exam_obj_etc
			on job_exam.fap_job_exam_seq = job_exam_obj_etc.fap_job_exam_seq
		left join fap_job_exam_file_tb as job_exam_file
			on job_exam.fap_job_exam_seq = job_exam_file.fap_job_exam_seq
		left join fap_job_itv_tb as job_itv
			on job_recruit_pcs.fap_job_recruit_pcs_seq = job_itv.fap_job_recruit_pcs_seq
		left join fap_job_itv_tp_etc_tb as job_itv_tp_etc
			on job_itv.fap_job_itv_seq = job_itv_tp_etc.fap_job_itv_seq
		left join fap_job_itv_obj_etc_tb as job_itv_obj_etc
			on job_itv.fap_job_itv_seq = job_itv_obj_etc.fap_job_itv_seq
		left join fap_job_test_etc_tb as job_test_etc
			on job_recruit_pcs.fap_job_recruit_pcs_seq = job_test_etc.fap_job_recruit_pcs_seq
		left join fap_job_test_etc_obj_tb as job_test_etc_obj
			on job_test_etc_obj.fap_job_test_etc_seq = job_test_etc.fap_job_test_etc_seq
		where
			job_recruit_pcs.fap_job_ad_seq = #{fap_job_ad_seq}
		order by
			job_recruit_pcs.fap_job_recruit_pcs_od, job_exam_type.fap_job_exam_type_seq
	</select>
	<!-- FAP 채용전형 정보 가져오기 종료 -->
	
	<!-- 기본 고용정보 select 시작 1.14 이재준-->
	<resultMap type="hashmap" id="FapJobAdMap">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_title" column="fap_job_ad_title" />
		<result property="fap_job_ad_worktime" column="fap_job_ad_worktime" />
		<result property="fap_job_ad_overtime" column="fap_job_ad_overtime" />
		<result property="fap_job_ad_hire_type" column="fap_job_ad_hire_type" />
		<result property="fap_job_ad_intern" column="fap_job_ad_intern" />
		<result property="fap_job_ad_recruit_num" column="fap_job_ad_recruit_num" />
		<collection property="JobCategoryList" javaType="java.util.ArrayList" resultMap="JobCategoryMap" />
		<collection property="JobCategoryEtcList" javaType="java.util.ArrayList" resultMap="JobCategoryEtcMap" />
		<collection property="JobTrialList" javaType="java.util.ArrayList" resultMap="JobTrialMap" />
		<collection property="JobJitList" javaType="java.util.ArrayList" resultMap="JobJitEmployeeMap" />
		<collection property="JobWorkplaceList" javaType="java.util.ArrayList" resultMap="JobWorkplaceMap" />
		<collection property="JobWorkplaceDtlList" javaType="java.util.ArrayList" resultMap="JobWorkplaceDtlMap" />
		<collection property="JobWorkplaceEtcList" javaType="java.util.ArrayList" resultMap="JobWorkplaceEtcMap" />
		<collection property="JobJoinDtList" javaType="java.util.ArrayList" resultMap="JobJoinDtMap" />
		<collection property="JobCompList" javaType="java.util.ArrayList" resultMap="JobCompMap" />
	</resultMap>	
	<resultMap type="hashmap" id="JobCategoryMap">
		<id property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_gb" column="fap_job_category_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobCategoryEtcMap">
		<id property="fap_job_category_etc_seq" column="fap_job_category_etc_seq" />
		<result property="fap_job_category_etc_dtl" column="fap_job_category_etc_dtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobTrialMap">
		<id property="fap_job_trial_seq" column="fap_job_trial_seq" />
		<result property="fap_job_trial_seq" column="fap_job_trial_seq" />
		<result property="fap_job_trial_pd" column="fap_job_trial_pd" />
		<result property="fap_job_trial_pay" column="fap_job_trial_pay" />
		<result property="fap_job_trial_pay_equal" column="fap_job_trial_pay_equal" />
	</resultMap>
	<resultMap type="hashmap" id="JobJitEmployeeMap">
		<id property="fap_job_jit_employee_seq" column="fap_job_jit_employee_seq" />
		<result property="fap_job_jit_employee_seq" column="fap_job_jit_employee_seq" />
		<result property="fap_job_jit_employee_isswitch" column="fap_job_jit_employee_isswitch" />
		<result property="fap_job_jit_employee_term" column="fap_job_jit_employee_term" />
		<result property="fap_job_jit_employee_dtl" column="fap_job_jit_employee_dtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceMap">
		<id property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<result property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<result property="fap_job_workplace_gb" column="fap_job_workplace_gb" />
		<collection property="JobWorkplaceDtlList" javaType="java.util.ArrayList" resultMap="JobWorkplaceDtlMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceDtlMap">
		<id property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_gb" column="fap_job_workplace_dtl_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceEtcMap">
		<id property="fap_job_workplace_etc_seq" column="fap_job_workplace_etc_seq" />
		<result property="fap_job_workplace_etc_address" column="fap_job_workplace_etc_address" />
	</resultMap>
	<resultMap type="hashmap" id="JobJoinDtMap">
		<id property="fap_job_join_dt_seq" column="fap_job_join_dt_seq" />
		<result property="fap_job_join_dt_seq" column="fap_job_join_dt_seq" />
		<result property="fap_job_join_dt_gb" column="fap_job_join_dt_gb" />
		<result property="fap_job_join_dt_dtl" column="fap_job_join_dt_dtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobCompMap">
		<id property="fap_job_comp_seq" column="fap_job_comp_seq" />
		<result property="fap_job_comp_seq" column="fap_job_comp_seq" />
		<result property="fap_job_comp_nm" column="fap_job_comp_nm" />
		<result property="fap_job_comp_gb" column="fap_job_comp_gb" />
	</resultMap>
	<select id="select_job_category" resultMap="FapJobAdMap" parameterType="hashmap">
		select
			ad.fap_job_ad_seq
			, ad.fap_job_ad_title
		    , ad.fap_job_ad_worktime
		    , ad.fap_job_ad_overtime
		    , ad.fap_job_ad_hire_type
		    , ad.fap_job_ad_intern
		   	, ad.fap_job_ad_recruit_num
		    , category.fap_job_category_seq
		    , category.fap_job_category_gb
		    , category_etc.fap_job_category_etc_seq
		    , category_etc.fap_job_category_etc_dtl
			, trial.fap_job_trial_seq
		    , trial.fap_job_trial_pd
		    , trial.fap_job_trial_pay
			, trial.fap_job_trial_pay_equal
			, jit.fap_job_jit_employee_seq
		    , jit.fap_job_jit_employee_isswitch
		    , jit.fap_job_jit_employee_term
			, jit.fap_job_jit_employee_dtl
			, workplace.fap_job_workplace_seq
			, workplace.fap_job_workplace_gb
			, workplacedtl.fap_job_workplace_dtl_seq
			, workplacedtl.fap_job_workplace_dtl_gb
			, workplaceetc.fap_job_workplace_etc_seq
			, workplaceetc.fap_job_workplace_etc_address
			, joindt.fap_job_join_dt_seq
		    , joindt.fap_job_join_dt_gb
		    , joindt.fap_job_join_dt_dtl
		    , comp.fap_job_comp_seq
		    , comp.fap_job_comp_gb
		    , comp.fap_job_comp_nm
		from
			fap_job_ad_tb ad
		left join
			fap_job_category_tb category
		on
			ad.fap_job_ad_seq = category.fap_job_ad_seq
		left join
			fap_job_category_etc_tb category_etc
		on
			category.fap_job_category_seq = category_etc.fap_job_category_seq
		left join
			fap_job_trial_tb trial
		on
			ad.fap_job_ad_seq = trial.fap_job_ad_seq
		left join
			fap_job_jit_employee_tb jit
		on
			ad.fap_job_ad_seq = jit.fap_job_ad_seq
		left join
			fap_job_workplace_tb workplace
		on
			ad.fap_job_ad_seq = workplace.fap_job_ad_seq
		left join
			fap_job_workplace_dtl_tb workplacedtl
		on
			workplace.fap_job_workplace_seq = workplacedtl.fap_job_workplace_seq
		left join
			fap_job_workplace_etc_tb workplaceetc
		on
			workplace.fap_job_workplace_seq = workplaceetc.fap_job_workplace_seq
		left join
			fap_job_join_dt_tb joindt
		on
			ad.fap_job_ad_seq = joindt.fap_job_ad_seq
		left join
			fap_job_comp_tb comp
		on
			ad.fap_job_ad_seq = comp.fap_job_ad_seq
		where
			ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 기본 고용정보 select 끝 -->

	<!-- 회사 아이디 발급 여부 검색 시작 -->
	<select id="select_fap_comp_id" parameterType="String" resultType="String">
		select
			fap_comp_id
		from
			fap_comp_user_connect_tb
		where
			user_id = #{user_id}
			and fap_comp_user_connect_ck = 'B3800'	
	</select>	
	<!-- 회사 아이디 발급 여부 검색 끝 -->
	
	<!-- 채용공고정보 수정 2019.1.23. 이재준 -->
	<update id="update_job_ad" parameterType="JobAd">
		update
			fap_job_ad_tb
		set
			fap_job_ad_major_business = #{fap_job_ad_major_business}
		    , fap_job_ad_homepage = #{fap_job_ad_homepage}
		    , fap_job_ad_est_dt = #{fap_job_ad_est_dt}
		    , fap_job_ad_stock = #{fap_job_ad_stock}
		    , fap_job_ad_3years_avg_sales = #{fap_job_ad_3years_avg_sales}
		    , fap_job_ad_employee_num = #{fap_job_ad_employee_num}
		    , fap_job_ad_foreigner_num = #{fap_job_ad_foreigner_num}
		    , fap_job_ad_korean_num = #{fap_job_ad_korean_num}
		    , fap_job_ad_postcode = #{fap_job_ad_postcode}
		    , fap_job_ad_address = #{fap_job_ad_address}
		    , fap_job_ad_address_dtl = #{fap_job_ad_address_dtl}
		    , fap_job_ad_title = #{fap_job_ad_title}
		    , fap_job_ad_worktime = #{fap_job_ad_worktime}
		    , fap_job_ad_overtime = #{fap_job_ad_overtime}
		    , fap_job_ad_hire_type = #{fap_job_ad_hire_type}
		    , fap_job_ad_intern = #{fap_job_ad_intern}
		    , fap_job_ad_recruit_num = #{fap_job_ad_recruit_num}
		    , fap_job_ad_ideal_person = #{fap_job_ad_ideal_person}
		    , fap_job_ad_age = #{fap_job_ad_age}
			, fap_job_ad_gender = #{fap_job_ad_gender}
		    , fap_job_ad_isdorm = #{fap_job_ad_isdorm}
		    , fap_job_ad_promotion = #{fap_job_ad_promotion}
		    , fap_job_ad_vacation = #{fap_job_ad_vacation}
		    , fap_job_ad_welfare = #{fap_job_ad_welfare}
		    , fap_job_ad_open_grade = #{fap_job_ad_open_grade}
		    , fap_job_ad_qual_dpe = #{fap_job_ad_qual_dpe}
		    , fap_job_ad_terms_dpe = #{fap_job_ad_terms_dpe}
		    , fap_job_ad_coc_agree = #{fap_job_ad_coc_agree}
		    <if test="fap_job_ad_overlap != null and fap_job_ad_overlap != '' ">
		    , fap_job_ad_overlap = #{fap_job_ad_overlap}
		    </if>
		    , fap_job_ad_groupcode = #{fap_job_ad_groupcode}
		    , fap_job_ad_udt_id = #{fap_job_ad_udt_id}
		    , fap_job_ad_udt_dt = now()
		    , fap_job_ad_state = #{fap_job_ad_state}
		    , fap_job_ad_category_type = #{fap_job_ad_category_type}
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</update>
	<!-- 채용공고정보 수정  끝 -->
	
	<!-- 채용전형 seq 가져오기 시작; 2019. 1. 23. 김준영 -->
	<select id="select_pcs_seq_list" parameterType="long" resultType="long">
	   select
	      fap_job_recruit_pcs_seq
	   from
	      fap_job_recruit_pcs_tb
	   where
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 채용전형 seq 가져오기 종료 -->
	
	<!-- 채용공고 선택 삭제 시작; 2019. 1. 23. 김준영 -->
	<delete id="delete_job_recruit_pcs_selective" parameterType="hashmap">
	   delete from
	      fap_job_recruit_pcs_tb 
	   where
	      fap_job_ad_seq = #{fap_job_ad_seq}
	      and fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq} 
	</delete>
	<!-- 채용공고 선택 삭제 끝 -->
	
	<!-- 시험전형 정보 삭제 시작; 2019. 1. 23. 김준영 -->
	<delete id="delete_job_exam" parameterType="long">
		delete
		from
			fap_job_exam_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</delete>
	<!-- 시험전형 정보 삭제 종료 -->
	
	<!-- 면접전형 정보 삭제 시작; 2019. 1. 23. 김준영 -->
	<delete id="delete_job_itv">
		delete
		from
			fap_job_itv_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</delete>
	<!-- 면접전형 정보 삭제 종료 -->
	
	<!-- 기타전형 정보 삭제 시작; 2019. 1. 23. 김준영 -->
	<delete id="delete_job_test_etc">
		delete
		from
			fap_job_test_etc_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</delete>
	<!-- 기타전형 정보 삭제 종료 -->
	
	<!-- 채용전형 수정; 2019. 1. 23. 김준영 -->
	<update id="update_job_recruit_pcs" parameterType="JobRecruitPcs">
		<foreach item="jobRecruitPcsList" collection="jobRecruitPcsList" separator=";">
			update
				fap_job_recruit_pcs_tb
			set
				fap_job_recruit_pcs_gb = #{jobRecruitPcsList.fap_job_recruit_pcs_gb}
				, fap_job_recruit_pcs_dtl = #{jobRecruitPcsList.fap_job_recruit_pcs_dtl}
				, fap_job_recruit_pcs_od = #{jobRecruitPcsList.fap_job_recruit_pcs_od}
				, fap_job_recruit_pcs_udt_id = #{jobRecruitPcsList.fap_job_recruit_pcs_udt_id}
				, fap_job_recruit_pcs_udt_dt = now()
			where
				fap_job_recruit_pcs_seq = #{jobRecruitPcsList.fap_job_recruit_pcs_seq}
		</foreach>
	</update>
	<!-- 채용전형 수정 끝 -->
	
	<!-- 채용공고 기숙사 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_dorm" parameterType="long">
	   delete 
	   from 
	      fap_job_dorm_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 기숙사 정보 삭제 종료 -->
	
	<!-- 채용공고 계약사원 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_jit_employee" parameterType="long">
	   delete 
	   from 
	      fap_job_jit_employee_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 계약사원 정보 삭제 종료 -->
	
	<!-- 채용공고 업무에 필요한 일본어 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_ja_level" parameterType="long">
	   delete 
	   from 
	      fap_job_ja_level_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 업무에 필요한 일본어 정보 삭제 종료 -->
	
	<!-- 채용공고 우대사항 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_pref" parameterType="long">
	   delete 
	   from 
	      fap_job_pref_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 우대사항 정보 삭제 종료 -->
	
	<!-- 채용공고 입사예정일 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_join_dt" parameterType="long">
	   delete 
	   from 
	      fap_job_join_dt_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 입사예정일 정보 삭제 종료 -->
	
	<!-- 채용공고 시용기간 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_trial" parameterType="long">
	   delete 
	   from 
	      fap_job_trial_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 시용기간 정보 삭제 종료 -->
	
	<!-- 채용공고 보험정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_isr" parameterType="long">
	   delete 
	   from 
	      fap_job_isr_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 보험정보 삭제 종료 -->
	
	<!-- 채용공고 급여정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_pay" parameterType="long">
	   delete 
	   from 
	      fap_job_pay_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 급여정보 삭제 종료 -->
	
	<!-- 채용공고 주요업무 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_work" parameterType="long">
	   delete 
	   from 
	      fap_job_work_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 주요업무 삭제 종료 -->
	
	<!-- 채용공고 회사명 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_comp" parameterType="long">
	   delete 
	   from 
	      fap_job_comp_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 회사명 정보 삭제 종료 -->
	
	<!-- 채용공고 근무예정지 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_workplace" parameterType="long">
	   delete 
	   from 
	      fap_job_workplace_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 근무예정지 정보 삭제 종료 -->
	
	<!-- 채용공고 모집직종 정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_category" parameterType="long">
	   delete 
	   from 
	      fap_job_category_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 모집직종 정보 삭제 종료 -->
	
	<!-- 채용공고 파일정보 삭제 시작; 2019.01.23. 이재준-->
	<delete id="delete_job_file" parameterType="long">
	   delete 
	   from 
	      fap_job_file_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 파일정보 삭제 종료 -->
	
	<!-- 채용전형 수정 가능 여부 확인 시작; 2019. 1. 24. 김준영 -->
	<select id="editable_check" parameterType="long" resultType="int">
		select
			count(fap_job_app_rt_seq)
		from
			fap_job_apply_result_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 채용전형 수정 가능 여부 확인 종료 -->
	
	<!-- FAP 에이전시 별 관리 중 기업 리스트 가져오기 시작; 2019. 1. 24. 김준영 -->
	<resultMap type="hashmap" id="ag_comp_connect">
		<result property="fap_ag_id" column="fap_ag_id"/>
		<result property="ag_en_nm" column="ag_en_nm"/>
		<result property="ag_ja_nm" column="ag_ja_nm"/>
		
		<collection property="comp_info" javaType="java.util.ArrayList" resultMap="comp_info"/>
	</resultMap>
	<resultMap type="hashmap" id="comp_info">
		<result property="fap_comp_id" column="fap_comp_id"/>
		<result property="fap_comp_en_nm" column="fap_comp_en_nm"/>
		<result property="fap_comp_ja_nm" column="fap_comp_ja_nm"/>
	</resultMap>
	<select id="select_agency_management_company_list" resultMap="ag_comp_connect">
		select
			comp_connect.fap_ag_id as fap_ag_id
			, (select
					sub1.fap_comp_en_nm
			   from
			 		fap_company_user_tb as sub1
			   where
			   		comp_connect.fap_ag_id = sub1.fap_comp_id
			  ) as ag_en_nm
			, (select
					sub2.fap_comp_ja_nm
			   from
			 		fap_company_user_tb as sub2
			   where
			   		comp_connect.fap_ag_id = sub2.fap_comp_id
			  ) as ag_ja_nm
			, comp_user.fap_comp_id as fap_comp_id
			, comp_user.fap_comp_en_nm as fap_comp_en_nm
			, comp_user.fap_comp_ja_nm as fap_comp_ja_nm
		from
			fap_ag_comp_connect_tb as comp_connect
			, fap_company_user_tb as comp_user
		where
			comp_connect.fap_comp_id = comp_user.fap_comp_id
		and
			comp_connect.fap_ag_comp_connect_ck = 'B3800'
	</select>
	<!-- FAP 에이전시 별 관리 중 기업 리스트 가져오기 종료 -->
	
	<!-- 에이전시 소속회사 정보 가져오기(유저 아이디) 시작; 2019. 1. 25. 이재준 -->
	<select id="select_agency_comp" parameterType="String" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id = #{fap_comp_id}
	</select>
	<!-- 에이전시 소속회사 정보 가져오기 종료 -->
	
	<!-- FAP 채용공고 관리 리스트 출력 시작; 2019.2.1. 이재준-->
	<select id="select_job_ad_list" resultType="JobAd" parameterType="String">
		select 
			fap_job_ad_seq
			,fap_comp_id
			,fap_job_ad_title
		from 
			fap_job_ad_tb
		where
			fap_comp_id = #{fap_comp_id}
		order by fap_job_ad_udt_dt desc
	</select>
	<!-- FAP 채용공고 관리 리스트 출력 종료 -->
	
	<!-- 진행중인 채용공고 정보 가져오기 -->
	<resultMap type="hashmap" id="JobAdByStateMap">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_ins_dt" column="fap_job_ad_ins_dt" />
		<result property="fap_job_ad_udt_dt" column="fap_job_ad_udt_dt" />
		<result property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_jobfair_title" column="fap_jobfair_title" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_divide_gb" column="fap_jobfair_divide_gb" />
		<result property="fap_job_ad_title" column="fap_job_ad_title" />
		<result property="fap_job_ad_hire_type" column="fap_job_ad_hire_type" />
		<result property="fap_job_ad_state" column="fap_job_ad_state" />
		<result property="fap_jobfair_applicable_time_st" column="fap_jobfair_applicable_time_st" />
		<result property="fap_jobfair_applicable_time_et" column="fap_jobfair_applicable_time_et" />
		<result property="fap_job_ad_apply_num" column="fap_job_ad_apply_num" />
		<result property="fap_job_ad_question_num" column="fap_job_ad_question_num" />
		<collection property="JobCateList" javaType="java.util.ArrayList" resultMap="JobCateOnGoing" />
		<collection property="JobWorkplaceList" javaType="java.util.ArrayList" resultMap="JobWorkplace" />
	</resultMap>
	<resultMap type="hashmap" id="JobCateOnGoing">
		<id property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_gb" column="fap_job_category_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplace">
		<id property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<result property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<collection property="JobWorkplaceDtlList" javaType="java.util.ArrayList" resultMap="JobWorkplaceDtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceDtl">
		<id property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_gb" column="fap_job_workplace_dtl_gb" />
	</resultMap>
	<select id="select_job_ad_by_state" resultMap="JobAdByStateMap" parameterType="hashmap">
		select
			ad.fap_job_ad_seq as fap_job_ad_seq
		    ,ad.fap_job_ad_title as fap_job_ad_title
		    , ad.fap_job_ad_hire_type as fap_job_ad_hire_type
		    , ad.fap_job_ad_state as fap_job_ad_state
		    , DATE_FORMAT(ad.fap_job_ad_ins_dt, '%Y-%m-%d %H:%i') as fap_job_ad_ins_dt
		    , DATE_FORMAT(ad.fap_job_ad_udt_dt, '%Y-%m-%d %H:%i') as fap_job_ad_udt_dt
		    
		    , ad.fap_jobfair_seq as fap_jobfair_seq
		    , jobfair.fap_jobfair_title as fap_jobfair_title
		    
		    , ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    , jobfair_divide.fap_jobfair_divide_gb as fap_jobfair_divide_gb
		 
		    , cate.fap_job_category_seq as fap_job_category_seq
			, cate.fap_job_category_gb as fap_job_category_gb
			
			, wp.fap_job_workplace_seq as fap_job_workplace_seq
			, wp_dtl.fap_job_workplace_dtl_gb as fap_job_workplace_dtl_gb
			, wp_dtl.fap_job_workplace_dtl_seq as fap_job_workplace_dtl_seq
			
			, DATE_FORMAT(app.fap_jobfair_applicable_time_st, '%Y-%m-%d') as fap_jobfair_applicable_time_st
			, DATE_FORMAT(app.fap_jobfair_applicable_time_et, '%Y-%m-%d') as fap_jobfair_applicable_time_et
		    , (select
					count(*)
				from
					fap_job_apply_info_tb apply_info
				where
					ad.fap_job_ad_seq = apply_info.fap_job_ad_seq) as fap_job_ad_apply_num
			, (select
					count(*)
				from
					 fap_job_qna_question_tb q
				where
					ad.fap_job_ad_seq = q.fap_job_ad_seq) as fap_job_ad_question_num
		from
			fap_job_ad_tb ad
		left join
			fap_job_category_tb cate
		on
			ad.fap_job_ad_seq = cate.fap_job_ad_seq
		left join
			fap_jobfair_applicable_time_tb app
		on
			ad.fap_jobfair_divide_seq = app.fap_jobfair_divide_seq
		left join
			fap_job_workplace_tb wp
		on
			ad.fap_job_ad_seq = wp.fap_job_ad_seq
		left join
			fap_job_workplace_dtl_tb wp_dtl
		on
			wp.fap_job_workplace_seq = wp_dtl.fap_job_workplace_seq
		left join
			fap_jobfair_tb jobfair
		on
			ad.fap_jobfair_seq = jobfair.fap_jobfair_seq
		left join
			fap_jobfair_divide_tb jobfair_divide
		on
			ad.fap_jobfair_divide_seq = jobfair_divide.fap_jobfair_divide_seq
		where
			ad.fap_comp_id = #{chosen_fap_comp_id}
		and
			ad.fap_jobfair_seq = #{fap_jobfair_seq}
		and
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	<if test="stateFlag == 'progressing'">
		and	
			ad.fap_job_ad_state = 'C2101'
		order by
			fap_job_ad_seq desc
		
	</if>
	<if test="stateFlag == 'standby'">
		and	
			ad.fap_job_ad_state in ('C2100', 'C2104')
		order by
			fap_job_ad_state desc
			,fap_job_ad_seq desc
	</if>
	<if test="stateFlag == 'completed'">
		and	
			ad.fap_job_ad_state = 'C2102'
		order by
			fap_job_ad_seq desc
	</if>
	<if test="stateFlag == 'temped'">
		and	
			ad.fap_job_ad_state = 'C2103'
		order by
			fap_job_ad_seq desc
	</if>
	</select>
	<!-- 진행중인 채용공고 정보 가져오기 끝 -->
	
	<!-- 채용공고 상태 수정 -->
	<update id="update_job_ad_state" parameterType="JobAd">
		update
			fap_job_ad_tb
		set
			fap_job_ad_state = #{fap_job_ad_state}
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</update>
	<!-- 채용공고 상태 수정 끝 -->
	
	<!-- FAP 에이전시 에이전시 관리 회사들 목록 요청 시작; 2019. 2. 7. 정대영-->
	<select id="select_participate_possible_company_list" parameterType="hashmap" resultType="hashmap">
		select
			fap_comp_id
		    ,fap_comp_ja_nm
		from
			fap_company_user_tb user
		where
			fap_comp_id = #{fap_ag_id}
			and
			fap_comp_id not in (
									select
										fap_comp_id
									from
										fap_jobfair_comp_tb
									where
										fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		                                and
		                                fap_jobfair_seq = #{fap_jobfair_seq}
								 )
		union
		select 
			conn.fap_comp_id as fap_comp_id
		    ,comp.fap_comp_ja_nm as fap_comp_ja_nm
		from 
			fap_ag_comp_connect_tb conn
		inner join
			fap_company_user_tb comp
			on conn.fap_comp_id = comp.fap_comp_id
		where 
			fap_ag_id = #{fap_ag_id}
		    and
		    fap_ag_comp_connect_ck = 'B3800'
		    and
		    comp.fap_comp_id not in (
									select
										fap_comp_id
									from
										fap_jobfair_comp_tb
									where
										fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		                                and
		                                fap_jobfair_seq = #{fap_jobfair_seq}
									 )
	</select>
	<!-- FAP 에이전시 에이전시 관리 회사들 목록 요청 종료 -->
	
	<!-- FAP 에이전시 에이전시 관리 회사 잡페어 참가 등록 시작; 2019. 2. 18. 정대영 -->
	<insert id="insert_company_jobfair_join_table" parameterType="hashmap">
		insert into fap_jobfair_comp_tb (
				fap_jobfair_divide_seq
				,fap_jobfair_seq
				,fap_comp_id
			) values
			<foreach item ="fap_comp_id" collection="checkedCompanyInput" index="index" open="" separator=", " close=""> 
			(
				#{fap_jobfair_divide_seq}
				,#{fap_jobfair_seq}
				,#{fap_comp_id}
			)
			</foreach>
	</insert>
	<!-- FAP 에이전시 에이전시 관리 회사 잡페어 참가 등록 종료 -->
	
	<!-- FAP 에이전시 해당 잡페어에 참가할 회사목록 셀렉트 시작; 2019. 2. 9. 정대영-->
	<select id="select_jobfair_attended_company_list" parameterType="hashmap" resultType="hashmap">
		select
			fap_comp_id
		    ,fap_comp_ja_nm
		from
			fap_company_user_tb user
		where
			fap_comp_id = #{fap_ag_id}
			and
			fap_comp_id in (
								select
									fap_comp_id
								from
									fap_jobfair_comp_tb
								where
									fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	                                and
	                                fap_jobfair_seq = #{fap_jobfair_seq}
							)
		union
		select 
			conn.fap_comp_id as fap_comp_id
		    ,comp.fap_comp_ja_nm as fap_comp_ja_nm
		from 
			fap_ag_comp_connect_tb conn
		inner join
			fap_company_user_tb comp
			on conn.fap_comp_id = comp.fap_comp_id
		where 
			fap_ag_id = #{fap_ag_id}
		    and
		    fap_ag_comp_connect_ck = 'B3800'
		    and
		    comp.fap_comp_id in (
									select
										fap_comp_id
									from
										fap_jobfair_comp_tb
									where
										fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		                                and
		                                fap_jobfair_seq = #{fap_jobfair_seq}
								 )
	</select>
	<!-- FAP 에이전시 해당 잡페어에 참가할 회사목록 셀렉트 종료 -->
	
	<!-- 에이전시 담당자 가지고 있는 기업 객체를 가져오는 함수(파라미터 선택된 회사 아이디로) 시작; 2019. 2. 8. 정대영 -->
	<select id="select_company_of_parameter_comp_id" parameterType="String" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id = #{chosen_fap_comp_id}
	</select>
	<!-- 에이전시 담당자 가지고 있는 기업 객체를 가져오는 함수(파라미터 선택된 회사 아이디로) 종료 -->
	
	<!-- 회사아이디로 회사명 가져오는 함수 시작; 2019. 02. 11  정대영 -->
	<select id="select_company_name" parameterType="String" resultType="String">
		select
			fap_comp_ja_nm
		from
			fap_company_user_tb
		where
			fap_comp_id = #{chosen_fap_comp_id}
	</select>
	<!-- 회사아이디로 회사명 가져오는 함수 종료 -->
	
	<!-- FAP 에이전시 - 기업 연결 삭제 시작(유저 아이디); 2019. 2. 12. 김준영 -->
	<delete id="delete_ag_comp_connect" parameterType="String">
		delete
		from
			fap_ag_comp_connect_tb
		where
			fap_ag_id = (select
							fap_comp_id
						 from
						   	fap_comp_user_connect_tb
						 where
						   	user_id = #{user_id}
						 )
	</delete>
	<!-- FAP 에이전시 - 기업 연결 삭제 시작(유저 아이디) -->
	
	<!-- FAP 잡페어 리스트 가져오기(페이징 처리 후) 시작; 2019. 2. 12. 김준영 -->
	<select id="select_job_ad_load_list_paging" resultType="hashmap" parameterType="hashmap">
		select
			job_ad.fap_job_ad_seq as fap_job_ad_seq
			, job_ad.fap_job_ad_title as fap_job_ad_title
			, jobfair.fap_jobfair_title as fap_jobfair_title
			, (select
			   		jobfair_divide.fap_jobfair_divide_gb
			   from
			   		fap_jobfair_divide_tb as jobfair_divide
			   where
			   		job_ad.fap_jobfair_divide_seq = jobfair_divide.fap_jobfair_divide_seq
				) as fap_jobfair_divide_gb
		from
			fap_job_ad_tb as job_ad
            ,fap_jobfair_tb as jobfair
		where
			job_ad.fap_comp_id = #{chosen_fap_comp_id}
		and
			job_ad.fap_jobfair_seq = jobfair.fap_jobfair_seq
		order by
			job_ad.fap_job_ad_udt_dt desc
	</select>
	<!-- FAP 잡페어 리스트 가져오기(페이징 처리 후) 종료 -->
	
	<!-- FAP 잡페어 리스트 총 개수 가져오기 시작; 2019. 2. 9. 김준영 -->
	<select id="select_job_ad_load_list_count" resultType="int" parameterType="hashmap">
		select
			count(*)
		from
			fap_job_ad_tb as job_ad
			,fap_jobfair_tb as jobfair
		where
			job_ad.fap_comp_id = #{chosen_fap_comp_id}
		and
			jobfair.fap_jobfair_seq = job_ad.fap_jobfair_seq
	</select>
	<!-- FAP 잡페어 리스트 가져오기 종료 -->
	
	<!-- FAP 채용공고 파일 정보 -->
	<select id="select_job_file" parameterType="long" resultType="JobFile">
		select
			fap_job_file_seq
		    , fap_job_file_gb
		    , fap_job_file_saved
		    , fap_job_file_origin
		from
			fap_job_file_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	
	<!-- 시험전형 파일 정보 -->
	<!-- file path에 recruit_pcs_seq가 필요하므로, 편의상 exam_seq에 담아옴 -->
	<select id="select_job_exam_file" parameterType="long" resultType="JobExamFile">
		select
			exam_file.fap_job_exam_file_seq
		    , exam_file.fap_job_exam_file_saved
		    , exam_file.fap_job_exam_file_origin
		    , exam.fap_job_recruit_pcs_seq as fap_job_exam_seq
		from
			fap_job_exam_file_tb exam_file
		join
			fap_job_exam_tb exam
		on
			exam_file.fap_job_exam_seq = exam.fap_job_exam_seq
		join
			fap_job_recruit_pcs_tb pcs
		on
			exam.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
		where
			pcs.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 시험전형 파일 정보 -->
	
	<!-- 해당 회사가 참가한 잡페어 리스트 시작; 원병호 2019. 3. 12 -->
	<select id="select_agency_jobfair_list" parameterType="String" resultType="hashmap">
		select distinct
			 jobfair.fap_jobfair_seq
			, jobfair.fap_jobfair_title
			, user.fap_comp_ja_nm
			, user.fap_comp_id
		from
			fap_jobfair_comp_tb comp
		join 
			fap_company_user_tb user
		on 
			user.fap_comp_id = comp.fap_comp_id
		join
			fap_jobfair_tb jobfair
		on
			comp.fap_jobfair_seq = jobfair.fap_jobfair_seq
		where
			comp.fap_comp_id = #{fap_comp_id}
		order by
			jobfair.fap_jobfair_st desc
	</select>	
	<!-- 해당 회사가 참가한 잡페어 리스트 끝 -->
	
	<!-- 해당 회사가 참가한 잡페어 세부 리스트 시작; 원병호 2019. 3. 12 -->
	<select id="select_company_jobfair_divide_list" parameterType="hashmap" resultType="hashmap">
		select distinct
			 jobfair_divide.fap_jobfair_divide_seq
		    , jobfair_divide.fap_jobfair_divide_gb
		from
			fap_jobfair_comp_tb comp
		join 
			fap_jobfair_divide_tb jobfair_divide
		on 
			jobfair_divide.fap_jobfair_divide_seq = comp.fap_jobfair_divide_seq
		where
			comp.fap_comp_id = #{fap_comp_id}
		and 
			comp.fap_jobfair_seq = #{fap_jobfair_seq}
		order by
			jobfair_divide.fap_jobfair_divide_st asc;
	</select>	
	<!-- 해당 회사가 참가한 잡페어 세부 리스트 끝 -->
	
</mapper>