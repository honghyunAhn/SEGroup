<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aracomm.changbi.mypage.dao.PrivateDao">

	<!-- 회원정보 조회 -->
	<select id="selectMyInfo" parameterType="string" resultType="hashmap">
		SELECT
			   SEQ
			 , ID
			 , NAME
			 , ACCEPT_EMAIL
			 , ACCEPT_SMS
			 , TEL
			 , PHONE
			 , FAX
			 , EMAIL
			 , EMAIL_YN
			 , GENDER
			 , BIRTH_DAY
			 , POST_CODE
			 , ADDR1
			 , ADDR2
			 , SCHOOL_NAME
			 , S_TYPE
			 , E_TYPE
			 , REGION_CODE
			 , POSITION
			 , POSITION_ETC
			 , APP_YEAR
			 , JURISDICTION
			 , SUBJECT
			 , SCHOOL_TEL
			 , SCHOOL_FAX
			 , SCHOOL_POST_CODE
			 , SCHOOL_ADDR1
			 , SCHOOL_ADDR2
			 , NEIS_NUM
			 , GRADE
			 , DATE_FORMAT(REG_DATE, '%Y.%m.%d %H:%i') AS JOIN_DATE
			 , (
				SELECT IFNULL(
							(SELECT BALANCE FROM CB_POINT
							WHERE USER_ID = #{user_id}
							ORDER BY ID DESC
							LIMIT 1), 0)
			 ) AS POINT
			 , IDEN_DI
		  FROM CB_MEMBER M
		 WHERE ID = #{user_id}
		   AND USE_YN = 'Y'
	</select>

	<!-- 회원정보수정 -->
	<update id="updateMember" parameterType="map">
		UPDATE CB_MEMBER
		   SET ACCEPT_EMAIL = #{accept_email }
			 , ACCEPT_SMS = #{accept_sms }
			 , TEL = #{tel }
			 , PHONE = #{phone }
			 , FAX = #{fax }
			 , EMAIL = #{email }
			 , EMAIL_YN = #{email_yn }
			 , GENDER = #{gender }
			 , BIRTH_DAY = #{birth_day }
			 , POST_CODE = #{post_code }
			 , ADDR1 = #{addr1 }
			 , ADDR2 = #{addr2 }
			 , SCHOOL_NAME = #{school_name }
			 , S_TYPE = #{s_type }
			 , E_TYPE = #{e_type }
			 , REGION_CODE = #{region_code }
			 , POSITION = #{position }
			 , POSITION_ETC = #{position_etc }
			 , APP_YEAR = #{app_year }
			 , JURISDICTION = #{jurisdiction }
			 , SUBJECT = #{subject }
			 , SCHOOL_TEL = #{school_tel }
			 , SCHOOL_FAX = #{school_fax }
			 , SCHOOL_POST_CODE = #{school_post_code }
			 , SCHOOL_ADDR1 = #{school_addr1 }
			 , SCHOOL_ADDR2 = #{school_addr2 }
			 , NEIS_NUM = #{neis_num }
			 , GRADE = #{grade }
			 , UPD_DATE = #{reg_date }
			 <if test='enc_pw != "" and enc_pw != null'>
			 , PW = #{enc_pw }
			 </if>
		 WHERE ID = #{user_id}

	</update>

	<!-- 회원탈퇴를 위한 회원정보 조회 -->
	<select id="selectMyInfoForWithdraw" parameterType="string" resultType="hashmap">
		SELECT ID AS USER_ID
			 , PW
			 , BIRTH_DAY
			 , IDEN_DI
		  FROM CB_MEMBER M
		 WHERE ID = #{user_id}
		   AND USE_YN = 'Y'
	</select>


	<!-- 탈퇴시 회원 가입정보 초기화 (탈퇴에 관한 정책 부재) -->
	<update id="updateMemberOut" parameterType="string">
		UPDATE CB_MEMBER
		   SET NAME = 'UNKNOWN'
		     , PW = 'WITHDRAW MEMBER'
			 , LOCALE = NULL
			 , SNS_CD = NULL
			 , SNS_ID = NULL
			 , SNS_URL = NULL
			 , ACCEPT_SNS = NULL
			 , ACCEPT_EMAIL = NULL
			 , ACCEPT_SMS = NULL
			 , TEL = NULL
			 , PHONE = NULL
			 , FAX = NULL
			 , EMAIL = NULL
			 , EMAIL_YN = NULL
			 , GENDER = NULL
			 , BIRTH_DAY = NULL
			 , POST_CODE = NULL
			 , ADDR1 = NULL
			 , ADDR2 = NULL
			 , SCHOOL_NAME = NULL
			 , S_TYPE = NULL
			 , E_TYPE = NULL
			 , REGION_CODE = NULL
			 , POSITION = NULL
			 , POSITION_ETC = NULL
			 , APP_YEAR = NULL
			 , JURISDICTION = NULL
			 , SUBJECT = NULL
			 , SCHOOL_TEL = NULL
			 , SCHOOL_FAX = NULL
			 , SCHOOL_POST_CODE = NULL
			 , SCHOOL_ADDR1 = NULL
			 , SCHOOL_ADDR2 = NULL
			 , NEIS_NUM = NULL
			 , USE_YN = 'N'
			 , AUTHORITY = NULL
			 , IP_USE_YN = NULL
			 , IDEN_CO = NULL
			 , IDEN_DI = NULL
			 , PW_INIT_YN = NULL
			 , UPD_DATE = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		 WHERE ID = #{user_id}
	</update>

	<!-- 탈퇴정보 등록 -->
	<insert id="insertMemberOut" parameterType="map">
		INSERT INTO CB_MEMBER_OUT (
			  USER_ID
			, NOTE
			, REG_DATE
		) VALUES (
			  #{user_id}
			, #{note}
			, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		)
	</insert>
</mapper>