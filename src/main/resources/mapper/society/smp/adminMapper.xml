<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SEGroup 모집홍보 관리자 SQL -->
<mapper
	namespace="global.segroup.society.smp.admin.dao.SocietySmpAdminMapper">

	<!-- 특정 기수에 지원자 정보count 조회 시작 -->
	<select id="smp_manager_select_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			edu_masterapply_form_tb form,
			edu_masterapply_result_tb result,
			edu_curriculum_gisu_tb gisu,
			com_user_tb user
		where
			form.app_seq = result.app_seq
		and
			form.gisu_seq = gisu.gisu_seq
		and
			form.app_id = user.user_id
		<if test="gisu_seq != null and gisu_seq != 0">
			and
				form.gisu_seq = #{gisu_seq}
		</if>
		<if test="search_name != null and search_name != ''">
			and 
				user.user_nm like CONCAT('%', #{search_name} , '%')
		</if>
	</select>

	<!-- 특정 기수에 학생 정보 조회 시작 (여명환) -->
	<resultMap type="hashmap" id="studentManagerMap">
		<id property="smp_seq" column="smp_seq" />
		<result property="app_id" column="app_id" />
		<result property="smp_address" column="smp_address" />
		<result property="smp_kmove_gb" column="smp_kmove_gb" />
		<result property="smp_class_info" column="smp_class_info" />
		<result property="smp_cup_gb" column="smp_cup_gb" />
		<result property="smp_app_lo_gb" column="smp_app_lo_gb" />
		<result property="smp_photo_saved" column="smp_photo_saved" />
		<result property="smp_residence" column="smp_residence" />
		<result property="smp_em_phone" column="smp_em_phone" />
		<result property="gisu_crc_nm" column="gisu_crc_nm" />
		<result property="gisu_num" column="gisu_num" />
		<result property="user_nm" column="user_nm" />
		<result property="user_phone" column="user_phone" />
        <result property="user_email" column="user_email" />
		<result property="user_birth" column="user_birth" />
		<result property="user_sex" column="user_sex" />
		
		<collection property="eduHistoryList" javaType="java.util.ArrayList" resultMap="userInfoEduHistory" />
		<collection property="languageList" javaType="java.util.ArrayList" resultMap="userInfoLanguage" />
		<collection property="licenseList" javaType="java.util.ArrayList" resultMap="userInfoLicense" />
	</resultMap>
	<resultMap type="hashmap" id="userInfoEduHistory">
		<id property="smp_edu_seq" column="smp_edu_seq" />
		<result property="smp_edu_gd_ck" column="smp_edu_gd_ck" />
		<result property="smp_edu_sc_nm" column="smp_edu_sc_nm" />
		<result property="smp_edu_major" column="smp_edu_major" />
		<result property="smp_edu_gd_dt" column="smp_edu_gd_dt" />
		<result property="smp_edu_gd_rq" column="smp_edu_gd_rq" />
	</resultMap>
	<resultMap type="hashmap" id="userInfoLanguage">
		<id property="smp_lang_seq" column="smp_lang_seq" />
		<result property="smp_lang_nm" column="smp_lang_nm" />
		<result property="smp_lang_test_nm" column="smp_lang_test_nm" />
		<result property="smp_lang_grade" column="smp_lang_grade" />
	</resultMap>
	<resultMap type="hashmap" id="userInfoLicense">
		<id property="smp_license_seq" column="smp_license_seq" />
		<result property="smp_license_nm" column="smp_license_nm" />
		<result property="smp_license_grade" column="smp_license_grade" />
	</resultMap>
	<select id="smp_student_select" parameterType="hashmap" resultMap="studentManagerMap">
		SELECT * FROM (
			SELECT  (@ROWNUM := @ROWNUM + 1) AS rn, A.* FROM (
				select 
					coalesce(form.smp_seq, "") as smp_seq,
					coalesce(form.app_id, "") as app_id,
					coalesce(form.smp_address, "") as smp_address,
					coalesce(form.smp_kmove_gb, "") as smp_kmove_gb,
					coalesce(form.smp_class_info, "") as smp_class_info,
					coalesce(form.smp_app_lo_gb, "") as smp_app_lo_gb,
					coalesce(form.smp_cup_gb, "") as smp_cup_gb,
					coalesce(form.smp_photo_saved, "") as smp_photo_saved,
					coalesce(form.smp_residence, "") as smp_residence,
					coalesce(form.smp_memo, "") as smp_memo,
					coalesce(edu.smp_edu_gd_ck, "") as smp_edu_gd_ck,
					coalesce(edu.smp_edu_sc_nm, "") as smp_edu_sc_nm,
					coalesce(edu.smp_edu_major, "") as smp_edu_major,
					coalesce(edu.smp_edu_gd_dt, "") as smp_edu_gd_dt,
					coalesce(edu.smp_edu_gd_rq, "") as smp_edu_gd_rq,
					coalesce(lang.smp_lang_nm, "") as smp_lang_nm,
					coalesce(lang.smp_lang_test_nm, "") as smp_lang_test_nm,
					coalesce(lang.smp_lang_grade, "") as smp_lang_grade,
					coalesce(license.smp_license_nm, "") as smp_license_nm,
					coalesce(license.smp_license_grade, "") as smp_license_grade,
				    coalesce(gisu.gisu_crc_nm, "") as gisu_crc_nm,
				    coalesce(gisu.gisu_num, "") as gisu_num,
				    coalesce(user.user_nm, "") as user_nm,
				    coalesce(user.user_phone, "") as user_phone,
				    coalesce(user.user_email, "") as user_email,
				    coalesce(user.user_birth, "") as user_birth,
				    coalesce(user.user_sex, "") as user_sex
				from
					(smp_info_basic_tb form,
				    edu_curriculum_gisu_tb gisu,
				    com_user_tb user)
				left join
					smp_info_eduhistory_tb edu
				on
					form.smp_seq = edu.smp_seq
        		left join
				    smp_info_license_tb license
        		on
            		form.smp_seq = license.smp_seq
        		left join
            		smp_info_language_tb lang
        		on
             		form.smp_seq =lang.smp_seq
				where
					form.gisu_seq = gisu.gisu_seq
				and
					form.app_id = user.user_id
				<if test="gisu_seq != null and gisu_seq != 0">
				and
					form.gisu_seq = #{gisu_seq}
				</if>
				<if test="search_name != null and search_name != ''">
				and user.user_nm like CONCAT('%', #{search_name} , '%')
				</if>
				) A, (SELECT @ROWNUM := 0) B 
			<if test="orderType == 'apply_date'">
				<if test="orderValue == 'desc'">
					order by CAST(A.app_rt_doc_dt AS INTEGER) desc
				</if>
				<if test="orderValue == 'asc'">
					order by CAST(A.app_rt_doc_dt AS INTEGER) asc
				</if>
			</if>
			<if test="orderType == 'user_class'">
				<if test="orderValue == 'desc'">
					order by smp_class_info desc
				</if>
				<if test="orderValue == 'asc'">
					order by smp_class_info asc
				</if>
			</if>
			<if test="orderType == 'user_name'">
				<if test="orderValue == 'desc'">
					order by user_nm desc
				</if>
				<if test="orderValue == 'asc'">
					order by user_nm asc
				</if>
			</if>
			<if test="orderType == ''">
				order by A.gisu_num asc, A.smp_seq asc
			</if>
		) C 
		WHERE rn BETWEEN #{adminPager.pageBegin} AND #{adminPager.pageEnd}
	</select>


	<!-- 특정 기수에 학생 정보 조회 끝 (여명환) -->


<!-- 모집홍보 지원신청서 폼 복사 시작 (여명환) -->
	<insert id="insertCopyEduApplyForm" parameterType="int">
		INSERT INTO 
			smp_info_basic_tb
			(
				app_id
				, gisu_seq
				, smp_mt_ck
				, smp_mt_etc
				, smp_zipcode
				, smp_address
				, smp_address_detail
				, smp_em_phone
				, smp_take_ck
				, smp_take_dt
				, smp_take_rt
				, smp_abroad_ck
				, smp_kmove_ck
				, smp_kmove_nm
				, smp_kmove_ag
				, smp_kmove_st
				, smp_kmove_et
				, smp_self_intro
				, smp_photo_saved
				, smp_photo_origin
				, smp_edu_file_saved
				, smp_edu_file_origin
				, smp_isr_file_saved
				, smp_isr_file_origin
				, smp_imm_file_saved
				, smp_imm_file_origin
				, smp_ins_id
				, smp_ins_dt
				, smp_udt_id
				, smp_udt_dt
			) 
		SELECT 
			app_id
			, gisu_seq
			, app_mt_ck
			, app_mt_etc
			, app_zipcode
			, app_address
			, app_address_detail
			, app_em_phone
			, app_take_ck
			, app_take_dt
			, app_take_rt
			, app_abroad_ck
			, app_kmove_ck
			, app_kmove_nm
			, app_kmove_ag
			, app_kmove_st
			, app_kmove_et
			, app_self_intro
			, app_photo_saved
			, app_photo_origin
			, app_edu_file_saved
			, app_edu_file_origin
			, app_isr_file_saved
			, app_isr_file_origin
			, app_imm_file_saved
			, app_imm_file_origin
			, app_ins_id
			, app_ins_dt
			, app_udt_id
			, app_udt_dt
		FROM 
			edu_masterapply_form_tb 
		where 
			edu_masterapply_form_tb.app_seq = #{app_seq}
	</insert>
	<!-- 모집홍보 지원신청서 폼 복사 끝 -->
	
	<!-- 모집홍보 지원신청서 학력사항 복사 시작 (여명환) -->
	<insert id="insertCopyEduApplyEduHistory" parameterType="int">
		INSERT INTO 
			smp_info_eduhistory_tb
			(
				SMP_SEQ
				, SMP_EDU_SC_NM
				, SMP_EDU_MAJOR
				, SMP_EDU_GD_CK
				, SMP_EDU_GD_DT
				, SMP_EDU_SC_LO
				, SMP_EDU_GD_RQ
				, SMP_EDU_INS_ID
				, SMP_EDU_INS_DT
				, SMP_EDU_UDT_ID
				,SMP_EDU_UDT_DT
			) 
		SELECT 
			basic.smp_seq
			, history.APP_EDU_SC_NM
			, history.APP_EDU_MAJOR
			, history.APP_EDU_GD_CK
			, history.APP_EDU_GD_DT
			, history.APP_EDU_SC_LO
			, history.APP_EDU_GD_RQ
			, history.APP_EDU_INS_ID
			, history.APP_EDU_INS_DT
			, history.APP_EDU_UDT_ID
			, history.APP_EDU_UDT_DT
		FROM 
			smp_info_basic_tb basic
			, edu_masterapply_eduhistory_tb history 
		where 
			history.app_seq = #{app_seq}
		AND 
			BASIC.SMP_SEQ = (SELECT MAX(SMP_SEQ) FROM SMP_INFO_BASIC_TB)
	</insert>
	<!-- 모집홍보 지원신청서 학력사항 복사 끝  -->
	
	<!-- 모집홍보 지원신청서 경력사항 복사 시작 (여명환)-->
	<insert id="insertCopyEduApplyCareer" parameterType="int">
		INSERT INTO 
			smp_info_career_tb
			(
				SMP_SEQ
				, SMP_CRR_PLACE
				, SMP_CRR_POSITION
				, SMP_CRR_ST
				, SMP_CRR_ET
				, SMP_CRR_DEPT
				, SMP_CRR_PHONE
				, SMP_CRR_INS_ID
				, SMP_CRR_INS_DT
				, SMP_CRR_UDT_ID
				, SMP_CRR_UDT_DT
			) 
		SELECT 
			basic.smp_seq
			, career.APP_CRR_PLACE
			, career.APP_CRR_POSITION
			, career.APP_CRR_ST
			, career.APP_CRR_ET
			, career.APP_CRR_DEPT
			, career.APP_CRR_PHONE
			, career.APP_CRR_INS_ID
			, career.APP_CRR_INS_DT
			, career.APP_CRR_UDT_ID
			, career.APP_CRR_UDT_DT
		FROM 
			smp_info_basic_tb basic
			, edu_masterapply_career_tb career 
		where 
			career.app_seq = #{app_seq} 
		AND 
			BASIC.SMP_SEQ = (SELECT MAX(SMP_SEQ) FROM SMP_INFO_BASIC_TB)
	</insert>
	<!-- 모집홍보 지원신청서 경력사항 복사 종료 -->
	
	<!-- 모집홍보 지원신청서 교육이수 복사 시작 (여명환)-->
	<insert id="insertCopyEduApplyStudy" parameterType="int">
		INSERT INTO 
			smp_info_study_tb
			(
				SMP_SEQ
				, SMP_STUDY_NM
				, SMP_STUDY_ST
				, SMP_STUDY_ET
				, SMP_STUDY_AG
				, SMP_STUDY_DETAIL
				, SMP_STUDY_INS_ID
				, SMP_STUDY_INS_DT
				, SMP_STUDY_UDT_ID
				, SMP_STUDY_UDT_DT
			) 
		SELECT 
			basic.smp_seq
			, study.APP_STUDY_NM
			, study.APP_STUDY_ST
			, study.APP_STUDY_ET
			, study.APP_STUDY_AG
			, study.APP_STUDY_DETAIL
			, study.APP_STUDY_INS_ID
			, study.APP_STUDY_INS_DT
			, study.APP_STUDY_UDT_ID
			, study.APP_STUDY_UDT_DT
		FROM 
			smp_info_basic_tb basic
			, edu_masterapply_study_tb study 
		where 
			study.app_seq = #{app_seq} 
		AND 
			BASIC.SMP_SEQ = (SELECT MAX(SMP_SEQ) FROM SMP_INFO_BASIC_TB)
	</insert>
	<!-- 모집홍보 지원신청서 교육이수 복사 종료 -->
	
	<!-- 모집홍보 지원신청서 언어능력 복사 시작 (여명환)-->
	<insert id="insertCopyEduApplyLanguage" parameterType="int">
		INSERT INTO 
			smp_info_language_tb
			(
				SMP_SEQ
				, SMP_LANG_NM
				, SMP_LANG_TEST_NM
				, SMP_LANG_GRADE
				, SMP_LANG_AG
				, SMP_LANG_OBTAIN_DT
				, SMP_LANG_INS_ID
				, SMP_LANG_INS_DT
				, SMP_LANG_UDT_ID
				, SMP_LANG_UDT_DT
			) 
		SELECT 
			basic.smp_seq
			, language.APP_LANG_NM
			, language.APP_LANG_TEST_NM
			, language.APP_LANG_GRADE
			, language.APP_LANG_AG
			, language.APP_LANG_OBTAIN_DT
			, language.APP_LANG_INS_ID
			, language.APP_LANG_INS_DT
			, language.APP_LANG_UDT_ID
			, language.APP_LANG_UDT_DT
		FROM 
			smp_info_basic_tb basic
			, edu_masterapply_language_tb language 
		where 
			language.app_seq = #{app_seq} 
		AND 
			BASIC.SMP_SEQ = (SELECT MAX(SMP_SEQ) FROM SMP_INFO_BASIC_TB)
	</insert>
	<!-- 모집홍보 지원신청서 언어능력 복사 종료 -->
	
	<!-- 모집홍보 지원신청서 자격증 복사 시작 (여명환)-->
	<insert id="insertCopyEduApplyLicense" parameterType="int">
		INSERT INTO 
			smp_info_license_tb
			(
				SMP_SEQ
				, SMP_LICENSE_NM
				, SMP_LICENSE_GRADE
				, SMP_LICENSE_AG
				, SMP_LICENSE_OBTAIN_DT
				, SMP_LICENSE_INS_ID
				, SMP_LICENSE_INS_DT
				, SMP_LICENSE_UDT_ID
				, SMP_LICENSE_UDT_DT
			) 
		SELECT 
			basic.smp_seq
			, license.APP_LICENSE_NM
			, license.APP_LICENSE_GRADE
			, license.APP_LICENSE_AG
			, license.APP_LICENSE_OBTAIN_DT
			, license.APP_LICENSE_INS_ID
			, license.APP_LICENSE_INS_DT
			, license.APP_LICENSE_UDT_ID
			, license.APP_LICENSE_UDT_DT
		FROM 
			smp_info_basic_tb basic
			, edu_masterapply_license_tb license 
		where 
			license.app_seq = #{app_seq} 
		AND 
			BASIC.SMP_SEQ = (SELECT MAX(SMP_SEQ) FROM SMP_INFO_BASIC_TB)
	</insert>
	<!-- 모집홍보 지원신청서 자격증 복사 종료 -->
	
	<!-- 모집홍보 지원신청서 해외체류 복사 시작 (여명환)-->
	<insert id="insertCopyEduApplyOverseas" parameterType="int">
		INSERT INTO 
			smp_info_overseas_tb
			(
				SMP_SEQ
				, SMP_OVERSEAS_NM
				, SMP_OVERSEAS_ST
				, SMP_OVERSEAS_ET
				, SMP_OVERSEAS_PURPOSE
				, SMP_OVERSEAS_INS_ID
				, SMP_OVERSEAS_INS_DT
				, SMP_OVERSEAS_UDT_ID
				, SMP_OVERSEAS_UDT_DT
			) 
		SELECT 
			basic.smp_seq
			, overseas.APP_OVERSEAS_NM
			, overseas.APP_OVERSEAS_ST
			, overseas.APP_OVERSEAS_ET
			, overseas.APP_OVERSEAS_PURPOSE
			, overseas.APP_OVERSEAS_INS_ID
			, overseas.APP_OVERSEAS_INS_DT
			, overseas.APP_OVERSEAS_UDT_ID
			, overseas.APP_OVERSEAS_UDT_DT
		FROM 
			smp_info_basic_tb basic
			, edu_masterapply_overseas_tb overseas 
		where 
			overseas.app_seq = #{app_seq} 
		AND 
			BASIC.SMP_SEQ = (SELECT MAX(SMP_SEQ) FROM SMP_INFO_BASIC_TB)
	</insert>
	<!-- 모집홍보 지원신청서 해외체류 복사 종료 -->
	
	<!-- 모집홍보 지원신청서 기타 증명 파일 복사 시작 (여명환)-->
	<insert id="insertCopyEduApplyFile" parameterType="int">
		INSERT INTO 
			smp_info_file_tb
			(
				SMP_SEQ
				, SMP_FILE_ORIGIN
				, SMP_FILE_SAVED
				, SMP_FILE_INS_ID
				, SMP_FILE_INS_DT
				, SMP_FILE_UDT_ID
				, SMP_FILE_UDT_DT
			) 
		SELECT 
			basic.smp_seq
			, file.APP_FILE_ORIGIN
			, file.APP_FILE_SAVED
			, file.APP_FILE_INS_ID
			, file.APP_FILE_INS_DT
			, file.APP_FILE_UDT_ID
			, file.APP_FILE_UDT_DT
		FROM 
			smp_info_basic_tb basic
			, edu_masterapply_file_tb file 
		where 
			file.app_seq = #{app_seq} 
		AND 
			BASIC.SMP_SEQ = (SELECT MAX(SMP_SEQ) FROM SMP_INFO_BASIC_TB)
	</insert>
	<!-- 모집홍보 지원신청서 기타 증명 파일 복사 종료 -->
	
	<!-- 합격한 학생들 정보 조회 (여명환)-->
	<resultMap type="hashmap" id="smpsmplyMap">
		<id property="smp_seq" column="smp_seq" />
		<result property="app_id" column="app_id" />
		<result property="gisu_seq" column="gisu_seq" />
		<result property="smp_mt_ck" column="smp_mt_ck" />
		<result property="smp_mt_etc" column="smp_mt_etc" />
		<result property="smp_zipcode" column="smp_zipcode" />
		<result property="smp_address" column="smp_address" />
		<result property="smp_address_detail" column="smp_address_detail" />
		<result property="smp_em_phone" column="smp_em_phone" />
		<result property="smp_take_ck" column="smp_take_ck" />
		<result property="smp_take_dt" column="smp_take_dt" />
		<result property="smp_take_rt" column="smp_take_rt" />
		<result property="smp_abroad_ck" column="smp_abroad_ck" />
		<result property="smp_kmove_ck" column="smp_kmove_ck" />
		<result property="smp_kmove_nm" column="smp_kmove_nm" />
		<result property="smp_kmove_ag" column="smp_kmove_ag" />
		<result property="smp_kmove_st" column="smp_kmove_st" />
		<result property="smp_kmove_et" column="smp_kmove_et" />
        <result property="smp_self_intro" column="smp_self_intro" />
		<result property="smp_photo_saved" column="smp_photo_saved" />
		<result property="smp_photo_origin" column="smp_photo_origin" />
		<result property="smp_edu_file_saved" column="smp_edu_file_saved" />
		<result property="smp_edu_file_origin" column="smp_edu_file_origin" />
		<result property="smp_isr_file_saved" column="smp_isr_file_saved" />
		<result property="smp_isr_file_origin" column="smp_isr_file_origin" />
		<result property="smp_imm_file_saved" column="smp_imm_file_saved" />
		<result property="smp_imm_file_origin" column="smp_imm_file_origin" />
		
		<result property="smp_kmove_gb" column="smp_kmove_gb" />
		<result property="smp_class_info" column="smp_class_info" />
		<result property="smp_app_lo_gb" column="smp_app_lo_gb" />
		<result property="smp_cup_gb" column="smp_cup_gb" />
		<result property="smp_residence" column="smp_residence" />
		<result property="smp_applied_ck" column="smp_applied_ck" />
		
		
		<collection property="eduHistoryList" javaType="java.util.ArrayList" resultMap="smpInfoEduHistory" />
		<collection property="languageList" javaType="java.util.ArrayList" resultMap="smpInfoLanguage" />
		<collection property="careerList" javaType="java.util.ArrayList" resultMap="smpInfoCareer" />
		<collection property="licenseList" javaType="java.util.ArrayList" resultMap="smpInfoLicense" />
		<collection property="overseasList" javaType="java.util.ArrayList" resultMap="smpInfoOverseas" />
		<collection property="studyList" javaType="java.util.ArrayList" resultMap="smpInfoStudy" />
		<collection property="fileList" javaType="java.util.ArrayList" resultMap="smpInfoFile" />
	</resultMap>
	<resultMap type="hashmap" id="smpInfoEduHistory">
		<id property="smp_edu_seq" column="smp_edu_seq" />
		<result property="smp_edu_sc_nm" column="smp_edu_sc_nm" />
		<result property="smp_edu_major" column="smp_edu_major" />
		<result property="smp_edu_gd_ck" column="smp_edu_gd_ck" />
		<result property="smp_edu_gd_dt" column="smp_edu_gd_dt" />
		<result property="smp_edu_sc_lo" column="smp_edu_sc_lo" />
		<result property="smp_edu_gd_rq" column="smp_edu_gd_rq" />
	</resultMap>
	<resultMap type="hashmap" id="smpInfoCareer">
		<id property="smp_crr_seq" column="smp_crr_seq" />
		<result property="smp_crr_place" column="smp_crr_place" />
		<result property="smp_crr_position" column="smp_crr_position" />
		<result property="smp_crr_st" column="smp_crr_st" />
		<result property="smp_crr_et" column="smp_crr_et" />
		<result property="smp_crr_dept" column="smp_crr_dept" />
		<result property="smp_crr_phone" column="smp_crr_phone" />
	</resultMap>
	<resultMap type="hashmap" id="smpInfoLanguage">
		<id property="smp_lang_seq" column="smp_lang_seq" />
		<result property="smp_lang_nm" column="smp_lang_nm" />
		<result property="smp_lang_test_nm" column="smp_lang_test_nm" />
		<result property="smp_lang_grade" column="smp_lang_grade" />
		<result property="smp_lang_ag" column="smp_lang_ag" />
		<result property="smp_lang_obtain_dt" column="smp_lang_obtain_dt" />
	</resultMap>
	<resultMap type="hashmap" id="smpInfoLicense">
		<id property="smp_license_seq" column="smp_license_seq" />
		<result property="smp_license_nm" column="smp_license_nm" />
		<result property="smp_license_grade" column="smp_license_grade" />
		<result property="smp_license_ag" column="smp_license_ag" />
		<result property="smp_license_obtain_dt" column="smp_license_obtain_dt" />
	</resultMap>
	<resultMap type="hashmap" id="smpInfoOverseas">
		<id property="smp_overseas_seq" column="smp_overseas_seq" />
		<result property="smp_overseas_nm" column="smp_overseas_nm" />
		<result property="smp_overseas_st" column="smp_overseas_st" />
		<result property="smp_overseas_et" column="smp_overseas_et" />
		<result property="smp_overseas_purpose" column="smp_overseas_purpose" />
	</resultMap>
	<resultMap type="hashmap" id="smpInfoStudy">
		<id property="smp_study_seq" column="smp_study_seq" />
		<result property="smp_study_nm" column="smp_study_nm" />
		<result property="smp_study_st" column="smp_study_st" />
		<result property="smp_study_et" column="smp_study_et" />
		<result property="smp_study_ag" column="smp_study_ag" />
		<result property="smp_study_detail" column="smp_study_detail" />
	</resultMap>
	<resultMap type="hashmap" id="smpInfoFile">
		<id property="smp_file_seq" column="smp_file_seq" />
		<result property="smp_file_origin" column="smp_file_origin" />
		<result property="smp_file_saved" column="smp_file_saved" />
	</resultMap>
	<select id="selectSmpStudentUpdateForm" parameterType="hashmap" resultMap="smpsmplyMap">
		select
			form.smp_seq
			,form.app_id
			,form.gisu_seq
			,form.smp_mt_ck
			,form.smp_mt_etc
			,form.smp_zipcode
			,form.smp_address
			,form.smp_address_detail
			,form.smp_em_phone
			,form.smp_take_ck
			,DATE_FORMAT(form.smp_take_dt, '%Y-%m-%d') as smp_take_dt
			,form.smp_take_rt
			,form.smp_abroad_ck
			,form.smp_kmove_ck
			,form.smp_kmove_nm
			,form.smp_kmove_ag
			,DATE_FORMAT(form.smp_kmove_st, '%Y-%m-%d') as smp_kmove_st
			,DATE_FORMAT(form.smp_kmove_et, '%Y-%m-%d') as smp_kmove_et
			,form.smp_self_intro
			,form.smp_photo_saved
			,form.smp_photo_origin
			,form.smp_edu_file_saved
			,form.smp_edu_file_origin
			,form.smp_isr_file_saved
			,form.smp_isr_file_origin
			,form.smp_imm_file_saved
			,form.smp_imm_file_origin
			,form.smp_kmove_gb
			,form.smp_class_info
			,form.smp_app_lo_gb
			,form.smp_cup_gb
			,form.smp_residence
			,form.smp_applied_ck
			,eduhistory.smp_edu_seq
			,eduhistory.smp_edu_sc_nm
		    ,eduhistory.smp_edu_major
		    ,eduhistory.smp_edu_gd_ck
		    ,DATE_FORMAT(eduhistory.smp_edu_gd_dt, '%Y-%m-%d') as smp_edu_gd_dt
		    ,eduhistory.smp_edu_sc_lo
		    ,eduhistory.smp_edu_gd_rq
			,language.smp_lang_seq
			,language.smp_lang_nm
		    ,language.smp_lang_test_nm
		    ,language.smp_lang_grade
		    ,language.smp_lang_ag
		    ,DATE_FORMAT(language.smp_lang_obtain_dt, '%Y-%m-%d') as smp_lang_obtain_dt
		    ,career.smp_crr_seq
		    ,career.smp_crr_place
		    ,career.smp_crr_position
		    ,DATE_FORMAT(career.smp_crr_st, '%Y-%m-%d') as smp_crr_st
		    ,DATE_FORMAT(career.smp_crr_et, '%Y-%m-%d') as smp_crr_et
		    ,career.smp_crr_dept
		    ,career.smp_crr_phone
		    ,study.smp_study_seq
		    ,study.smp_study_nm
		    ,DATE_FORMAT(study.smp_study_st, '%Y-%m-%d') as smp_study_st
		    ,DATE_FORMAT(study.smp_study_et, '%Y-%m-%d') as smp_study_et
		    ,study.smp_study_ag
		    ,study.smp_study_detail
		    ,license.smp_license_seq
		    ,license.smp_license_nm
		    ,license.smp_license_grade
		    ,license.smp_license_ag
		    ,DATE_FORMAT(license.smp_license_obtain_dt, '%Y-%m-%d') as smp_license_obtain_dt
		    ,overseas.smp_overseas_seq
		    ,overseas.smp_overseas_nm
		    ,DATE_FORMAT(overseas.smp_overseas_st, '%Y-%m-%d') as smp_overseas_st
		    ,DATE_FORMAT(overseas.smp_overseas_et, '%Y-%m-%d') as smp_overseas_et
		    ,overseas.smp_overseas_purpose
			,file.smp_file_seq
			,file.smp_file_origin
			,file.smp_file_saved
		from
			SMP_INFO_BASIC_TB form 
		LEFT JOIN SMP_INFO_EDUHISTORY_TB eduhistory
		ON
			form.smp_seq = eduhistory.smp_seq
		LEFT JOIN SMP_INFO_LANGUAGE_TB language
		ON
			form.smp_seq = language.smp_seq
		LEFT JOIN SMP_INFO_CAREER_TB career
		ON
			form.smp_seq = career.smp_seq
		LEFT JOIN SMP_INFO_STUDY_TB study
		ON
			form.smp_seq = study.smp_seq
		LEFT JOIN SMP_INFO_LICENSE_TB license
		ON
			form.smp_seq = license.smp_seq
		LEFT JOIN SMP_INFO_OVERSEAS_TB overseas
		ON
			form.smp_seq = overseas.smp_seq
		LEFT JOIN SMP_INFO_FILE_TB file
		ON
			form.smp_seq = file.smp_seq
		where
			app_id = #{app_id}
		and
			gisu_seq = #{gisu_seq}
	
	</select>
	
	 <!-- 학생정보 삭제 시작 (여명환)-->
	<delete id="deleteSmpStudentForm" parameterType="int">
		delete from
			SMP_INFO_BASIC_TB
		where
			smp_seq = #{smp_seq}
	</delete>
	<!-- 학생정보 삭제 종료 -->
	
	<!-- 학생정보 폼 등록 시작 (여명환)-->
	<insert id="insertSmpStudentForm" parameterType="SMPForm" useGeneratedKeys="true" keyProperty="smp_seq">
		insert into 
			SMP_INFO_BASIC_TB
			(
				app_id
				,gisu_seq
				,smp_mt_ck
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_mt_etc)">
				,smp_mt_etc
				</if>
				,smp_zipcode
				,smp_address
				,smp_address_detail
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_em_phone)">
				,smp_em_phone
				</if>
				,smp_take_ck
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_take_dt)">
				,smp_take_dt
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_take_rt)">
				,smp_take_rt
				</if>
				,smp_abroad_ck
				,smp_kmove_ck
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_nm)">
				,smp_kmove_nm
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_ag)">
				,smp_kmove_ag
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_st)">
				,smp_kmove_st
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_et)">
				,smp_kmove_et
				</if>
                
				,smp_self_intro
				,smp_photo_saved
				,smp_photo_origin
				<if test="smp_edu_file_saved != null and smp_edu_file_origin != null">
				,smp_edu_file_saved
				,smp_edu_file_origin
				</if>
				<if test="smp_isr_file_saved != null and smp_isr_file_origin != null">
				,smp_isr_file_saved
				,smp_isr_file_origin
				</if>
				<if test="smp_imm_file_saved != null and smp_imm_file_origin != null">
				,smp_imm_file_saved
				,smp_imm_file_origin
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_gb)">
				,smp_kmove_gb
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_class_info)">
				,smp_class_info
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_app_lo_gb)">
				,smp_app_lo_gb
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_cup_gb)">
				,smp_cup_gb
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_residence)">
				,smp_residence
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_applied_ck)">
				,smp_applied_ck
				</if>
				,smp_ins_id
				,smp_ins_dt
				,smp_udt_id
				,smp_udt_dt
			) values (
				#{app_id}
				,#{gisu_seq}
				,#{smp_mt_ck}
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_mt_etc)">
				,#{smp_mt_etc}
				</if>
				,#{smp_zipcode}
				,#{smp_address}
				,#{smp_address_detail}
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_em_phone)">
				,#{smp_em_phone}
				</if>
				,#{smp_take_ck}
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_take_dt)">
				,#{smp_take_dt}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_take_rt)">
				,#{smp_take_rt}
				</if>
				,#{smp_abroad_ck}
				,#{smp_kmove_ck}
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_nm)">
				,#{smp_kmove_nm}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_ag)">
				,#{smp_kmove_ag}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_st)">
				,#{smp_kmove_st}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_et)">
				,#{smp_kmove_et}
				</if>
                
				,#{smp_self_intro}
				,#{smp_photo_saved}
				,#{smp_photo_origin}
				<if test="smp_edu_file_saved != null and smp_edu_file_origin != null">
				,#{smp_edu_file_saved}
				,#{smp_edu_file_origin}
				</if>
				<if test="smp_isr_file_saved != null and smp_isr_file_origin != null">
				,#{smp_isr_file_saved}
				,#{smp_isr_file_origin}
				</if>
				<if test="smp_imm_file_saved != null and smp_imm_file_origin != null">
				,#{smp_imm_file_saved}
				,#{smp_imm_file_origin}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_kmove_gb)">
				,#{smp_kmove_gb}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_class_info)">
				,#{smp_class_info}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_app_lo_gb)">
				,#{smp_app_lo_gb}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_cup_gb)">
				,#{smp_cup_gb}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_residence)">
				,#{smp_residence}
				</if>
				<if test="@global.segroup.util.Comparator@isNotEmpty(smp_applied_ck)">
				,#{smp_applied_ck}
				</if>
				,#{smp_ins_id}
				,now()
				,#{smp_udt_id}
				,now()
			)
	</insert>
	<!-- 학생정보 폼 등록 종료 -->
	
	<!-- 학생정보 학력사항 등록 시작 (여명환)-->
	<insert id="insertSmpStudentEduHistory" parameterType="hashmap">
		insert into
			SMP_INFO_EDUHISTORY_TB
				(
					smp_seq,
					smp_edu_sc_nm,
					smp_edu_major,
					smp_edu_gd_ck,
					smp_edu_gd_dt,
					smp_edu_sc_lo,
					smp_edu_gd_rq,
					smp_edu_ins_id,
					smp_edu_ins_dt,
					smp_edu_udt_id,
					smp_edu_udt_dt										
				)values
				<foreach item="eduHistory" index="index" collection="list" open=" " separator="," close=" ">
				(
					#{smp_seq},
					#{eduHistory.smp_edu_sc_nm},
					#{eduHistory.smp_edu_major},
					#{eduHistory.smp_edu_gd_ck},
					#{eduHistory.smp_edu_gd_dt},
					#{eduHistory.smp_edu_sc_lo},
					#{eduHistory.smp_edu_gd_rq},
					#{app_id},
					now(),
					#{app_id},
					now()	
				)
				</foreach>
	</insert>
	<!-- 학생정보 학력사항 등록 종료 -->
	
	<!-- 학생정보 경력사항 등록 시작(여명환) -->
	<insert id="insertSmpStudentCareer" parameterType="hashmap">
		insert into
			SMP_INFO_CAREER_TB
				(
					smp_seq,
					smp_crr_place,
					smp_crr_position,
					smp_crr_st,
					smp_crr_et,
					smp_crr_dept,
					smp_crr_phone,
					smp_crr_ins_id,
					smp_crr_ins_dt,
					smp_crr_udt_id,
					smp_crr_udt_dt
				)values
				<foreach item="career" index="index" collection="list" open=" " separator="," close=" ">
				(
					#{smp_seq},
					#{career.smp_crr_place},
					#{career.smp_crr_position},
					#{career.smp_crr_st},
					#{career.smp_crr_et},
					#{career.smp_crr_dept},
					#{career.smp_crr_phone},
					#{app_id},
					now(),
					#{app_id},
					now()
				)
				</foreach>
	</insert>
	<!-- 학생정보 경력사항 등록 종료 -->
	
	<!-- 학생정보 교육이수 등록 시작(여명환) -->
	<insert id="insertSmpStudentStudy" parameterType="hashmap">
		insert into
			EDU_INFO_STUDY_TB
				(
					smp_seq,
					smp_study_nm,
					smp_study_st,
					smp_study_et,
					smp_study_ag,
					smp_study_detail,
					smp_study_ins_id,
					smp_study_ins_dt,
					smp_study_udt_id,
					smp_study_udt_dt
				)values
				<foreach item="study" index="index" collection="list" open=" " separator="," close=" ">
				(
					#{smp_seq},
					#{study.smp_study_nm},
					#{study.smp_study_st},
					#{study.smp_study_et},
					#{study.smp_study_ag},
					#{study.smp_study_detail},
					#{app_id},
					now(),
					#{app_id},
					now()
				)
				</foreach>
	</insert>
	<!-- 학생정보 교육이수 등록 종료 -->
	
	<!-- 모집홍보 지원신청서 언어능력 등록 시작(여명환) -->
	<insert id="insertSmpStudentLanguage" parameterType="hashmap">
		insert into
			SMP_INFO_LANGUAGE_TB
				(
					smp_seq,
					smp_lang_nm,
					smp_lang_test_nm,
					smp_lang_grade,
					smp_lang_ag,
					smp_lang_obtain_dt,
					smp_lang_ins_id,
					smp_lang_ins_dt,
					smp_lang_udt_id,
					smp_lang_udt_dt
				)values
				<foreach item="language" index="index" collection="list" open=" " separator="," close=" ">
				(
					#{smp_seq},
					#{language.smp_lang_nm},
					#{language.smp_lang_test_nm},
					#{language.smp_lang_grade},
					#{language.smp_lang_ag},
					#{language.smp_lang_obtain_dt},
					#{app_id},
					now(),
					#{app_id},
					now()
				)
				</foreach>
	</insert>
	<!-- 학생정보 언어능력 등록 종료 -->
	
	<!-- 학생정보 자격증 등록 시작(여명환) -->
	<insert id="insertSmpStudentLicense" parameterType="hashmap">
		insert into
			SMP_INFO_LICENSE_TB
				(
					smp_seq,
					smp_license_nm,
					smp_license_grade,
					smp_license_ag,
					smp_license_obtain_dt,
					smp_license_ins_id,
					smp_license_ins_dt,
					smp_license_udt_id,
					smp_license_udt_dt
				)values
				<foreach item="license" index="index" collection="list" open=" " separator="," close=" ">
				(
					#{smp_seq},
					#{license.smp_license_nm},
					#{license.smp_license_grade},
					#{license.smp_license_ag},
					#{license.smp_license_obtain_dt},
					#{app_id},
					now(),
					#{app_id},
					now()
				)
				</foreach>
	</insert>
	<!-- 학생정보 자격증 등록 종료 -->
	
	<!-- 학생정보 해외체류 등록 시작(여명환) -->
	<insert id="insertSmpStudentOverseas" parameterType="hashmap">
		insert into
			SMP_INFO_OVERSEAS_TB
				(
					smp_seq,
					smp_overseas_nm,
					smp_overseas_st,
					smp_overseas_et,
					smp_overseas_purpose,
					smp_overseas_ins_id,
					smp_overseas_ins_dt,
					smp_overseas_udt_id,
					smp_overseas_udt_dt
				)values
				<foreach item="overseas" index="index" collection="list" open=" " separator="," close=" ">
				(
					#{smp_seq},
					#{overseas.smp_overseas_nm},
					#{overseas.smp_overseas_st},
					#{overseas.smp_overseas_et},
					#{overseas.smp_overseas_purpose},
					#{app_id},
					now(),
					#{app_id},
					now()
				)
				</foreach>
	</insert>
	<!-- 학생정보지원신청서 해외체류 등록 종료 -->
	
	<!-- 학생정보 지원신청서 기타 증명 파일 등록 시작(여명환) -->
	<insert id="insertSmpStudentFile" parameterType="hashmap">
		insert into
			SMP_INFO_FILE_TB
				(
					smp_seq,
					smp_file_origin,
					smp_file_saved,
					smp_file_ins_id,
					smp_file_ins_dt,
					smp_file_udt_id,
					smp_file_udt_dt
				)values
				<foreach item="file" index="index" collection="list" open=" " separator="," close=" ">
				(
					#{smp_seq},
					#{file.smp_file_origin},
					#{file.smp_file_saved},
					#{app_id},
					now(),
					#{app_id},
					now()
				)
				</foreach>
	</insert>
	<!-- 학생정보 지원신청서 기타 증명 파일 등록 종료 -->
	
	<!-- 특정 기수의 일정 이벤트 리스트 조회 시작(박찬주)-->
	<select id="selectAllSocietySmpSchedule" resultType="SMPSSColor" parameterType="int">
	select 
		s.smp_sch_seq
		, s.gisu_seq
		, s.smp_sch_color_seq
		, s.smp_sch_ct
		, s.smp_sch_cont
		, s.smp_sch_st
		, s.smp_sch_et
		, s.smp_sch_ins_id
		, s.smp_sch_ins_dt
		, s.smp_sch_udt_id
		, s.smp_sch_udt_dt
		, c.smp_sch_title
		, c.smp_sch_color
	from 
		smp_schedule_color_tb c
		, smp_schedule_tb s
	where 
		c.smp_sch_color_seq = s.smp_sch_color_seq 
			and 
		s.gisu_seq = #{gisu_seq} 
	</select>
	<!-- 특정 기수의 일정 이벤트 리스트 조회 종료-->


	<!-- 특정 일정 이벤트 삭제 시작(박찬주)-->
	<delete id="deleteSocietySmpSchedule" parameterType="int">
		delete from 
			SMP_SCHEDULE_TB 
		where 
			smp_sch_seq = #{smp_sch_seq} 
	</delete>
	<!-- 특정 일정 이벤트 삭제 종료-->


	<!-- 특정 일정 이벤트 수정 시작(박찬주)-->
	<update id="updateSocietySmpSchedule" parameterType="SMPSSColor">
	update SMP_SCHEDULE_TB 
		set 
		gisu_seq = #{gisu_seq}
		,smp_sch_ct = #{smp_sch_ct}
		,smp_sch_cont = #{smp_sch_cont}
		,smp_sch_st = #{smp_sch_st}
		,smp_sch_et = #{smp_sch_et}
		,smp_sch_udt_id = #{smp_sch_udt_id}
		,smp_sch_udt_dt = now()
		,smp_sch_color_seq = (
												select 
													SMP_SCH_COLOR_SEQ 
												from 
													smp_schedule_color_tb 
												where 
													gisu_seq =#{gisu_seq} 
												and 
													smp_sch_title = #{smp_sch_title}
												)
	where 
		smp_sch_seq = #{smp_sch_seq}
	 </update>
	<!-- 특정 일정 이벤트 수정 종료-->


	<!-- 학사관리 일정 이벤트 입력 시작(박찬주)-->
	<insert id="insertSocietySmpSchedule" parameterType="SMPSSColor">
	insert into
		SMP_SCHEDULE_TB
		(
			smp_sch_seq
			,gisu_seq
			,smp_sch_color_seq
			,smp_sch_ct
			,smp_sch_cont
			,smp_sch_st
			,smp_sch_et
			,smp_sch_ins_id
			,smp_sch_ins_dt
			,smp_sch_udt_id
			,smp_sch_udt_dt
		)
		values
		(
			smp_sch_seq
			,#{gisu_seq}
			,(
				select 
					SMP_SCH_COLOR_SEQ 
				FROM 
					smp_schedule_color_tb 
				where 
					SMP_SCH_TITLE = #{smp_sch_title} 
				and 
					gisu_seq = #{gisu_seq}
				)
			,#{smp_sch_ct}
			,#{smp_sch_cont}
			,#{smp_sch_st}
			,#{smp_sch_et}
			,#{smp_sch_ins_id}
			,now()
			,#{smp_sch_udt_id}
			,now()
		) 
	</insert>
	<!-- 학사관리 일정 이벤트 입력 종료-->

	<!-- 특정 기수의 월별 리스트 조회 시작(박찬주)-->
	<select id="monthEventSelect" resultType="SMPSSColor" parameterType="SMPSchedule">
	 select 
	 	s.smp_sch_seq
	 	, s.gisu_seq
	 	, s.smp_sch_color_seq
	 	, s.smp_sch_ct
	 	, s.smp_sch_st
	 	, s.smp_sch_et
	 	, s.smp_sch_ins_id
	 	, s.smp_sch_ins_dt
	 	, s.smp_sch_udt_id
	 	, s.smp_sch_udt_dt
	 	, c.smp_sch_title
	 	, c.smp_sch_color 
	 from 
	 	SMP_SCHEDULE_TB s
	 	, SMP_SCHEDULE_COLOR_TB c 
	 where 
	 	s.smp_sch_st between STR_TO_DATE(#{smp_sch_st}, '%Y-%m-%d') and STR_TO_DATE(#{smp_sch_et}, '%Y-%m-%d') 
	 and 
	 	s.gisu_seq=#{gisu_seq}
	 and 
	 	s.smp_sch_color_seq=c.smp_sch_color_seq 
	 order by 
	 	s.smp_sch_st 
	 </select>

	<!-- 특정 기수의 월별 리스트 조회 종료-->


	<!-- 학생 기수정보 조회 시작(박찬주)-->
	<select id="selectSocietySmpUserGisuNum" resultType="SEACurGisu" parameterType="String">
	select 
		gisu_seq
		,crc_seq
		,gisu_num
		,gisu_crc_nm
		,gisu_crc_days
		,gisu_crc_pay
		,gisu_app_st
		,gisu_app_et
		,gisu_crc_st
		,gisu_crc_et
		,gisu_per
		,gisu_ins_dt
		,gisu_ins_id
		,gisu_udt_dt
		,gisu_udt_id
	from 
		edu_curriculum_gisu_tb 
	where 
		gisu_seq = (
							select 
								gisu_seq 
							from 
								smp_info_basic_tb 
							where 
								app_id=#{app_id}
							)
	 </select>
	<!-- 학생 기수정보 조회 종료-->


	<!-- smart cloud it마스터 전체 기수 시퀀스, 넘버 조회 시작(박찬주)-->
	<select id="selectGisuSeqNumList" resultType="SEACurGisu">
	select 
		gisu_seq
		, gisu_num
		, gisu_crc_nm 
	from 
		edu_curriculum_gisu_tb 
	order by 
		gisu_num desc 
	</select>
	<!-- smart cloud it마스터 전체 기수 시퀀스, 넘버 조회 종료-->


	<!-- 기수 시퀀스에 따른 기수 넘버 조회 시작(박찬주)-->
	<select id="selectGisuNum" resultType="int" parameterType="int">
	select 
		gisu_num 
	from 
		edu_curriculum_gisu_tb 
	where 
		gisu_seq = #{gisu_seq} 
	</select>
	<!-- 기수 시퀀스에 따른 기수 넘버 조회 종료-->


	<select id="gisuTitleCheck" resultType="SMPScheColor" parameterType="int">
	select 
		smp_sch_color_seq
		,gisu_seq
		,smp_sch_title
		,smp_sch_color
	from 
		SMP_SCHEDULE_COLOR_TB 
	where 
		gisu_seq = #{gisu_seq} 
	</select>


	<insert id="schColorInsert" parameterType="SMPScheColor">
	insert into 
			smp_schedule_color_tb
			(	
				smp_sch_color_seq
				,gisu_seq
				,smp_sch_title
				,smp_sch_color
			)
			VALUES 
			<foreach close=" " separator="," open=" " collection="list" index="index" item="SMPScheColor">
			(
				smp_sch_color_seq
				,#{SMPScheColor.gisu_seq}
				,#{SMPScheColor.smp_sch_title}
				,#{SMPScheColor.smp_sch_color}
			) 
		</foreach>
	</insert>
	
	<update id="schColorUpdate" parameterType="SMPScheColor">
		update 
			SMP_SCHEDULE_COLOR_TB 
		set 
			gisu_seq = #{gisu_seq} 
			,smp_sch_color = #{smp_sch_color}
			,smp_sch_title = #{smp_sch_title}
		where 
			smp_sch_color_seq = #{smp_sch_color_seq}		
	</update>
	
	<delete id="schColorDelete" parameterType="int">
		delete 
			from 
		SMP_SCHEDULE_COLOR_TB 
			where 
		smp_sch_color_seq = #{smp_sch_color_seq} 	
	</delete>	
	
	<!-- 관리자 게시판 세부내용 등록 시작(전희배) -->
	<insert id="smp_board_contents_insert" parameterType="BoardContent" useGeneratedKeys="true" keyProperty="board_content_seq">
		insert into
			com_board_content_tb
			(
				board_seq
				,board_content_title
				,board_content_ct
				,board_content_nm
				,board_content_hit
				<if test="board_content_imp != null">
					,board_content_imp
				</if>
				,board_content_ins_dt
				,board_content_ins_id
				,board_content_udt_dt
				,board_content_udt_id
			)values(
				#{board_seq}
				,#{board_content_title}
				,#{board_content_ct}
				,#{board_content_nm}
				,#{board_content_hit}
				<if test="board_content_imp != null">
					,#{board_content_imp}
				</if>
				,now()
				,#{board_content_nm}
				,now()
				,#{board_content_nm}
			)
	</insert>
	
	<!-- admin_nm select (전희배) -->
	<select id="smp_select_admin_nm" parameterType="String" resultType="String">
	select 
		admin_nm 
	from 
		com_admin_tb
    where 
    	admin_id = #{admin_id}
	</select>
	
	<!-- 관리자 게시판 세부내용 수정 시작 -->
	<update id="smp_board_contents_update" parameterType="BoardContent">
		update
			com_board_content_tb
		set
			board_content_title = #{board_content_title}
			,board_content_ct = #{board_content_ct}
			<if test="board_content_imp != null">
				,board_content_imp=#{board_content_imp}
			</if>
			<if test="board_content_imp == null">
				, board_content_imp= 'A1101'
			</if>
			,board_content_udt_dt = now()
		where
			board_content_seq = #{board_content_seq}
	</update>
	<!-- 관리자 게시판 세부내용 수정 종료 -->
	
	<!-- 수강확인서 학생 정보 조회(여명환) -->
	<resultMap type="hashmap" id="printStudentMap">
		<id property="user_nm" column="user_nm" />
		<result property="user_birth" column="user_birth" />
		<result property="gisu_num" column="gisu_num" />
		<result property="gisu_crc_st" column="gisu_crc_st" />
		<result property="gisu_crc_et" column="gisu_crc_et" />
	</resultMap>
	<select id="smp_select_print_student" parameterType="String" resultMap="printStudentMap">
		select
			user.user_nm
			,user.user_birth
			,gisu.gisu_num
	    	,gisu.gisu_crc_st
	    	,gisu.gisu_crc_et
		from
			COM_USER_TB user
			,smp_info_basic_tb basic
			,edu_curriculum_gisu_tb gisu
	   where
	   		user.user_id = #{app_id} 
	   	and
	   		user.user_id = basic.app_id 
	   	and 
	   		basic.gisu_seq = gisu.gisu_seq
 	</select>
 	
 	<!-- smp테이블 이미 합격된 학생인지  체크 (여명환)-->
	<select id="smp_check_student" parameterType="SEAForm" resultType="int">
		select 
			count(*) 
		from 
			smp_info_basic_tb 
		where 
			app_id=#{app_id} 
		and 
			gisu_seq = #{gisu_seq}
	</select>
	<!-- smart cloud it마스터 전체 기수 시퀀스, 넘버 조회 종료-->
	
	<!-- 기수게시판 검색(전희배) -->
	<resultMap type="hashmap" id="boardGisu">
		<id property="gisu_seq" column="gisu_seq" />
		<result property="gisu_num" column="gisu_num" />
		<result property="gisu_crc_nm" column="gisu_crc_nm" />
	</resultMap>
	<select id="board_gisu_search"  resultMap="boardGisu">
		select
			gisu_seq
			,gisu_num
			,gisu_crc_nm
		from
			EDU_CURRICULUM_GISU_TB
		order by 
			gisu_num desc 
	</select>
	<!--  기수게시판 검색 종료 -->
	
	
	<!-- 게시글 기수별 조회 및 검색조회까지 (전희배) --><!-- 공통 코드 변경; 김준영 -->
	<select id="smpBoardListAll" resultType="hashmap" parameterType="hashmap">
   	     SELECT   
   	     	a.board_content_seq
   	     	, a.board_seq
   	     	, a.board_content_title
   	     	, a.board_content_ct
   	     	, a.board_content_nm
   	     	, a.board_content_hit
   	     	, a.board_content_imp 
   	     	, DATE_FORMAT(a.board_content_ins_dt, '%Y-%m-%d ') as board_content_ins_dt
   	     	, a.board_content_ins_id
   	     	, DATE_FORMAT(a.board_content_udt_dt, '%Y-%m-%d ') as board_content_udt_dt
   	     	, a.board_content_udt_id
   	     	, b.gisu_seq
   	    FROM 
   	    	com_board_content_tb as a
   	    JOIN 
   	    	smp_board_gisu_tb as b
		ON 
			a.board_content_seq = b.board_content_seq
   	    WHERE
			a.board_seq=#{boardSeq}
		and 
			b.gisu_seq=#{gisu_seq}
		and 
			board_content_imp='A1101'
		<choose>
			<when test="searchOption == 'title'">
				AND
					a.board_content_title like CONCAT('%',#{keyword},'%')
			</when>
			<when test="searchOption == 'name'">
				AND
					a.board_content_nm like CONCAT('%',#{keyword},'%')
			</when>
		</choose>
   	   order by 
   	   		a.board_content_imp  asc 
   	   		,a.board_content_ins_dt desc
	</select>
	
	<!-- 공통 코드 변경; 김준영 -->
	<select id="gettotal" parameterType="hashmap" resultType="int">
	select 
		count(*)
	FROM 
		com_board_content_tb as a
   	JOIN 
   		smp_board_gisu_tb as b
	ON 
		a.board_content_seq = b.board_content_seq
	where 
		a.board_seq = #{boardSeq}
	and 
		b.gisu_seq = #{gisu_seq} 
	and 
		board_content_imp = 'A1101'
	<choose>
		<when test="searchOption == 'title'">
			AND
				a.board_content_title like CONCAT('%',#{keyword},'%')
		</when>
		<when test="searchOption == 'name'">
			AND
				a.board_content_nm like CONCAT('%',#{keyword},'%')
		</when>
	</choose>
	<!--
	<if test="_parameter != null">
		and 
			a.board_content_title like CONCAT('%',#{searchText},'%')
	</if>
	--> 
	</select>
	<!-- 게시글 전체 목록 조회 및 검색조회 종료 -->
	
		<!-- 게시글 기수별 주요공지조회 및 검색조회까지 (여명환) --><!-- 공통 코드 변경; 김준영 -->
	<select id="smpMainBoardListAll" resultType="hashmap" parameterType="hashmap">
   	     SELECT   
   	     	a.board_content_seq
   	     	, a.board_seq
   	     	, a.board_content_title
   	     	, a.board_content_ct
   	     	, a.board_content_nm
   	     	, a.board_content_hit
   	     	, a.board_content_imp 
   	     	, DATE_FORMAT(a.board_content_ins_dt, '%Y-%m-%d ') as board_content_ins_dt
   	     	, a.board_content_ins_id
   	     	, DATE_FORMAT(a.board_content_udt_dt, '%Y-%m-%d ') as board_content_udt_dt
   	     	, a.board_content_udt_id
   	     	, b.gisu_seq
   	    FROM 
   	    	com_board_content_tb as a
   	    JOIN 
   	    	smp_board_gisu_tb as b
		ON 
			a.board_content_seq = b.board_content_seq
   	    WHERE
			a.board_seq=#{boardSeq}
			<choose>
				<when test="searchOption == 'title'">
					AND
						a.board_content_title like CONCAT('%',#{keyword},'%')
				</when>
				<when test="searchOption == 'name'">
					AND
						a.board_content_nm like CONCAT('%',#{keyword},'%')
				</when>
			</choose>
		and 
			b.gisu_seq=#{gisu_seq} 
		and 
			board_content_imp='A1100'
    
   	   order by 
   	   		BOARD_CONTENT_UDT_DT desc 
   	   limit 5
	</select>
	<!-- 학생정보 삭제 시작 (여명환)-->
	<delete id="smp_board_contents_delete" parameterType="int">
		delete from
			COM_BOARD_CONTENT_TB
		where
			board_content_seq = #{board_content_seq}
	</delete>
	<!-- 학생정보 삭제 종료 -->
	<!-- 학생정보 삭제 시작 (여명환)-->
	<delete id="smp_board_gisu_delete" parameterType="int">
		delete from
			smp_board_gisu_tb
		where
			board_content_seq = #{board_content_seq}
	</delete>
	<!-- 학생정보 삭제 종료 -->
	<!-- 학생정보 삭제 시작 (여명환)-->
	<delete id="board_contents_file_delete" parameterType="int">
		delete from
			COM_BOARD_FILE_TB
		where
			board_content_seq = #{board_content_seq}
	</delete>
	<!-- 학생정보 삭제 종료 -->

	<!-- smp_board_smp_tb 등록(전희배) -->
	<insert id="insertBoardGisu" parameterType="hashmap">
	insert into 
		smp_board_gisu_tb
		(
			board_content_seq
			,gisu_seq
		)values(
			#{board_content_seq}
			,#{gisu_seq}
		)
	</insert>
	
	<!-- 메인페이지 공지 리스트 조회 시작(여명환)-->
	<select id="selectMainPageBoard" resultType="BoardContent">
	select 
		board_content_title
		,date_format(board_content_udt_dt,'%Y.%m.%d') as board_content_udt_dt
	from 
		com_board_content_tb 
	where 
		board_seq='12' 
	order by 
		BOARD_CONTENT_UDT_DT desc 
	limit 7
	</select>
	<!-- 특정 기수의 일정 이벤트 리스트 조회 종료-->
	
	<!-- 학생 수  조회 시작(여명환)-->
	<select id="selectSmpNumberOfStudent" resultType="int">
		select 
			count(*) 
		from 
			smp_info_basic_tb
	</select>
	<!-- 특정 기수의 일정 이벤트 리스트 조회 종료-->
	
	<!-- smp_메모 등록(여명환) -->
	<update id="smp_insert_memo" parameterType="hashmap">
	update 
		SMP_INFO_BASIC_TB 
	set 
		smp_memo=#{smp_memo}
	where 
		app_id=#{app_id}
	</update>
	 <!-- smp_메모 등록(여명환) -->
	<select id="smp_select_memo" parameterType="String" resultType="String">
		select 
			smp_memo 
		from 
			SMP_INFO_BASIC_TB 
		where 
			app_id=#{app_id}
	</select>
	
	 <!-- 종합평가 과목 조회(여명환) -->
	<select id="getApsTotal" resultType="String">
		select 
			smp_aps_total_nm 
		from 
			smp_aps_total_tb
		group by
			smp_aps_total_nm	
	</select>
	
	 <!-- 그룹평가 과목 조회(여명환) -->
	<!-- <select id="getApsGroup" resultType="String">
		select 
			smp_aps_group_nm 
		from 
			smp_aps_group_tb
		group by
			smp_aps_group_nm	
	</select> -->
	
	 <!-- 상세평가 과목 조회(여명환) -->
	<select id="getApsDetail" resultType="String">
		select 
			smp_aps_detail_nm 
		from 
			smp_aps_detail_tb
		group by
			smp_aps_detail_nm	
	</select>
	
		<!-- 기수별 종합평가  수 조회 시작(여명환)-->
	<select id="selectGisuNumberOfTotal" parameterType="int" resultType="int">
		select 
			count(*) 
		from 
			smp_aps_total_tb 
		where 
			gisu_seq = #{gisu_seq}
	</select>
	<!-- 기수별 그룹평가 수  조회 시작(여명환)-->
	<select id="selectGisuNumberOfGroup" parameterType="String" resultType="int">
		select 
			count(*) 
		from 
			smp_aps_group_tb 
		where 
			gisu_seq = #{gisu_seq}
	</select>
	<!-- 기수별 상세평가 수   조회 시작(여명환)-->
	<select id="selectGisuNumberOfDetail" parameterType="String" resultType="int">
		select 
			count(*) 
		from 
			smp_aps_detail_tb 
		where 
			gisu_seq = #{gisu_seq}
	</select>
	<!-- 기수별 종합평가 내용  조회 시작(여명환)-->
	<select id="selectAPSTotal" parameterType="int" resultType="hashmap">
		select 
			total.smp_aps_total_seq
			, total.smp_aps_total_nm
			, total.smp_aps_total_ratio
			, total.smp_aps_total_ct
			, gisu.gisu_num  
		from 
			smp_aps_total_tb total
			, edu_curriculum_gisu_tb gisu 
		where 
			total.gisu_seq = #{gisu_seq} 
		and 
			gisu.gisu_seq = #{gisu_seq}
	</select>
	
	<!-- 기수별 상세평가 내용  조회 시작(여명환)-->
	<!-- <select id="selectAPSDetail" parameterType="hashmap" resultType="hashmap">
		select 
			total.smp_aps_total_seq
			, total.smp_aps_total_nm
			, total.smp_aps_total_ratio
			, total.smp_aps_total_ct
			, gro.smp_aps_group_seq
			, gro.smp_aps_group_nm
			, gro.smp_aps_group_ratio
			, gro.smp_aps_group_ct
			, detail.smp_aps_detail_seq
			, detail.smp_aps_detail_nm
			, detail.smp_aps_detail_ratio
			, detail.smp_aps_detail_ct
			, gisu.gisu_num  
		from 
			smp_aps_group_tb gro
			, smp_aps_total_tb total
			, smp_aps_detail_tb detail
			, edu_curriculum_gisu_tb gisu 
    	where 
    		total.smp_aps_total_seq = gro.smp_aps_total_seq 
    	and 
    		gro.smp_aps_group_seq = detail.smp_aps_group_seq 
    	and
    		 total.gisu_seq = #{gisu_seq} 
    	and 
    		gisu.gisu_seq = #{gisu_seq}
		<if test="search_name != null and search_name != ''">
			and 
				smp_aps_total_nm like CONCAT('%', #{search_name} , '%')
		</if>
	</select> -->
	<!-- 종합평가 정보 삭제(여명환) -->
	<delete id="deleteTotal" parameterType="String">
		delete from
			smp_aps_total_tb
		where
			smp_aps_total_seq = #{smp_aps_total_seq}
	</delete>
	<!-- 그룹평가 정보 삭제(여명환) -->
	<delete id="deleteGroup" parameterType="String">
		delete from
			smp_aps_group_tb
		where
			smp_aps_group_seq = #{smp_aps_group_seq}
	</delete>
	<!-- 상세평가 정보 삭제(여명환) -->
	<delete id="deleteDetail" parameterType="String">
		delete from
			smp_aps_detail_tb
		where
			smp_aps_detail_seq = #{smp_aps_detail_seq}
	</delete>
	
	 <!-- smp_aps_total 시퀀스, 이름 조회(전희배) -->
	<select id="selectApsTotalNm" parameterType="Integer" resultType="hashmap">
	select
		smp_aps_total_seq
		,smp_aps_total_nm
	from 
		smp_aps_total_tb
	where 
		gisu_seq=#{gisu_seq}
	</select>
	 <!-- smp_aps_total 시퀀스, 이름 조회 종료(전희배) -->

	 <!-- smp_aps_group 시퀀스, 이름 조회(전희배) -->
	<select id="selectApsGroupNm" parameterType="Integer" resultType="hashmap">
	select
		smp_aps_group_seq
		,smp_aps_group_nm
	from 
		smp_aps_group_tb
	where 
		smp_aps_total_seq=#{smp_aps_total_seq}
	</select>
	 <!-- smp_aps_group 시퀀스, 이름 조회(전희배) -->

	  <!-- smp_aps_detail 시퀀스, 이름 조회(전희배) -->
	<select id="selectApsDetailNm" parameterType="Integer" resultType="hashmap">
	select
		smp_aps_detail_seq
		,smp_aps_detail_nm
	from 
		smp_aps_detail_tb
	where 
		smp_aps_group_seq=#{smp_aps_group_seq}
	</select>
	 <!-- smp_aps_detail 시퀀스, 이름 조회(전희배) -->
	 
	  <!-- smp_aps_total 평가항목 전체 입력 (강인석)-->
	<insert id="insertSmpApsTotal" parameterType="hashmap">
	insert into 
		smp_aps_total_tb
		(
			GISU_SEQ
			,SMP_APS_TOTAL_NM
			,SMP_APS_TOTAL_RATIO
			,SMP_APS_TOTAL_INS_ID
			,SMP_APS_TOTAL_INS_DT
			,SMP_APS_TOTAL_UDT_ID
			,SMP_APS_TOTAL_UDT_DT
			,SMP_APS_TOTAL_CT	
		)values(
			#{gisu_seq}
			,#{smp_aps_total_nm}
			,#{smp_aps_total_ratio}
			,#{smp_aps_total_ins_id}
			,now()
			,#{smp_aps_total_udt_id}
			,now()	
			,#{smp_aps_total_ct}
		)
	</insert>
	
	<resultMap type="hashmap" id="groupMap">
		<id property="smp_aps_total_seq" column="smp_aps_total_seq"/>
		<result property="smp_aps_total_nm" column="smp_aps_total_nm"/>
		<result property="gisu_seq" column="gisu_seq"/>
		<result property="smp_aps_total_ratio" column="smp_aps_total_ratio"/>
		<collection property="groupTbList" javaType="java.util.ArrayList" resultMap="groupTb"/>
	</resultMap>
	<resultMap type="hashMap" id="groupTb">
		<id property="smp_aps_group_seq" column="smp_aps_group_seq"/>
		<result property="smp_aps_group_tp" column="smp_aps_group_tp"/>
		<collection property="groupExamList" javaType="java.util.ArrayList" resultMap="groupExam"/>
		<collection property="groupSubexamList" javaType="java.util.ArrayList" resultMap="groupSubexam"/>
		<collection property="groupConfirmList" javaType="java.util.ArrayList" resultMap="groupConfirm"/>
	</resultMap>
	<resultMap type="hashMap" id="groupExam">
		<id property="smp_aps_group_exam_seq" column="smp_aps_group_exam_seq"/>
		<result property="smp_aps_group_exam_nm" column="smp_aps_group_exam_nm"/>
		<result property="smp_aps_group_exam_ratio" column="smp_aps_group_exam_ratio"/>
		<result property="smp_aps_group_exam_pp" column="smp_aps_group_exam_pp"/>
		<collection property="detailExamList" javaType="java.util.ArrayList" resultMap="detailExam"/>
	</resultMap>
	<resultMap type="hashMap" id="groupSubexam">
		<id property="smp_aps_group_subexam_seq" column="smp_aps_group_subexam_seq"/>
		<result property="smp_aps_group_subexam_nm" column="smp_aps_group_subexam_nm"/>
		<result property="smp_aps_group_subexam_pp" column="smp_aps_group_subexam_pp"/>
		<collection property="detailSubexamList" javaType="java.util.ArrayList" resultMap="detailSubexam"/>
	</resultMap>
	<resultMap type="hashMap" id="groupConfirm">
		<id property="smp_aps_group_confirm_seq" column="smp_aps_group_confirm_seq"/>
		<result property="smp_aps_group_confirm_nm" column="smp_aps_group_confirm_nm"/>
	</resultMap>
	<resultMap type="hashMap" id="detailExam">
		<id property="smp_aps_detail_exam_seq" column="smp_aps_detail_exam_seq"/>
		<result property="smp_aps_detail_exam_nm" column="smp_aps_detail_exam_nm"/>
		<result property="smp_aps_detail_exam_ratio" column="smp_aps_detail_exam_ratio"/>
		<result property="smp_aps_detail_exam_pp" column="smp_aps_detail_exam_pp"/>
	</resultMap>
	<resultMap type="hashMap" id="detailSubexam">
		<id property="smp_aps_detail_subexam_seq" column="smp_aps_detail_subexam_seq"/>
		<result property="smp_aps_detail_subexam_nm" column="smp_aps_detail_subexam_nm"/>
		<result property="smp_aps_detail_subexam_pp" column="smp_aps_detail_subexam_pp"/>
	</resultMap>
	<!-- 기수에 따른 그룹평가 전체 내용 ResultMap (2019.02.21. 김홍일) -->
	<select id="selectAPSGroup" parameterType="int" resultMap="groupMap">
		select
			aps_total.smp_aps_total_seq
		    ,aps_total.SMP_APS_TOTAL_NM
		    ,aps_total.GISU_SEQ
		    ,aps_total.SMP_APS_TOTAL_RATIO
		    ,aps_group.SMP_APS_GROUP_SEQ
		    ,aps_group.SMP_APS_GROUP_TP
		    ,aps_group_exam.smp_aps_group_exam_seq
		    ,aps_group_exam.SMP_APS_GROUP_EXAM_NM
		    ,aps_group_exam.SMP_APS_GROUP_EXAM_RATIO
		    ,aps_group_exam.SMP_APS_GROUP_EXAM_PP
		    ,aps_group_subexam.smp_aps_group_subexam_seq
		    ,aps_group_subexam.SMP_APS_GROUP_SUBEXAM_NM
		    ,aps_group_subexam.SMP_APS_GROUP_SUBEXAM_PP
		    ,aps_group_confirmation.SMP_APS_GROUP_CONFIRM_SEQ
		    ,aps_group_confirmation.SMP_APS_GROUP_CONFIRM_NM
		from
			smp_aps_total_tb as aps_total
		left join
			smp_aps_group_tb as aps_group
		on
			aps_total.smp_aps_total_seq = aps_group.smp_aps_total_seq
		left join
			smp_aps_group_exam_tb as aps_group_exam
		on
			aps_group.smp_aps_group_seq = aps_group_exam.smp_aps_group_seq
		left join
			smp_aps_group_subexam_tb as aps_group_subexam
		on
			aps_group.smp_aps_group_seq = aps_group_subexam.smp_aps_group_seq
		left join
			smp_aps_group_confirmation_tb as aps_group_confirmation
		on
			aps_group.smp_aps_group_seq = aps_group_confirmation.smp_aps_group_seq
		where
			aps_total.gisu_seq = #{gisu_seq}
		order by
			aps_total.smp_aps_total_seq
	</select>
   
    <!-- smp_aps_group 평가항목 그룹 타입 입력 (김홍일)-->
    <insert id="insertSmpApsGroup" parameterType="SMPApsGroup" useGeneratedKeys="true" keyProperty="smp_aps_group_seq">
    insert into 
    	smp_aps_group_tb
	    (
		    SMP_APS_TOTAL_SEQ
		    ,SMP_APS_GROUP_TP
		    ,SMP_APS_GROUP_INS_ID
		    ,SMP_APS_GROUP_INS_DT
		    ,SMP_APS_GROUP_UDT_ID
		    ,SMP_APS_GROUP_UDT_DT   
	    )value(
		    #{smp_aps_total_seq}
		    ,#{smp_aps_group_tp}
		    ,#{smp_aps_group_ins_id}
		    ,now()
		    ,#{smp_aps_group_udt_id}
		    ,now()
	    )
    </insert>
    
    <!-- smp_aps_group_exam 평가항목 정규시험 그룹 입력 (김홍일)-->
    <insert id="insertSmpApsGroupExam" parameterType="SMPApsGroupExam">
    insert into 
    	smp_aps_group_exam_tb
	    (
	    	SMP_APS_GROUP_SEQ
		    ,SMP_APS_GROUP_EXAM_NM
		    ,SMP_APS_GROUP_EXAM_RATIO
		    ,SMP_APS_GROUP_EXAM_PP
		    ,SMP_APS_GROUP_EXAM_INS_ID
		    ,SMP_APS_GROUP_EXAM_INS_DT
		    ,SMP_APS_GROUP_EXAM_UDT_ID
		    ,SMP_APS_GROUP_EXAM_UDT_DT   
		    ,SMP_APS_GROUP_EXAM_CT
	    )value(
	    	#{smp_aps_group_seq}
		    ,#{smp_aps_group_exam_nm}
		    ,#{smp_aps_group_exam_ratio}
		    ,#{smp_aps_group_exam_pp}
		    ,#{smp_aps_group_exam_ins_id}
		    ,now()
		    ,#{smp_aps_group_exam_udt_id}
		    ,now()
		    ,#{smp_aps_group_exam_ct}
	    )
    </insert>
    
    <!-- smp_aps_group_subexam 평가항목  과목평가 그룹 입력 (김홍일)-->
    <insert id="insertSmpApsGroupSubexam" parameterType="SMPApsGroupSubexam">
    insert into 
    	smp_aps_group_subexam_tb
	    (
	    	SMP_APS_GROUP_SEQ
		    ,SMP_APS_GROUP_SUBEXAM_NM
		    ,SMP_APS_GROUP_SUBEXAM_PP
		    ,SMP_APS_GROUP_SUBEXAM_INS_ID
		    ,SMP_APS_GROUP_SUBEXAM_INS_DT
		    ,SMP_APS_GROUP_SUBEXAM_UDT_ID
		    ,SMP_APS_GROUP_SUBEXAM_UDT_DT   
		    ,SMP_APS_GROUP_SUBEXAM_CT
	    )value(
	    	#{smp_aps_group_seq}
		    ,#{smp_aps_group_subexam_nm}
		    ,#{smp_aps_group_subexam_pp}
		    ,#{smp_aps_group_subexam_ins_id}
		    ,now()
		    ,#{smp_aps_group_subexam_udt_id}
		    ,now()
		    ,#{smp_aps_group_subexam_ct}
	    )
    </insert>
    
    <!-- smp_aps_group_confirmation 평가항목 개별점수 및 확인서 그룹 입력 (김홍일)-->
    <insert id="insertSmpApsGroupConfirmation" parameterType="SMPApsGroupConfirmation">
    insert into 
    	smp_aps_group_confirmation_tb
	    (
	    	SMP_APS_GROUP_SEQ
		    ,SMP_APS_GROUP_CONFIRM_NM
		    ,SMP_APS_GROUP_CONFIRM_INS_ID
		    ,SMP_APS_GROUP_CONFIRM_INS_DT
		    ,SMP_APS_GROUP_CONFIRM_UDT_ID
		    ,SMP_APS_GROUP_CONFIRM_UDT_DT   
		    ,SMP_APS_GROUP_CONFIRM_CT
	    )value(
	    	#{smp_aps_group_seq}
		    ,#{smp_aps_group_confirm_nm}
		    ,#{smp_aps_group_confirm_ins_id}
		    ,now()
		    ,#{smp_aps_group_confirm_udt_id}
		    ,now()
		    ,#{smp_aps_group_confirm_ct}
	    )
    </insert>
    
    <!-- smp_aps_group 평가항목 그룹 타입 종류 별로 1개씩만 출력(김홍일) -->
    <select id="selectSmpApsGroupTabs" parameterType="int" resultType="SMPApsGroup">
    	SELECT
			smp_aps_group_seq
  		 	,smp_aps_total_seq
   		 	,smp_aps_group_tp
		FROM 
			smp_aps_group_tb
		where 
			smp_aps_total_seq = #{smp_aps_total_seq}
		group by
			smp_aps_group_tp;
		SELECT
			*
		FROM 
			smp_aps_group_tb;
    </select>
    
     <!-- smp_aps_detail 평가항목 세부 입력 (강인석)-->
    <insert id="insertSmpApsDetail" parameterType="hashmap">
    insert into 
    	smp_aps_detail_tb
	    (
		    SMP_APS_GROUP_SEQ
		    ,SMP_APS_DETAIL_NM
		    ,SMP_APS_DETAIL_RATIO
		    ,SMP_APS_DETAIL_INS_ID
		    ,SMP_APS_DETAIL_INS_DT
		    ,SMP_APS_DETAIL_UDT_ID
		    ,SMP_APS_DETAIL_UDT_DT
		    ,SMP_APS_DETAIL_CT
	    )values(
		    #{smp_aps_group_seq}
		    ,#{smp_aps_detail_nm}
		    ,#{smp_aps_detail_ratio}
		    ,#{smp_aps_detail_ins_id}
		    ,now()
		    ,#{smp_aps_detail_udt_id}
		    ,now()
		    ,#{smp_aps_detail_ct}
	    )
    </insert>
    
    <!-- smp_aps_detail 평가항목 상세 정규시험 입력 (김홍일)-->
    <insert id="insertSmpApsDetailExam" parameterType="SMPApsDetailExam">
    insert into 
    	smp_aps_detail_exam_tb
	    (
		    SMP_APS_GROUP_EXAM_SEQ
		    ,SMP_APS_DETAIL_EXAM_NM
		    ,SMP_APS_DETAIL_EXAM_RATIO
		    ,SMP_APS_DETAIL_EXAM_PP
		    ,SMP_APS_DETAIL_EXAM_INS_ID
		    ,SMP_APS_DETAIL_EXAM_INS_DT
		    ,SMP_APS_DETAIL_EXAM_UDT_ID
		    ,SMP_APS_DETAIL_EXAM_UDT_DT
		    ,SMP_APS_DETAIL_EXAM_CT
	    )values(
		    #{smp_aps_group_exam_seq}
		    ,#{smp_aps_detail_exam_nm}
		    ,#{smp_aps_detail_exam_ratio}
		    ,#{smp_aps_detail_exam_pp}
		    ,#{smp_aps_detail_exam_ins_id}
		    ,now()
		    ,#{smp_aps_detail_exam_udt_id}
		    ,now()
		    ,#{smp_aps_detail_exam_ct}
	    )
    </insert>
    
    <!-- smp_aps_detail 평가항목 상세 과목평가 입력 (김홍일)-->
    <insert id="insertSmpApsDetailSubexam" parameterType="SMPApsDetailSubexam">
    insert into 
    	smp_aps_detail_subexam_tb
	    (
		    SMP_APS_GROUP_SUBEXAM_SEQ
		    ,SMP_APS_DETAIL_SUBEXAM_NM
		    ,SMP_APS_DETAIL_SUBEXAM_PP
		    ,SMP_APS_DETAIL_SUBEXAM_INS_ID
		    ,SMP_APS_DETAIL_SUBEXAM_INS_DT
		    ,SMP_APS_DETAIL_SUBEXAM_UDT_ID
		    ,SMP_APS_DETAIL_SUBEXAM_UDT_DT
		    ,SMP_APS_DETAIL_SUBEXAM_CT
	    )values(
		    #{smp_aps_group_subexam_seq}
		    ,#{smp_aps_detail_subexam_nm}
		    ,#{smp_aps_detail_subexam_pp}
		    ,#{smp_aps_detail_subexam_ins_id}
		    ,now()
		    ,#{smp_aps_detail_subexam_udt_id}
		    ,now()
		    ,#{smp_aps_detail_subexam_ct}
	    )
    </insert>
    
	<!-- 기수에 따른 상세평가 전체 내용 ResultMap (2019.02.28. 김홍일) -->
	<select id="selectAPSDetail" parameterType="int" resultMap="groupMap">
		select 
			aps_total.smp_aps_total_seq
		    ,aps_total.smp_aps_total_nm
		    ,aps_total.gisu_seq
		    ,aps_total.smp_aps_total_ratio
		    ,aps_group.smp_aps_group_seq
		    ,aps_group.smp_aps_group_tp
		    ,aps_group_exam.smp_aps_group_exam_seq
		    ,aps_group_exam.smp_aps_group_exam_nm
		    ,aps_group_exam.smp_aps_group_exam_ratio
		    ,aps_group_exam.smp_aps_group_exam_pp
		    ,aps_group_subexam.smp_aps_group_subexam_seq
		    ,aps_group_subexam.smp_aps_group_subexam_nm
		    ,aps_group_subexam.smp_aps_group_subexam_pp
		    ,aps_detail_exam.smp_aps_detail_exam_seq
		    ,aps_detail_exam.smp_aps_detail_exam_nm
		    ,aps_detail_exam.smp_aps_detail_exam_ratio
		    ,aps_detail_exam.smp_aps_detail_exam_pp
		    ,aps_detail_subexam.smp_aps_detail_subexam_seq
		    ,aps_detail_subexam.smp_aps_detail_subexam_nm
		    ,aps_detail_subexam.smp_aps_detail_subexam_pp
		from
			smp_aps_total_tb as aps_total
		left join
			smp_aps_group_tb as aps_group
		on
			aps_total.smp_aps_total_seq = aps_group.smp_aps_total_seq
		left join
			smp_aps_group_exam_tb as aps_group_exam
		on
			aps_group.smp_aps_group_seq = aps_group_exam.smp_aps_group_seq
		left join
			smp_aps_detail_exam_tb as aps_detail_exam
		on
			aps_group_exam.smp_aps_group_exam_seq = aps_detail_exam.smp_aps_group_exam_seq
		left join
			smp_aps_group_subexam_tb as aps_group_subexam
		on
			aps_group.smp_aps_group_seq = aps_group_subexam.smp_aps_group_seq
		left join
			smp_aps_detail_subexam_tb as aps_detail_subexam
		on
			aps_group_subexam.smp_aps_group_subexam_seq = aps_detail_subexam.smp_aps_group_subexam_seq
		where
			aps_total.smp_aps_total_seq = #{smp_aps_total_seq};
	</select>
    
    <!-- 종합평가종합 상세내용  조회 시작(전희배)-->
	<select id="selectApsTotalDetail" parameterType="hashmap" resultType="hashmap">
 	select 
	    totaltb.smp_aps_total_seq
	    ,totaltb.smp_aps_total_nm
	    ,gisutb.gisu_seq
	    ,gisutb.gisu_num 
	    ,gisutb.gisu_crc_nm  
	    ,totaltb.smp_aps_total_ratio
	    ,totaltb.smp_aps_total_udt_id
	    ,totaltb.smp_aps_total_udt_dt
	    ,totaltb.smp_aps_total_ct
	from 
	    smp_aps_total_tb totaltb
	    ,edu_curriculum_gisu_tb gisutb 
	where 
		totaltb.gisu_seq = gisutb.gisu_seq 
    and 
    	totaltb.smp_aps_total_seq =#{smp_aps_total_seq}
	</select>
    <!-- 종합평가종합 상세내용  조회 종료(전희배)-->
    
    <!-- 종합평가그룹 상세내용  조회 시작(전희배)-->
	<select id="selectApsGroupDetail" parameterType="hashmap" resultType="hashmap">
    select 
	    grouptb.smp_aps_group_seq
	    ,grouptb.smp_aps_group_nm
	    ,gisutb.gisu_seq
	    ,gisutb.gisu_num  
	    ,gisutb.gisu_crc_nm 
	    ,totaltb.smp_aps_total_seq
	    ,totaltb.smp_aps_total_nm
	    ,grouptb.smp_aps_group_ratio
	    ,grouptb.smp_aps_group_tp
	    ,grouptb.smp_aps_group_udt_id
	    ,grouptb.smp_aps_group_udt_dt
	    ,grouptb.smp_aps_group_ct
	from 
    	smp_aps_total_tb totaltb
    	,smp_aps_group_tb grouptb
    	,edu_curriculum_gisu_tb gisutb 
    where 
    	totaltb.gisu_seq = gisutb.gisu_seq 
    and 
    	totaltb.smp_aps_total_seq = grouptb.smp_aps_total_seq
    and 
    	grouptb.smp_aps_group_seq = #{smp_aps_group_seq}
 	</select>
    <!-- 종합평가그룹 상세내용  조회 종료(전희배)-->
    
    <!-- 종합평가상세 상세내용  조회 시작(전희배)-->
	<select id="selectApsDetailDetail" parameterType="hashmap" resultType="hashmap">
     select 
	    detailtb.smp_aps_detail_seq
	    ,detailtb.smp_aps_detail_nm
	    ,gisutb.gisu_seq
	    ,gisutb.gisu_num
	    ,gisutb.gisu_crc_nm 
	    ,totaltb.smp_aps_total_seq
	    ,totaltb.smp_aps_total_nm
	    ,grouptb.smp_aps_group_seq
	    ,grouptb.smp_aps_group_nm
	    ,detailtb.smp_aps_detail_ratio
	    ,detailtb.smp_aps_detail_udt_id
	    ,detailtb.smp_aps_detail_udt_dt
	    ,detailtb.smp_aps_detail_ct
	from 
	    smp_aps_total_tb totaltb
	    ,smp_aps_group_tb grouptb
	    ,smp_aps_detail_tb detailtb
	    ,edu_curriculum_gisu_tb gisutb 
	where 
		totaltb.gisu_seq = gisutb.gisu_seq 
    and 
    	totaltb.smp_aps_total_seq = grouptb.smp_aps_total_seq
    and 
    	grouptb.smp_aps_group_seq = detailtb.smp_aps_group_seq
    and 
    	detailtb.smp_aps_detail_seq = #{smp_aps_detail_seq}
    	</select>
    <!-- 종합평가상세 상세내용  조회 종료(전희배)-->
    
    <!-- 종합평가종합 상세내용  수정 시작(전희배)  -->
	<update id="updateApsTotal" parameterType="hashmap">
		update
			smp_aps_total_tb
		set
			gisu_seq=#{gisu_seq}
			,smp_aps_total_nm = #{smp_aps_total_nm}
			,smp_aps_total_ratio = #{smp_aps_total_ratio}
			,smp_aps_total_udt_id = #{smp_aps_total_udt_id}
			,smp_aps_total_udt_dt = now()
			,smp_aps_total_ct = #{smp_aps_total_ct}
		where
			smp_aps_total_seq = #{smp_aps_total_seq}
	</update>
	<!--  종합평가종합 상세내용  수정 종료 -->
	    <!-- 종합평가그룹 상세내용  수정 시작(전희배)  -->
	<update id="updateApsGroup" parameterType="hashmap">
		update
			smp_aps_group_tb
		set
			smp_aps_group_nm = #{smp_aps_group_nm}
			,smp_aps_group_ratio = #{smp_aps_group_ratio}
			,smp_aps_group_tp = #{smp_aps_group_tp}
			,smp_aps_group_udt_id = #{smp_aps_group_udt_id}
			,smp_aps_group_udt_dt = now()
			,smp_aps_group_ct = #{smp_aps_group_ct}
		where
			smp_aps_group_seq = #{smp_aps_group_seq}
	</update>
	<!--  종합평가그룹 상세내용  수정 종료 -->
	    <!-- 종합평가상세 상세내용  수정 시작(전희배)  -->
	<update id="updateApsDetail" parameterType="hashmap">
		update
			smp_aps_detail_tb
		set
			smp_aps_detail_nm = #{smp_aps_detail_nm}
			,smp_aps_detail_ratio = #{smp_aps_detail_ratio}
			,smp_aps_detail_udt_id = #{smp_aps_detail_udt_id}
			,smp_aps_detail_udt_dt = now()
			,smp_aps_detail_ct = #{smp_aps_detail_ct}
		where
		 	smp_aps_detail_seq = #{smp_aps_detail_seq}
	</update>
	<!-- 종합평가그룹 상세내용  수정 종료 -->
	
	<!-- 박찬주 -->
	<select id="selectSmpApsSetList" resultType="SMPApsSetList">
		select 
			smp_aps_setlist_seq
			,smp_aps_setlist_nm
			,smp_aps_setlist_ins_id
			,smp_aps_setlist_ins_dt
			,smp_aps_setlist_udt_id
			,smp_aps_setlist_udt_dt
		from 
			smp_aps_setlist_tb
	</select> 
	
	<!-- 박찬주 -->
	<delete id="deleteSmpApsTotal" parameterType="int">
		delete from 
			smp_aps_total_tb 
		where 
			gisu_seq=#{gisu_seq}
	</delete>
	
	<!-- 박찬주 -->
	<select id="selectSmpApsSetTotal" parameterType="int" resultType="SMPApsSetTotal">
		select 
			smp_aps_settotal_seq 
			,smp_aps_settotal_nm
			,smp_aps_settotal_ratio 
			,smp_aps_setlist_seq
			,smp_aps_settotal_ins_id 
			,smp_aps_settotal_ins_dt
			,smp_aps_settotal_udt_id 
			,smp_aps_settotal_udt_dt
       from 
       		smp_aps_settotal_tb 
       where 
       		smp_aps_setlist_seq = #{smp_aps_setlist_seq}		    
	</select>
	
	<!-- 김진환 -->
	<select id="selectSmpApsSetGroup" parameterType="int" resultType="SMPApsSetGroup">
		select 
			smp_aps_setgroup_seq 
			,smp_aps_setgroup_nm
			,smp_aps_setgroup_ratio 
			,smp_aps_settotal_seq
			,smp_aps_setgroup_tp
			,smp_aps_setgroup_ins_id 
			,smp_aps_setgroup_ins_dt
			,smp_aps_setgroup_udt_id 
			,smp_aps_setgroup_udt_dt
		from 
			smp_aps_setgroup_tb 
		where 
			smp_aps_settotal_seq = #{smp_aps_settotal_seq}		    
	</select>
	
	<!-- 김진환 -->
	<select id="selectSmpApsSetDetail" parameterType="int" resultType="SMPApsSetDetail">
		select 
			smp_aps_setdetail_seq 
			,smp_aps_setdetail_nm
			,smp_aps_setdetail_ratio 
			,smp_aps_setgroup_seq
			,smp_aps_setdetail_ins_id 
			,smp_aps_setdetail_ins_dt
			,smp_aps_setdetail_udt_id 
			,smp_aps_setdetail_udt_dt
		from
			smp_aps_setdetail_tb 
		where 
			smp_aps_setgroup_seq = #{smp_aps_setgroup_seq}
	</select>
	
	<!-- 김진환 -->
	<select id="selectSetTotal" resultType="SMPApsSetTotal">
		select
			smp_aps_settotal_seq
			,smp_aps_setlist_seq
			,smp_aps_settotal_nm
			,smp_aps_settotal_ratio
			,smp_aps_settotal_ins_id
			,smp_aps_settotal_ins_dt
			,smp_aps_settotal_udt_id
			,smp_aps_settotal_udt_dt
		from 
			smp_aps_settotal_tb
	</select>
	
	<!-- 박찬주 -->
	<insert id="insertApsTotalSetting" parameterType="SMPApsTotal" useGeneratedKeys="true" keyProperty="smp_aps_total_seq">
	insert into 
		smp_aps_total_tb
		(
			GISU_SEQ
			,SMP_APS_TOTAL_NM
			,SMP_APS_TOTAL_RATIO
			,SMP_APS_TOTAL_INS_ID
			,SMP_APS_TOTAL_INS_DT
			,SMP_APS_TOTAL_UDT_ID
			,SMP_APS_TOTAL_UDT_DT
		)values(
			#{gisu_seq}
			,#{smp_aps_total_nm}
			,#{smp_aps_total_ratio}
			,#{smp_aps_total_ins_id}
			,now()
			,#{smp_aps_total_udt_id}
			,now()	
		)
	</insert>
	
	<!-- 박찬주 -->
	<insert id="insertApsGroupSetting" parameterType="SMPApsGroup" useGeneratedKeys="true" keyProperty="smp_aps_group_seq">
	insert into 
		smp_aps_group_tb
		(
			SMP_APS_TOTAL_SEQ
			,SMP_APS_GROUP_NM
			,SMP_APS_GROUP_RATIO
			,SMP_APS_GROUP_TP
			,SMP_APS_GROUP_INS_ID
			,SMP_APS_GROUP_INS_DT
			,SMP_APS_GROUP_UDT_ID
			,SMP_APS_GROUP_UDT_DT
		)values(
			#{smp_aps_total_seq}
			,#{smp_aps_group_nm}
			,#{smp_aps_group_ratio}
			,#{smp_aps_group_tp}
			,#{smp_aps_group_ins_id}
			,now()
			,#{smp_aps_group_udt_id}
			,now()	
		)
	</insert>
	
	<!-- 박찬주 -->
	<insert id="insertApsDetailSetting" parameterType="SMPApsDetail">
	insert into 
		smp_aps_detail_tb
		(
			SMP_APS_GROUP_SEQ
			,SMP_APS_DETAIL_NM
			,SMP_APS_DETAIL_RATIO
			,SMP_APS_DETAIL_INS_ID
			,SMP_APS_DETAIL_INS_DT
			,SMP_APS_DETAIL_UDT_ID
			,SMP_APS_DETAIL_UDT_DT
		)values(
			#{smp_aps_group_seq}
			,#{smp_aps_detail_nm}
			,#{smp_aps_detail_ratio}
			,#{smp_aps_detail_ins_id}
			,now()
			,#{smp_aps_detail_udt_id}
			,now()	
		)
	</insert>
	
	<!-- 박찬주 -->
	<select id="selectApsTotalListByGisuSeq" resultType="SMPApsTotal" parameterType="int">
	 	select
	 		smp_aps_total_seq
	 		,gisu_seq
	 		,smp_aps_total_nm
	 		,smp_aps_total_ratio
	 		,smp_aps_total_ct
	 		,smp_aps_total_ins_id
	 		,smp_aps_total_ins_dt
	 		,smp_aps_total_udt_id
	 		,smp_aps_total_udt_dt
	 	from 
	 		smp_aps_total_tb 
	 	where 
	 		gisu_seq=#{gisu_seq} 
	 	order by 
	 		smp_aps_total_seq
	</select>
	
	<!-- 박찬주 
	<select id="selectApsGroupList" resultType="SMPApsGroup" parameterType="int">
	 	select 
	 		smp_aps_group_seq
	 		,smp_aps_total_seq
	 		,smp_aps_group_nm
	 		,smp_aps_group_ratio
	 		,smp_aps_group_tp
	 		,smp_aps_group_ct
	 		,smp_aps_group_ins_id
	 		,smp_aps_group_ins_dt
	 		,smp_aps_group_udt_id
	 		,smp_aps_group_udt_dt
	 	from 
	 		smp_aps_group_tb 
	 	where 
	 		smp_aps_total_seq = #{smp_aps_total_seq} 
	 	order by 
	 		smp_aps_group_seq
	</select>-->
	
	<!-- 박찬주 -->
	<select id="selectApsDetailList" resultType="SMPApsDetail" parameterType="int">
	 	select
	 		smp_aps_detail_seq
	 		,smp_aps_group_seq
	 		,smp_aps_detail_nm
	 		,smp_aps_detail_ratio
	 		,smp_aps_detail_ct
	 		,smp_aps_detail_ins_id
	 		,smp_aps_detail_ins_dt
	 		,smp_aps_detail_udt_id
	 		,smp_aps_detail_udt_dt
	 	from 
	 		smp_aps_detail_tb 
	 	where 
	 		smp_aps_group_seq = #{smp_aps_group_seq} 
	 	order by 
	 		smp_aps_detail_seq
	</select>
	
	<!-- 박찬주 -->
	<insert id="insertApsSetList" parameterType="SMPApsSetList" useGeneratedKeys="true" keyProperty="smp_aps_setlist_seq">
		insert into 
			smp_aps_setlist_tb
			(
				smp_aps_setlist_nm
				,smp_aps_setlist_ins_id
				,smp_aps_setlist_ins_dt
				,smp_aps_setlist_udt_id
				,smp_aps_setlist_udt_dt		
			)
			values
			(
				#{smp_aps_setlist_nm}
				,#{smp_aps_setlist_ins_id}
				,now()
				,#{smp_aps_setlist_ins_id}
				,now()
			)
	</insert>
	
	<!-- 박찬주 -->
	<insert id="insertApsSetTotal" parameterType="SMPApsSetTotal" useGeneratedKeys="true" keyProperty="smp_aps_settotal_seq">
		insert into 
			smp_aps_settotal_tb
			(
				smp_aps_setlist_seq
				,smp_aps_settotal_nm
				,smp_aps_settotal_ratio
				,smp_aps_settotal_ins_id
				,smp_aps_settotal_ins_dt
				,smp_aps_settotal_udt_id
				,smp_aps_settotal_udt_dt		
			)
			values
			(
				#{smp_aps_setlist_seq}
				,#{smp_aps_settotal_nm}
				,#{smp_aps_settotal_ratio}
				,#{smp_aps_settotal_ins_id}
				,now()
				,#{smp_aps_settotal_ins_id}
				,now()
			)
	</insert>
	
	<!-- 박찬주 -->
	<insert id="insertApsSetGroup" parameterType="SMPApsSetGroup" useGeneratedKeys="true" keyProperty="smp_aps_setgroup_seq">
		insert into 
			smp_aps_setgroup_tb
			(
				smp_aps_settotal_seq
				,smp_aps_setgroup_nm
				,smp_aps_setgroup_ratio
				,smp_aps_setgroup_tp
				,smp_aps_setgroup_ins_id
				,smp_aps_setgroup_ins_dt
				,smp_aps_setgroup_udt_id
				,smp_aps_setgroup_udt_dt		
			)
			values
			(
				#{smp_aps_settotal_seq}
				,#{smp_aps_setgroup_nm}
				,#{smp_aps_setgroup_ratio}
				,#{smp_aps_setgroup_tp}
				,#{smp_aps_setgroup_ins_id}
				,now()
				,#{smp_aps_setgroup_ins_id}
				,now()
			)
	</insert>
	
	<!-- 박찬주 -->
	<insert id="insertApsSetDetail" parameterType="SMPApsSetDetail" useGeneratedKeys="true" keyProperty="smp_aps_setdetail_seq">
		insert into 
			smp_aps_setdetail_tb
			(
				smp_aps_setgroup_seq
				,smp_aps_setdetail_nm
				,smp_aps_setdetail_ratio
				,smp_aps_setdetail_ins_id
				,smp_aps_setdetail_ins_dt
				,smp_aps_setdetail_udt_id
				,smp_aps_setdetail_udt_dt		
			)
			values
			(
				#{smp_aps_setgroup_seq}
				,#{smp_aps_setdetail_nm}
				,#{smp_aps_setdetail_ratio}
				,#{smp_aps_setdetail_ins_id}
				,now()
				,#{smp_aps_setdetail_ins_id}
				,now()
			)
	</insert>
	
	<!-- 평가항목 total 이름 중복 체크 (전희배) -->
	<select id="selectTotalOverlap" parameterType="hashmap" resultType="String">
		select 
			smp_aps_total_nm
		from 
			smp_aps_total_tb
		where 
			gisu_seq = #{gisu_seq}
		and 
			smp_aps_total_nm= #{smp_aps_total_nm}
		<if test="smp_aps_total_seq != null and smp_aps_total_seq !=0">
		and
			smp_aps_total_seq != #{smp_aps_total_seq}
		</if>
	</select>
	<!-- total 이름 중복 체크 종료 -->
	
	<!-- 평가항목 group 이름 중복 체크 (전희배) -->
	<select id="selectGroupOverlap" parameterType="hashmap" resultType="String">
		select 
			smp_aps_group_nm
		from 
			smp_aps_group_tb
		where 
			smp_aps_total_seq = #{smp_aps_total_seq}
		and 
			smp_aps_group_nm= #{smp_aps_group_nm}
		<if test="smp_aps_group_seq != null and smp_aps_group_seq !=0">
		and
			smp_aps_group_seq != #{smp_aps_group_seq}
		</if>
	</select>
	<!-- group 이름 중복 체크 종료 -->

	<!-- 평가항목 detail 이름 중복 체크 (전희배) -->
	<select id="selectDetailOverlap" parameterType="hashmap" resultType="String">
		select 
			smp_aps_detail_nm
		from 
			smp_aps_detail_tb
		where 
			smp_aps_group_seq = #{smp_aps_group_seq}
		and 
			smp_aps_detail_nm= #{smp_aps_detail_nm}
		<if test="smp_aps_detail_seq != null and smp_aps_detail_seq !=0">
		and
			smp_aps_detail_seq != #{smp_aps_detail_seq}
		</if>
	</select>
	<!-- detail 이름 중복 체크 종료 -->
	
	<!-- total 비율 합계(전희배) -->
	<select id="sumTotalRatio" parameterType="hashmap" resultType="Integer">
		SELECT
			IFNULL(SUM(smp_aps_total_ratio), 0)  as sumTR
		FROM
			smp_aps_total_tb
		where
			gisu_seq=#{gisu_seq}
		<if test="smp_aps_total_seq != null and smp_aps_total_seq !=0">
		and
			smp_aps_total_seq != #{smp_aps_total_seq}
		</if>
	</select>
	<!-- total 비율 합계 종료 -->
	
	<!-- group 비율 합계(전희배) -->
	<select id="sumGroupRatio" parameterType="hashmap" resultType="hashmap">
		SELECT
			totaltb.smp_aps_total_nm
			,IFNULL(sum(grouptb.smp_aps_group_ratio),0) as sumRatio
		FROM
			smp_aps_group_tb as grouptb
			right join smp_aps_total_tb as totaltb
		ON 
			grouptb.smp_aps_total_seq = totaltb.smp_aps_total_seq
		where
			totaltb.gisu_seq=#{gisu_seq}
		<if test="smp_aps_total_seq != null and smp_aps_total_seq !=0">
		and
			grouptb.smp_aps_total_seq = #{smp_aps_total_seq}
		</if>
		<if test="smp_aps_group_seq != null and smp_aps_group_seq !=0">
		and
			grouptb.smp_aps_group_seq != #{smp_aps_group_seq}
		</if>
		group by 
			totaltb.SMP_APS_TOTAL_SEQ
	</select>
	<!-- group 비율 합계 종료 -->
	
	 <!-- 박찬주 -->
	 <delete id="deleteSetList" parameterType="int">
	 	delete from 
	 		smp_aps_setlist_tb 
	 	where 
	 		smp_aps_setlist_seq = #{smp_aps_setlist_seq}
	 </delete>
	 
	 <!-- 박찬주 -->
	 <delete id="deleteSetTotal" parameterType="int">
	 	delete from 
	 		smp_aps_settotal_tb 
	 	where 
	 		smp_aps_settotal_seq = #{smp_aps_settotal_seq}
	 </delete>
	 
	 <!-- 박찬주 -->
	 <delete id="deleteSetGroup" parameterType="int">
	 	delete from 
	 		smp_aps_setgroup_tb 
	 	where 
	 		smp_aps_setgroup_seq=#{smp_aps_setgroup_seq}
	 </delete>
	 
	 <!-- 박찬주 -->
	 <delete id="deleteSetDetail" parameterType="int">
	 	delete from 
	 		smp_aps_setdetail_tb 
	 	where 
	 		smp_aps_setdetail_seq=#{smp_aps_setdetail_seq}
	 </delete>
	
	 <!-- 박찬주 -->
	<select id="selectApsSetTotal" parameterType="int" resultType="SMPApsSetTotal">
		select
			smp_aps_settotal_seq 
			,smp_aps_settotal_nm
			,smp_aps_settotal_ratio 
			,smp_aps_setlist_seq
			,smp_aps_settotal_ins_id 
			,smp_aps_settotal_ins_dt
			,smp_aps_settotal_udt_id 
			,smp_aps_settotal_udt_dt
		from 
			smp_aps_settotal_tb 
		where 
			smp_aps_settotal_seq=#{smp_aps_settotal_seq}
	</select>
	
	 <!-- 박찬주 -->
	<select id="selectSetGroup" parameterType="int" resultType="SMPApsSetGroup">
		select
			smp_aps_setgroup_seq 
			,smp_aps_setgroup_nm
			,smp_aps_setgroup_ratio 
			,smp_aps_settotal_seq
			,smp_aps_setgroup_tp
			,smp_aps_setgroup_ins_id 
			,smp_aps_setgroup_ins_dt
			,smp_aps_setgroup_udt_id 
			,smp_aps_setgroup_udt_dt
		from 
			smp_aps_setgroup_tb 
		where 
			smp_aps_setgroup_seq = #{smp_aps_setgroup_seq}
	</select>
	
	 <!-- 박찬주 -->
	<select id="selectSetDetail" parameterType="int" resultType="SMPApsSetDetail">
		select
			smp_aps_setdetail_seq 
			,smp_aps_setdetail_nm
			,smp_aps_setdetail_ratio 
			,smp_aps_setgroup_seq
			,smp_aps_setdetail_ins_id 
			,smp_aps_setdetail_ins_dt
			,smp_aps_setdetail_udt_id 
			,smp_aps_setdetail_udt_dt
		from 
			smp_aps_setdetail_tb 
		where 
			smp_aps_setdetail_seq = #{smp_aps_setdetail_seq}
	</select>
	
	 <!-- 박찬주 -->
	<update id="updateSetTotal" parameterType="SMPApsSetTotal">
	 update 
	 	smp_aps_settotal_tb
	 set
		 smp_aps_settotal_nm = #{smp_aps_settotal_nm}
		 ,smp_aps_settotal_ratio = #{smp_aps_settotal_ratio}
		 ,smp_aps_settotal_udt_id = #{smp_aps_settotal_udt_id}
		 ,smp_aps_settotal_udt_dt = now()
	 where 
	 	smp_aps_settotal_seq = #{smp_aps_settotal_seq} 
	</update>
	
	 <!-- 박찬주 -->
	<update id="updateSetGroup" parameterType="SMPApsSetGroup">
	 update 
	 	smp_aps_setgroup_tb
	 set
		 smp_aps_setgroup_nm = #{smp_aps_setgroup_nm}
		 ,smp_aps_setgroup_ratio = #{smp_aps_setgroup_ratio}
		 ,smp_aps_setgroup_udt_id = #{smp_aps_setgroup_udt_id}
		 ,smp_aps_setgroup_udt_dt = now()
		 ,smp_aps_setgroup_tp = #{smp_aps_setgroup_tp}
	 where 
	 	smp_aps_setgroup_seq = #{smp_aps_setgroup_seq} 
	</update>
	
	 <!-- 박찬주 -->
	<update id="updateSetDetail" parameterType="SMPApsSetDetail">
	 update 
	 	smp_aps_setdetail_tb
	 set
		 smp_aps_setdetail_nm = #{smp_aps_setdetail_nm}
		 ,smp_aps_setdetail_ratio = #{smp_aps_setdetail_ratio}
		 ,smp_aps_setdetail_udt_id = #{smp_aps_setdetail_udt_id}
		 ,smp_aps_setdetail_udt_dt = now()
	 where 
	 	smp_aps_setdetail_seq = #{smp_aps_setdetail_seq} 
	</update>

	<!-- 원병호, 게시판번호로 기수를 찾는 쿼리 -->
	<select id="selectBoardGisuSeq" parameterType="int" resultType="int">
		select
			gisu_seq
		from
			smp_board_gisu_tb
		where
			board_content_seq = #{board_content_seq}
	</select>
	
	<!-- 원병호, 게시판에 해당하는 기수명, 중요도 찾는 쿼리 -->
	<select id="select_board_detail2" parameterType="int" resultType="hashMap">
		select
			gisu.gisu_crc_nm as gisu_crc_nm
			,board.board_content_imp as board_content_imp 
		from
			edu_curriculum_gisu_tb gisu
		inner join
			smp_board_gisu_tb board_gisu
		on
			board_gisu.gisu_seq = gisu.gisu_seq
		inner join
			com_board_content_tb board
		on
			board_gisu.board_content_seq = board.board_content_seq
		where
			board_gisu.board_content_seq = #{board_content_seq};
	</select>

	<!-- 원병호, 갱신아이콘 표시기간 업데이트 -->
	<update id="update_board_pd" parameterType="hashMap">
		update
			com_board_group_tb
		set
			board_icon_pd = #{board_icon_pd}
		where
			board_seq = #{board_seq}
	</update>

	<!-- 원병호, 갱신 아이콘 표시기간 불러오기 -->
	<select id="select_board_pd" parameterType="int" resultType="int">
		select
			board_icon_pd
		from
			com_board_group_tb
		where
			board_seq = #{board_seq}
	</select>
	
	<!-- 김홍일 : 해당 종합평가에 맞는 평가관리 > 그룹평가의 그룹타입을 종류별로 단 한 가지씩만 찾기 위한 쿼리(아래 쿼리에 포함시켜 버렸기 때문에 제거.)
	<select id="" parameterType="int" resultType="hashMap">
		select
			smp_aps_group_seq
  		 	,smp_aps_total_seq
   		    ,smp_aps_group_tp
		from 
			smp_aps_group_tb
		where 
			smp_aps_total_seq = #{smp_aps_total_seq}
		group by
			smp_aps_group_tp;
   		select
			*
		from
			smp_aps_group_tb;
	</select> -->
	<!-- 그룹평가 type 각 1개씩 조회 -->
	<select id="selectApsGroupTb" parameterType="int" resultType="arraylist">
		select
			distinct smp_aps_group_tp
		from
			smp_aps_group_tb
		where
			smp_aps_total_seq = #{smp_aps_total_seq};
	</select>
	<!-- 김홍일 : 해당 종합평가에 맞는 평가관리 > 그룹평가의 그룹타입 > 그룹평가 리스트 -->
	<select id="selectApsGroupList" parameterType="hashmap" resultType="hashMap">
		select
			gisu.gisu_num
			,tot.smp_aps_total_ratio
			,gp.smp_aps_group_seq
		    ,gp.smp_aps_total_seq
		    ,gp.smp_aps_group_tp
		    ,sub.smp_aps_group_subexam_seq
		    ,sub.smp_aps_group_subexam_nm
		    ,sub.smp_aps_group_subexam_pp
		    ,exam.smp_aps_group_exam_seq
		    ,exam.smp_aps_group_exam_nm
		    ,exam.smp_aps_group_exam_pp
		    ,exam.smp_aps_group_exam_ratio
		    ,con.smp_aps_group_confirm_seq
		    ,con.smp_aps_group_confirm_nm
		from
			smp_aps_group_tb gp
		left join
		    smp_aps_group_subexam_tb sub
		on
			gp.smp_aps_group_seq = sub.smp_aps_group_seq
		left join
		    smp_aps_group_exam_tb exam
		on
			gp.smp_aps_group_seq = exam.smp_aps_group_seq
		left join
		    smp_aps_group_confirmation_tb con
		on
			gp.smp_aps_group_seq = con.smp_aps_group_seq
		left join
			smp_aps_total_tb tot
		on
			tot.smp_aps_total_seq = #{smp_aps_total_seq}
		left join
			edu_curriculum_gisu_tb gisu
		on
			gisu.gisu_seq = #{gisu_seq}
		where
			gp.smp_aps_total_seq = #{smp_aps_total_seq};
	</select>

</mapper>