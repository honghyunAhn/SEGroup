<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aracomm.changbi.learn.dao.ApplyDao">

	<insert id="insertApply" parameterType="map" useGeneratedKeys="true" keyProperty="id">
		insert into CB_LEARN_APP
		(user_id, group_id, cardinal_id, course_id, neis_num, des_num, school_name
		, tel, phone, email, region_code, jurisdiction, s_type, e_type, post_type
		, order_idx, payment_type, payment_state, payment_date
		, app_num, coupon_num, dis_coupon, dis_point, dis_group, payment, real_payment
		, reg_user, upd_user)
		values
		(#{user_id}
		<choose>
		<when test='group_id == ""'>, null</when>
		<otherwise>, #{group_id}</otherwise>
		</choose>
		, #{cardinal_id}, #{course_id}, #{neis_num}, #{des_num}, #{school_name}
		, #{tel}, #{phone}, #{email}, #{region_code}, #{jurisdiction}, #{s_type}, #{e_type}, #{post_type}
		, #{order_idx}, #{payment_type}, #{payment_state}
		<choose>
		<when test='payment_state == "1"'>, null</when>
		<otherwise>, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')</otherwise>
		</choose>
		, #{app_num}, #{coupon_num}, #{dis_coupon}, #{dis_point}, #{dis_group}, #{payment}, #{real_payment}
		, #{user_id}, #{user_id})
	</insert>

	<!-- 입금확인 업데이트 (가상계좌 callback 처리 등에서 필요) -->
	<update id="updateDonePayment" parameterType="string">
		UPDATE CB_LEARN_APP
		   SET PAYMENT_STATE = '2'
		     , PAYMENT_DATE = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		 WHERE ID = #{appId}
	</update>

	<!-- 일부결제상태 업데이트 (가상계좌 callback 처리 등에서 필요) -->
	<update id="updatePartialPayment" parameterType="string">
		UPDATE CB_LEARN_APP
		   SET PAYMENT_STATE = '3'
		     , PAYMENT_DATE = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		 WHERE ID = #{appId}
	</update>

	<!-- 과정,기수에 대한 사용자의 수강신청수 조회 (정상수강신청내역수 + 연기상태 및 이수완료상태의 내역수)-->
	<select id="selectUserApplyCourseCount" parameterType="map" resultType="int">
		SELECT SUM(CNT)
		  FROM (
				SELECT COUNT(1) AS CNT
				  FROM CB_LEARN_APP
				 WHERE USER_ID = #{user_id}
				   AND COURSE_ID = #{course_id}
				   AND CARDINAL_ID = #{cardinal_id}
				   AND REQ_TYPE IS NULL
				   AND USE_YN = 'Y'
				 UNION ALL
				SELECT COUNT(1) AS CNT
				  FROM CB_LEARN_APP
				 WHERE USER_ID = #{user_id}
				   AND COURSE_ID = #{course_id}
				   AND (
				   		  REQ_TYPE IN ('1','3')	/* 연기요청,수강연기 */
				   	   OR (ISSUE_YN = 'Y' AND (ISSUE_NUM IS NOT NULL AND ISSUE_NUM &lt;&gt; ''))	/* 이수한 과정 */
				   )
				   AND USE_YN = 'Y'
		     ) R
	</select>

	<select id="selectApplyByOrderIdx" parameterType="string" resultType="hashmap">
		SELECT PAYMENT_TYPE
			 , PAYMENT_STATE
		  FROM CB_LEARN_APP
		 WHERE ORDER_IDX = #{order_idx}
	</select>

	<!-- 중복연수지명번호 체크  -->
	<select id="selectApplyCountByDesNum" parameterType="map" resultType="int">
		SELECT COUNT(1) AS CNT
		  FROM CB_LEARN_APP
		 WHERE USER_ID = #{user_id}
		   AND DES_NUM = UPPER(#{des_num})
		   AND (REQ_TYPE IS NULL OR REQ_TYPE &lt;&gt; '4')	/* 수강취소 */
		   <if test='learn_id != null and learn_id != ""'>
		   AND ID &lt;&gt; #{learn_id}
		   </if>
	</select>
	
	<select id="selectUserAddress" parameterType="String" resultType="hashmap">
	    SELECT
			 IFNULL(CM.POST_CODE, '') AS POST_CODE /*주소-우편번호*/
			, IFNULL(CM.ADDR1, '') AS ADDR1 /*주소-주소1*/
			, IFNULL(CM.ADDR2, '') AS ADDR2 /*주소-주소2*/
		FROM CB_MEMBER AS CM
		WHERE ID = #{user_id}
	</select>
</mapper>