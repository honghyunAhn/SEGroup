<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aracomm.changbi.serviceCenter.dao.BbsDao">

	<select id="selectBbsCodeList" parameterType="string" resultType="hashmap">
		/*::::selectBbsCodeList::::*/
		select code, name from FF_CODE
		where group_id = #{faq}
		order by order_num
	</select>

	<sql id="sql_selectBbsList">
		and a.board_type = #{board_type}
		
		<if test='board_type == "1" and notice_type == "1" || notice_type == "2"'>
		and a.notice_type = #{notice_type}
		</if>
		
		<if test='board_type == "1"'>
			<choose>
				<when test='notice_type != "7"'>and (a.notice_type is null || a.notice_type &lt;&gt; '7') /* 공문제외 */</when>
				<otherwise>and a.notice_type = #{notice_type}</otherwise>
			</choose>
		</if>
		<if test='search != null and searchbox == "tc"'>
		and (a.title like CONCAT('%',#{search},'%') or a.comment like CONCAT('%',#{search},'%'))
		</if>
		<if test='search != null and searchbox == "t"'>
		and (a.title like CONCAT('%',#{search},'%'))
		</if>
		<if test='search != null and searchbox == "c"'>
		and (a.comment like CONCAT('%',#{search},'%'))
		</if>
		<!-- <if test='course_id != null and course_id != ""'>
		and a.course_id = #{course_id}
		</if> -->
		<choose>
			<when test='course_id != null and course_id != ""'>
			and a.course_id = #{course_id}
			</when>
			<otherwise>
			and a.course_id is null
			</otherwise>
		</choose>

		<choose>
			<when test='teacher_id != null and teacher_id != ""'>
			and a.teacher_id = #{teacher_id}
			</when>
			<otherwise>
			and (a.teacher_id IS NULL OR a.teacher_id = '')
			</otherwise>
		</choose>
		<if test='cardinal_id != null and cardinal_id != ""'>
		and a.cardinal_id = #{cardinal_id}
		</if>
		and a.use_yn = 'Y'
		and a.top_yn = 'N'
	</sql>
	<select id="selectBbsListTotCnt" resultType="int">
		/*::::selectBbsListTotCnt::::*/
		select count(a.id) cnt
		from CB_BOARD a
		where 1 = 1
		<include refid="sql_selectBbsList"/>
	</select>

<!-- 	<select id="selectBbsList" resultType="hashmap">
		/*::::selectBbsList::::*/
		select
			a.id, a.board_type, a.notice_type, a.faq_code,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.comment, a.hits, a.recommend, a.nonrecommend,
			a.share, a.order_num, a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT name FROM CB_MEMBER WHERE id = a.user_id) AS user_name,
			
			<choose>
			<when test='notice_type == "1"'>
			(SELECT '공지사항' FROM DUAL) AS n_type
			</when>
			<otherwise>
			(SELECT '이벤트' FROM DUAL) AS n_type
			</otherwise>
		    </choose>
			
		from CB_BOARD a
		where 1 = 1
		<include refid="sql_selectBbsList"/>
		order by a.reg_date desc
	limit ${startPage}, ${visiblePages}
	</select> -->

<!-- 	<select id="selectBbsDetail" resultType="hashmap">
		/*::::selectBbsDetail::::*/
		select
			a.id, a.board_type, a.notice_type, a.faq_code,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.comment, a.hits, a.recommend, a.nonrecommend,
			a.share, a.order_num, a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT name FROM CB_MEMBER WHERE id = a.user_id) AS user_name,
			(
				SELECT COUNT(1)
				  FROM CB_BOARD_REPLY
				 WHERE board_id = a.id
				   AND use_yn = 'Y'
			) AS reply_cnt
		from CB_BOARD a
		where a.id = #{id}
	</select> -->

	<!-- 고정 공지사항 리스트 -->
	<sql id="sql_selectBbsFixedNoticeListAll">
		and a.board_type = #{board_type}
		<if test='board_type == "1"'>
			<choose>
				<when test='notice_type != "7"'>and (a.notice_type is null || a.notice_type &lt;&gt; '7') /* 공문제외 */</when>
				<otherwise>and a.notice_type = #{notice_type}</otherwise>
			</choose>
		</if>
		<if test='course_id != null and course_id != ""'>
		and a.course_id = #{course_id}
		</if>
		<if test='teacher_id != null and teacher_id != ""'>
		and a.teacher_id = #{teacher_id}
		</if>
		and a.top_yn = 'Y'
		and a.use_yn = 'Y'
	</sql>
<!-- 	<select id="selectBbsFixedNoticeListAll" parameterType="hashmap" resultType="hashmap">
		/*::::selectBbsTopNoticeListAll::::*/
		select
			a.id, a.board_type, a.notice_type,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.hits, a.recommend, a.nonrecommend, secret_yn,
			a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT name FROM CB_MEMBER WHERE id = a.user_id) AS user_name
		from CB_BOARD a
		where 1 = 1
		<include refid="sql_selectBbsFixedNoticeListAll"/>
		order by a.reg_date desc
	</select> -->

	<sql id="sql_selectFaqQnaList">
		and a.board_type = #{board_type}
		<if test='faq_code != "0" and faq_code != null'>
		and a.faq_code = #{faq_code}
		</if>
		<if test='board_type == "4"'>
		and a.user_id = #{user_id}
		and a.cardinal_id is null
		and a.course_id is null
		and a.teacher_id is null
		</if>
		<if test='search != null and searchbox == "tc"'>
		and (a.title like CONCAT('%',#{search},'%') or a.comment like CONCAT('%',#{search},'%'))
		</if>
		<if test='search != null and searchbox == "t"'>
		and (a.title like CONCAT('%',#{search},'%'))
		</if>
		<if test='search != null and searchbox == "c"'>
		and (a.comment like CONCAT('%',#{search},'%'))
		</if>
		<if test='course_id != null and course_id != ""'>
		and a.course_id = #{course_id}
		</if>
		<if test='cardinal_id != null and cardinal_id != ""'>
		and a.cardinal_id = #{cardinal_id}
		</if>
		and a.use_yn = 'Y'
	</sql>
	<select id="selectFaqListTotCnt" resultType="int">
		/*::::selectFaqListTotCnt::::*/
		select count(a.id) cnt
		from CB_BOARD a
		where 1 = 1
		<include refid="sql_selectFaqQnaList"/>
	</select>

	<select id="selectFaqList" resultType="hashmap">
		/*::::selectFaqList::::*/
		select
			a.id, a.faq_code, a.title, a.comment as acomment, a.hits, a.reg_user,
			DATE_FORMAT(a.reg_date, "%Y.%c.%e") as reg_date,
			b.title as retitle, b.comment, b.reg_user as rereg_user,
			DATE_FORMAT(STR_TO_DATE(b.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as rereg_date
		from CB_BOARD a
		left join CB_BOARD_REPLY b on a.id = b.board_id and b.use_yn = 'Y'
		where 1 = 1
		<include refid="sql_selectFaqQnaList"/>
		order by a.order_num
		limit ${startPage}, ${visiblePages}
	</select>

	<select id="selectQnaListTotCnt" resultType="int">
		/*::::selectQnaListTotCnt::::*/
		select count(a.id) cnt
		from CB_BOARD a
		where 1 = 1
		<include refid="sql_selectFaqQnaList"/>
	</select>
	<!-- <select id="selectQnaList" resultType="hashmap">
		/*::::selectQnaList::::*/

		SELECT id, rid, title, reg_user, hits, reg_date, reg_name, user_name, user_id
		     , DATE_FORMAT(STR_TO_DATE(reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') AS reg_date_format2
		  FROM (
		  	(
				SELECT a.id, '' AS rid, a.title, a.reg_user, a.hits, a.reg_date, a.user_Id
				     , (SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name
				     , (SELECT name FROM CB_MEMBER WHERE id = a.user_id) AS user_name
		          FROM CB_BOARD a
				 WHERE 1=1
				 <include refid="sql_selectFaqQnaList"/>
				 ORDER BY a.id DESC
				 LIMIT ${startPage}, ${visiblePages}
		  	)
			UNION
			(
				SELECT B.id, R.id AS rid, R.title, R.reg_user, R.hits, R.reg_date, R.user_id
					 , (SELECT name FROM FF_MEMBER WHERE id = R.reg_user) AS reg_name
				     , (SELECT name FROM CB_MEMBER WHERE id = R.user_id) AS user_name
				  FROM (
						SELECT a.id
						  FROM CB_BOARD a
						 WHERE 1=1
						 <include refid="sql_selectFaqQnaList"/>
						 ORDER BY a.id DESC
						 LIMIT ${startPage}, ${visiblePages}
				     ) B
				  JOIN CB_BOARD_REPLY R
				 WHERE R.board_id = B.id
				   AND R.use_yn = 'Y'
			)
		  ) R ORDER BY id DESC, rid ASC, reg_date ASC

	</select> -->

	<select id="selectBbsDetailPrevNext" resultType="hashmap">
		select id, gubun
		  from (
			(
			select id, 'PREV' AS gubun
			   from CB_BOARD a
			  where id &gt; #{id}
			  <include refid="sql_selectBbsList"/>
			  order by a.reg_date asc limit 1
			)
			union
			(
			select id, 'NEXT' AS gubun
			 from CB_BOARD a
			 where id &lt; #{id}
			 <include refid="sql_selectBbsList"/>
			 order by a.reg_date desc limit 1
			)
		) c
		order by gubun desc
	</select>

	<insert id="insertBbs" parameterType="map">
		insert into CB_BOARD (
			board_type, user_id
			, cardinal_id, course_id
			, attach1_file, attach2_file
			, title, comment
			, reg_user, reg_date
			, upd_user, upd_date
		)
		values (
			#{board_type},#{user}
			,#{cardinal_id},#{course_id}
			,#{attach1_file},#{attach2_file}
			,#{title},#{comment}
			,#{user},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
			,#{user},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'))
	</insert>
	<insert id="updateBbs" parameterType="map">
		update CB_BOARD
		   set title = #{title}
		    , attach1_file = #{attach1_file}
		    , attach2_file = #{attach2_file}
			, comment = #{comment}
			, upd_user = #{user}
			, upd_date = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		where id = #{id}
	</insert>
	<update id="updateBbsDelete" parameterType="string">
		UPDATE CB_BOARD
		   SET USE_YN = 'N'
		 WHERE ID = #{id}
	</update>

	<!-- 삭제 수정 등의 권한체크를 위한 게시물 조회 -->
	<select id="selectBbsForAuth" parameterType="string" resultType="hashmap">
		SELECT id, user_id, reg_user
		  FROM CB_BOARD
		 WHERE ID = #{id}
	</select>

	<update id="updateHits" parameterType="string">
		UPDATE CB_BOARD
		   SET HITS = HITS + 1
		 WHERE ID = #{id}
	</update>

	<update id="updateBbsDeleteAttachFile1" parameterType="map">
		UPDATE CB_BOARD
		   SET ATTACH1_FILE = NULL
		 WHERE ID = #{id}
		   AND ATTACH1_FILE = #{file_id}
	</update>

	<update id="updateBbsDeleteAttachFile2" parameterType="map">
		UPDATE CB_BOARD
		   SET ATTACH2_FILE = NULL
		 WHERE ID = #{id}
		   AND ATTACH2_FILE = #{file_id}
	</update>

	<update id="updateDeleteAttachFileForBbs" parameterType="string">
		UPDATE FF_ATTACH_FILE
		   SET USE_YN = 'N'
		 WHERE FILE_ID IN (
		 	SELECT ATTACH1_FILE
		 	  FROM CB_BOARD
		 	 WHERE ID = #{id}
		 	   AND ATTACH1_FILE IS NOT NULL
		 	UNION
		 	SELECT ATTACH2_FILE
		 	  FROM CB_BOARD
		 	 WHERE ID = #{id}
		 	   AND ATTACH2_FILE IS NOT NULL
		 )
	</update>

	<select id="selectReplyDetail" parameterType="string" resultType="hashmap">
		SELECT
			a.id, a.user_id,
			a.attach1_file, a.attach2_file,
			a.title, a.comment, a.hits, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT user_id FROM CB_BOARD WHERE ID = a.board_id) AS owner_user_id
		  FROM CB_BOARD_REPLY a
		 WHERE a.id = #{id}
	</select>

	<update id="updateReplyHits" parameterType="string">
		UPDATE CB_BOARD_REPLY
		   SET HITS = HITS + 1
		 WHERE ID = #{id}
	</update>


	<!-- 강사소개 등에서 사용되는 게시물 조회 쿼리 (기존 쿼리를 건드리지 않기 위해 별도로 추가)-->
	<sql id="sql_selectSimpleTopBoardList">
		AND B.BOARD_TYPE = #{board_type}
		<if test='board_type == "1"'>
			<choose>
				<!-- 공문 제외 -->
				<!-- 
				<when test='notice_type != "7"'>AND (B.NOTICE_TYPE IS NULL OR B.NOTICE_TYPE &lt;&gt; '7')</when>
				 -->
				<when test='notice_type == null'>AND (B.NOTICE_TYPE IS NULL OR B.NOTICE_TYPE &lt;&gt; '7')</when>
				<otherwise>AND B.NOTICE_TYPE = #{notice_type}</otherwise>
			</choose>
		</if>
		<choose>
			<when test='teacher_id != null and teacher_id != ""'>
				AND B.COURSE_ID IN (
					SELECT ID FROM CB_COURSE WHERE TEACH_ID = #{teacher_id} AND USE_YN = 'Y'
				)
			</when>
			<otherwise>
				<choose>
					<when test='course_id != null and course_id != ""'>
					AND B.COURSE_ID = #{course_id}
					</when>
					<otherwise>
					AND B.COURSE_ID IS NULL
					</otherwise>
				</choose>
			</otherwise>
		</choose>

		AND B.USE_YN = 'Y'
	</sql>

	<select id="selectSimpleTopBoardList" parameterType="com.aracomm.changbi.board.vo.BoardSearchVo" resultType="hashmap">
		SELECT B.ID, B.BOARD_TYPE, B.NOTICE_TYPE, B.FAQ_CODE
			 , B.CARDINAL_ID, B.COURSE_ID, B.TEACHER_ID, B.USER_ID
			 , B.ATTACH1_FILE, B.ATTACH2_FILE
			 , B.TITLE, B.HITS
			 , DATE_FORMAT(STR_TO_DATE(B.REG_DATE,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as REG_DATE_FORMAT1
			 , DATE_FORMAT(STR_TO_DATE(B.REG_DATE,'%Y%m%d%H%i%s'),'%Y.%m.%d') as REG_DATE_FORMAT2
			 , (SELECT NAME FROM FF_MEMBER WHERE ID = B.REG_USER) AS REG_NAME
		  FROM CB_BOARD B
		 WHERE 1 = 1
		<include refid="sql_selectSimpleTopBoardList"/>
		 ORDER BY B.REG_DATE DESC
		 LIMIT ${top}
	</select>

	<!-- 통합검색 - 후기 -->
<!-- 	<select id="selectSearchReviewListAll" resultType="hashmap">
		select
			a.id, a.board_type, a.notice_type, a.faq_code,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.comment, a.hits, a.recommend, a.nonrecommend,
			a.share, a.order_num, a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT name FROM CB_MEMBER WHERE id = a.user_id) AS user_name
		from CB_BOARD a
		where board_type = '5'
		and (a.title like CONCAT('%',#{search},'%') 
			or a.comment like CONCAT('%',#{search},'%')
			or a.course_id in (
				SELECT C.ID					 
				  FROM FF_MEMBER M, CB_COURSE C
				 WHERE M.GRADE = 2
				   AND M.ID = C.TEACH_ID 
				   AND M.NAME LIKE CONCAT('%', #{search} ,'%')
				   AND C.ACCEPT_YN = 'Y'
				   AND C.USE_YN = 'Y'
			)	 					
		)
		and a.use_yn = 'Y'
		and exists (
			select 1
			  from CB_COURSE
			 where id = a.course_id
			   and accept_yn = 'Y'
			   and use_yn = 'Y'
		)
		order by a.reg_date desc
	</select> -->
	
	
	<!-- LMS 변경 사항-->
	<select id="selectBbsList" resultType="hashmap">
		/*::::selectBbsList::::*/
		select
			a.id, a.board_type, a.notice_type, a.faq_code,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.comment, a.hits, a.recommend, a.nonrecommend,
			a.share, a.order_num, a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT USER_NM FROM COM_USER_TB WHERE USER_ID = a.user_id) AS user_name,
			
			<choose>
			<when test='notice_type == "1"'>
			(SELECT '공지사항' FROM DUAL) AS n_type
			</when>
			<otherwise>
			(SELECT '이벤트' FROM DUAL) AS n_type
			</otherwise>
		    </choose>
			
		from CB_BOARD a
		where 1 = 1
		<include refid="sql_selectBbsList"/>
		order by a.reg_date desc
	limit ${startPage}, ${visiblePages}
	</select>
	
	<select id="selectBbsDetail" resultType="hashmap">
		/*::::selectBbsDetail::::*/
		select
			a.id, a.board_type, a.notice_type, a.faq_code,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.comment, a.hits, a.recommend, a.nonrecommend,
			a.share, a.order_num, a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT USER_NM FROM COM_USER_TB WHERE USER_ID = a.user_id) AS user_name,
			(
				SELECT COUNT(1)
				  FROM CB_BOARD_REPLY
				 WHERE board_id = a.id
				   AND use_yn = 'Y'
			) AS reply_cnt
		from CB_BOARD a
		where a.id = #{id}
	</select>
	
	<select id="selectBbsFixedNoticeListAll" parameterType="hashmap" resultType="hashmap">
		/*::::selectBbsTopNoticeListAll::::*/
		select
			a.id, a.board_type, a.notice_type,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.hits, a.recommend, a.nonrecommend, secret_yn,
			a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT USER_NM FROM COM_USER_TB WHERE USER_ID = a.user_id) AS user_name
		from CB_BOARD a
		where 1 = 1
		<include refid="sql_selectBbsFixedNoticeListAll"/>
		order by a.reg_date desc
	</select>
	
	<select id="selectQnaList" resultType="hashmap">
		/*::::selectQnaList::::*/

		SELECT id, rid, title, reg_user, hits, reg_date, reg_name, user_name, user_id
		     , DATE_FORMAT(STR_TO_DATE(reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') AS reg_date_format2
		  FROM (
		  	(
				SELECT a.id, '' AS rid, a.title, a.reg_user, a.hits, a.reg_date, a.user_Id
				     , (SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name
				     , (SELECT USER_NM FROM COM_USER_TB WHERE USER_ID = a.user_id) AS user_name
		          FROM CB_BOARD a
				 WHERE 1=1
				 <include refid="sql_selectFaqQnaList"/>
				 ORDER BY a.id DESC
				 LIMIT ${startPage}, ${visiblePages}
		  	)
			UNION
			(
				SELECT B.id, R.id AS rid, R.title, R.reg_user, R.hits, R.reg_date, R.user_id
					 , (SELECT name FROM FF_MEMBER WHERE id = R.reg_user) AS reg_name
				     , (SELECT USER_NM FROM COM_USER_TB WHERE USER_ID = R.user_id) AS user_name
				  FROM (
						SELECT a.id
						  FROM CB_BOARD a
						 WHERE 1=1
						 <include refid="sql_selectFaqQnaList"/>
						 ORDER BY a.id DESC
						 LIMIT ${startPage}, ${visiblePages}
				     ) B
				  JOIN CB_BOARD_REPLY R
				 WHERE R.board_id = B.id
				   AND R.use_yn = 'Y'
			)
		  ) R ORDER BY id DESC, rid ASC, reg_date ASC

	</select>
	
	<select id="selectSearchReviewListAll" resultType="hashmap">
		select
			a.id, a.board_type, a.notice_type, a.faq_code,
			a.cardinal_id, a.course_id, a.teacher_id, a.user_id,
			a.attach1_file, a.attach2_file, a.icon, a.top_yn,
			a.title, a.comment, a.hits, a.recommend, a.nonrecommend,
			a.share, a.order_num, a.use_yn, a.reg_user, a.reg_date,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d %H:%i') as reg_date_format1,
			DATE_FORMAT(STR_TO_DATE(a.reg_date,'%Y%m%d%H%i%s'),'%Y.%m.%d') as reg_date_format2,
			(SELECT name FROM FF_MEMBER WHERE id = a.reg_user) AS reg_name,
			(SELECT USER_NM FROM COM_USER_TB WHERE USER_ID = a.user_id) AS user_name
		from CB_BOARD a
		where board_type = '5'
		and (a.title like CONCAT('%',#{search},'%') 
			or a.comment like CONCAT('%',#{search},'%')
			or a.course_id in (
				SELECT C.ID					 
				  FROM FF_MEMBER M, CB_COURSE C
				 WHERE M.GRADE = 2
				   AND M.ID = C.TEACH_ID 
				   AND M.NAME LIKE CONCAT('%', #{search} ,'%')
				   AND C.ACCEPT_YN = 'Y'
				   AND C.USE_YN = 'Y'
			)	 					
		)
		and a.use_yn = 'Y'
		and exists (
			select 1
			  from CB_COURSE
			 where id = a.course_id
			   and accept_yn = 'Y'
			   and use_yn = 'Y'
		)
		order by a.reg_date desc
	</select>
	
	

</mapper>