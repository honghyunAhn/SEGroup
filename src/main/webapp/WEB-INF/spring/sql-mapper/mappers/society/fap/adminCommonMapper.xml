<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SEGroup 통합잡페어 관리자 SQL -->
<mapper namespace="global.segroup.society.fap.admincommon.dao.SocietyFapAdminCommonMapper">

<!-- 게시글 resultMap -->
	<resultMap type="hashmap" id="boardContent">
		<result javaType="int" column="BOARD_CONTENT_SEQ" property="board_content_seq"/>
		<result javaType="int" column="BOARD_SEQ" property="board_seq"/>
		<result javaType="string" column="BOARD_CONTENT_TITLE" property="board_content_title"/>
		<result javaType="string" column="BOARD_CONTENT_NM" property="board_content_nm"/>
		<result javaType="int" column="BOARD_CONTENT_HIT" property="board_content_hit"/>
		<result javaType="string" column="BOARD_CONTENT_INS_DT" property="board_content_ins_dt"/>
		<result javaType="string" column="BOARD_CONTENT_UDT_DT" property="board_content_udt_dt"/>
		<result javaType="string" column="BOARD_DETAIL_GB" property="board_detail_gb"/>
		
		<result javaType="int" column="FAP_NOTICE_SEQ" property="fap_notice_seq"/>
		<result javaType="string" column="FAP_NOTICE_VIEW_TARGET_CK" property="fap_notice_view_target_ck"/>
		<result javaType="string" column="FAP_NOTICE_KIND" property="fap_notice_kind"/>
		
		<result javaType="int" column="FAP_OPEN_JOB_INFO_SEQ" property="fap_open_job_info_seq"/>
		<result javaType="string" column="FAP_OPEN_JOB_INFO_VIEW_TARGET_CK" property="fap_open_job_info_view_target_ck"/>
		<result javaType="string" column="FAP_OPEN_JOB_INFO_KIND" property="fap_open_job_info_kind"/>
		
		<collection property="internship_apply_list" javaType="java.util.ArrayList" resultMap="internship"></collection>
	</resultMap>
	
	<resultMap type="hashmap" id="internship">
		<result javaType="int" column="INTERNSHIP_SEQ" property="internship_seq"/>
		<result javaType="string" column="USER_ID" property="user_id"/>
		<result javaType="string" column="USER_NM" property="user_nm"/>
		<result javaType="string" column="USER_PHONE" property="user_phone"/>
		<result javaType="string" column="USER_EMAIL" property="user_email"/>
		<result javaType="date" column="INTERNSHIP_APPLY_DT" property="internship_apply_dt"/>
	</resultMap>
	
	<!-- 통합잡페어 공지사항 불러오기 시작; 2019. 2. 14. 김준영 -->
	<select id="select_fap_notice" resultType="hashmap" parameterType="int">
		select
			board_content.board_content_seq
			, board_content.board_content_title
			, board_content.board_content_ct
			, board_content.board_content_nm
			, board_content.board_content_hit
			, board_content.board_content_imp
			
			, notice_content.fap_notice_seq
			, notice_content.fap_notice_view_target_ck
			, notice_content.fap_notice_kind
		from
			com_board_content_tb as board_content
		left join
			fap_notice_content_tb as notice_content
		on
			board_content.board_content_seq = notice_content.board_content_seq
		where
			board_group.board_seq = #{board_seq}
	</select>
	<!-- 통합잡페어 공지사항 불러오기 종료 -->
	
	<!-- 관리자 게시판 전체 게시물 조회 시작; 2019. 2. 15.  김준영 -->
	<select id="board_search_all" parameterType="hashmap" resultType="BoardGroup">
		select * 
		from (
			select  (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					board_seq
					, board_gb
					, board_detail_gb
					, board_nm
				from
					com_board_group_tb
				where
					board_gb = 'A0305'
				<if test="search_division != null and search_division != '' and search_type != null and search_type != ''">
				and
					board_tp = #{search_type}
				</if>
			) A, (SELECT @ROWNUM := 0) B 
        		order by A.board_seq desc
		) C where rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>
	<!-- 관리자 게시판 전체 게시물 조회 종료  -->

	<!-- 관리자 게시판 전체 게시물 개수 조회 시작; 2019. 2. 15. 김준영 -->
	<select id="board_search_all_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			com_board_group_tb
		where
			board_gb = 'A0305'
		<if test="search_division != null and search_division != '' and search_type != null and search_type != ''">
		and
			board_tp = #{search_type}
		</if>
	</select>
	<!-- 관리자 게시판 전체 게시물 개수 조회 종료  -->

	<!-- 관리자 게시판 내용 검색 시작; 2019. 2. 15. 김준영 -->
	<select id="board_contents_search" parameterType="hashmap" resultType="hashmap">
		select * 
		from (
			select  (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					content.board_seq
					,content.board_content_seq
					,content.board_content_title
					,content.board_content_nm
					,content.board_content_hit
					,DATE_FORMAT(content.board_content_ins_dt, '%Y-%m-%d %T') as board_content_ins_dt
					,DATE_FORMAT(content.board_content_udt_dt, '%Y-%m-%d %T') as board_content_udt_dt
					,grp.board_detail_gb
				from
					com_board_content_tb content
				inner join 
					com_board_group_tb grp
				on 
					grp.board_seq = content.board_seq
				, (SELECT @ROWNUM := 0) B 
				where
					grp.board_detail_gb=#{board_detail_gb}
				<!-- 검색조건 -->
			) A
		    order by CAST(A.board_content_seq AS INTEGER) desc
		) C 
		where
			rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>
	<!-- 관리자 게시판 내용 검색 종료 -->


	<!-- 관리자 게시판 내용 count 조회 시작; 2019. 2. 15. 김준영 -->
	<select id="board_contents_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			com_board_content_tb content
		inner join
			com_board_group_tb grp
		on 
			grp.board_seq = content.board_seq
		where
			grp.board_detail_gb =#{board_detail_gb}	    		 
		<if test="searchKey!='' and searchKey!=null ">	 
			   <if test="searchKey=='searchNm'">
				and
					content.board_content_nm like concat('%',#{searchValue},'%')
				</if>  
					<if test="searchKey=='searchTitle'">
				and
					content.board_content_title like concat('%',#{searchValue},'%')
				</if>  	
		 </if>  
	</select>
	<!-- 관리자 게시판 count 조회 종료 -->

	

	<!-- 통합잡페어 공지사항 내용 등록 시작; 2019. 2. 19 신동철 -->
	<insert id="insert_board_content" parameterType="BoardContent" useGeneratedKeys="true" keyProperty="board_content_seq">
		insert into
			com_board_content_tb
			(
				board_seq
				, board_content_title
				, board_content_ct
				, board_content_nm
				, board_content_hit
				, board_content_imp
				, board_content_ins_id
				, board_content_ins_dt
				, board_content_udt_id
				, board_content_udt_dt
			)values(
				#{board_seq}
				, #{board_content_title}
				, #{board_content_ct}
				, #{board_content_nm}
				, #{board_content_hit}
				, #{board_content_imp}
				, #{board_content_ins_id}
				, now()
				, #{board_content_udt_id}
				, now()
			)
	</insert>
	<!-- 통합잡페어 공지사항 등록 종료 -->

	<!-- 통합잡페어 공지사항 내용 등록 시작; 2019. 2. 19 신동철 -->
	<insert id="insert_notice_content" parameterType="FapNoticeContent">
		insert into
			fap_notice_content_tb
			(
				board_content_seq
				, fap_notice_view_target_ck
				, fap_notice_kind
			)values(
				#{board_content_seq}
				, #{fap_notice_view_target_ck}
				, #{fap_notice_kind}
			)
	</insert>
	<!-- 통합잡페어 공지사항 등록 종료 -->

	<!-- 통합잡페어 공지사항 파일 등록 시작; 2019. 2. 19. 김준영 -->
	<insert id="insert_board_file" parameterType="BoardFile">
		insert into
			com_board_file_tb (
				board_content_seq
				, board_file_saved
				, board_file_origin
				, board_file_ins_id
				, board_file_ins_dt
				, board_file_udt_id
				, board_file_udt_dt
			) values (
				#{board_content_seq}
				, #{board_file_saved}
				, #{board_file_origin}
				, #{board_ins_id}
				, now()
				, #{board_udt_id}
				, now()
			)
	</insert>
	<!-- 통합잡페어 공지사항 파일 등록 종료 -->
	
	<!-- 인턴십 부가정보 등록 시작-공지사항과 유사하여 vo를 새로 만들지 않음 -->
	<insert id="fap_insert_internship_content" parameterType="FapNoticeContent">
		insert into
			fap_internship_content_tb
			(
				board_content_seq
				, fap_notice_view_target_ck
			)values(
				#{board_content_seq}
				, #{fap_notice_view_target_ck}
			)
	</insert>
	<!-- 인턴십 부가정보 등록 종료 -->
	
	<!-- 인턴십 부가정보 내용 수정 시작; 2019.06.27 김경아-->
	<update id="fap_update_internship_content"  parameterType="FapNoticeContent">
		update 
				  fap_internship_content_tb
		    set	    	 
				  fap_notice_view_target_ck = #{fap_notice_view_target_ck}
		where
				board_content_seq = #{board_content_seq}
	</update>
	<!-- 인턴십 부가정보 내용 수정 종료-->
	
	<!-- 오픈잡페어 취업정보 & 전략 게시판 & 미국인턴십 리스트 조회 시작; 2019.07.31. 김경아-->        
	 <select id="fap_open_job_info_content_list" resultMap="boardContent" parameterType="hashMap">
	     select 
			     boardContent.board_content_seq
			   , boardContent.board_seq
			   , boardContent.board_content_title
		       , boardContent.board_content_nm
			   , boardContent.board_content_hit
			   , DATE_FORMAT(boardContent.board_content_ins_dt, '%Y-%m-%d') as board_content_ins_dt	
			   , DATE_FORMAT(boardContent.board_content_udt_dt	, '%Y-%m-%d') as board_content_udt_dt		
			   , grp.board_detail_gb	   
	     <if test="board_detail_gb=='A1700'">
		     	, notice.fap_notice_seq
			    , notice.fap_notice_view_target_ck = #{fap_notice_view_target_ck}
				, notice.fap_notice_kind = #{fap_notice_kind}
		 </if>	  
	     <if test="board_detail_gb=='A1701'">       
		       , jobInfo.fap_open_job_info_seq		    
		       , jobInfo.fap_open_job_info_view_target_ck
			   , jobInfo.fap_open_job_info_kind 
		 </if>
		 <if test="board_detail_gb=='A1706'">       
		       , intern.internship_seq		    
		       , intern.user_id
			   , intern.user_nm
			   , intern.user_phone
			   , intern.user_email
		 </if>	 
	     from
	   		  	com_board_content_tb boardContent	
		<if test="board_detail_gb=='A1700'">
	     inner join
	     		 fap_notice_content_tb notice
	     on
	     		 boardContent.board_content_seq = notice.board_content_seq 
	     </if>
	     <if test="board_detail_gb=='A1701'"> 	 
	   	 inner join
	   	 	     fap_open_job_info_tb  jobInfo
	     on  
	     		boardContent.board_content_seq = jobInfo.board_content_seq  
	     </if>
	     <if test="board_detail_gb=='A1706'"> 	 
		   	 left outer join
		   	 	     fap_internship_apply_tb intern
		     on  
		     		boardContent.board_content_seq = intern.board_content_seq  
	     </if> 
     	 inner join 
				com_board_group_tb grp
		 on 
			grp.board_seq = boardContent.board_seq
         where
       	    grp.board_detail_gb=#{board_detail_gb}
		<if test="searchKey!=null and searchKey !=''">							
				<if test='searchKey=="searchNm"'>
				and 
					 boardContent.board_content_nm like concat('%',#{searchValue},'%')
				</if>  
					<if test='searchKey=="searchTitle"'>
				and
					boardContent.board_content_title like concat('%',#{searchValue},'%')
				</if> 
		</if>	 		    
	      order by
      		   boardContent.board_content_seq desc
	 </select>	 
	 <!-- 오픈잡페어 취업정보 & 전략 게시판 리스트 조회 종료-->
   
	 <!-- 오픈잡페어 취업정보 & 전략 게시판 상세조회 추가항목 시작; 2019.07.31. 김경아-->
	 <select id="fap_open_job_info_content_additional_detail" resultMap="boardContent"  parameterType="hashmap">
	
	  	select 		  	
	  	           content.board_content_seq  
		  	    <if test="board_detail_gb=='A1700'">
		  	    	, notice.fap_notice_seq
			  	    , notice.fap_notice_view_target_ck 
				    , notice.fap_notice_kind 
			    </if>
	  	        <if test="board_detail_gb=='A1701'">
			  		, jobInfo.fap_open_job_info_seq 		  	    
			  	    , jobInfo.fap_open_job_info_view_target_ck  
			  	    , jobInfo.fap_open_job_info_kind  
		  	    </if>
		  	    <if test="board_detail_gb=='A1706'">       
			  	    , ict.fap_notice_view_target_ck 
			       , intern.internship_seq		    
			       , intern.user_id
				   , intern.user_nm
				   , intern.user_phone
				   , intern.user_email
				</if>	
		  	    from 
		  	    	com_board_content_tb content
			     <if test="board_detail_gb=='A1700'">
				 inner join
				  		  fap_notice_content_tb notice
				 on 
				 	content.board_content_seq = notice.board_content_seq
				 </if>
		  	     <if test="board_detail_gb=='A1701'">
			  	  inner join           
					  	  fap_open_job_info_tb jobInfo	
				  on 
				 	content.board_content_seq = jobInfo.board_content_seq
			    </if>
			    <if test="board_detail_gb=='A1706'"> 	 
				    inner join
					  		  fap_internship_content_tb ict
					 on 
					 	content.board_content_seq = ict.board_content_seq
					 	
				   	 left outer join
				   	 	     fap_internship_apply_tb intern
				     on  
				     		content.board_content_seq = intern.board_content_seq  
			     </if>
			  	  where
				 	   content.board_content_seq = #{board_content_seq}
	 </select>	 
 	 <!-- 오픈잡페어 취업정보 & 전략 게시판 상세조회 추가항목 종료-->
	
	<!-- 오픈잡페어 취업정보 & 전략 게시판 내용 등록 시작; 2019.06.26 -->
	<insert id="fap_open_insert_job_info_content" parameterType="FAPOpenJobInfo">
		insert into 
				fap_open_job_info_tb(
					  board_content_seq
					, fap_open_job_info_view_target_ck
					, fap_open_job_info_kind
				) values (
				    #{board_content_seq}
				  ,	#{fap_open_job_info_view_target_ck}
				  ,	#{fap_open_job_info_kind}
				)				
	</insert>	
	<!-- 오픈잡페어  취업정보 & 전략 게시판 내용 등록 종료 -->
	
	<!-- 오픈잡페어 공지사항 게시판 내용 등록 시작; 2019.07.31. -->
	<insert id="fap_open_insert_notice_content" parameterType="FapNoticeContent">
		insert into 
				fap_notice_content_tb(
					  board_content_seq
					, fap_notice_view_target_ck
					, fap_notice_kind
				) values (
				    #{board_content_seq}
				  ,	#{fap_notice_view_target_ck}
				  ,	#{fap_notice_kind}
				)				
	</insert>	
    <!-- 오픈잡페어 공지사항 게시판 내용 등록 종료 -->
	
	<!-- 오픈잡페어 공지사항 게시판 내용 수정 시작; 2019.06.27 김경아-->
	<update id="fap_open_update_notice_content"  parameterType="FapNoticeContent">
		update 
				  fap_notice_content_tb
		    set	    	 
				  fap_notice_view_target_ck = #{fap_notice_view_target_ck}
				, fap_notice_kind = #{fap_notice_kind}
		where
				board_content_seq = #{board_content_seq}
	</update>
	<!-- 오픈잡페어 취업정보 & 전략 게시판 내용 수정 종료-->
	
	<!-- 오픈잡페어 취업정보 & 전략 게시판 내용 수정 시작; 2019.06.27 김경아-->
	<update id="fap_open_update_job_info_content"  parameterType="FAPOpenJobInfo">
		update 
				  fap_open_job_info_tb
		    set	    	 
				  fap_open_job_info_view_target_ck = #{fap_open_job_info_view_target_ck}
				, fap_open_job_info_kind = #{fap_open_job_info_kind}
		where
				board_content_seq = #{board_content_seq}
	</update>
	<!-- 오픈잡페어 취업정보 & 전략 게시판 내용 수정 종료-->
	
	
	<!-- 오픈잡페어 취업정보 & 전략 게시판 내용 삭제 시작; 2019.06.27 김경아-->
	<delete id="fap_open_delete_job_info_content" parameterType="int">
	   delete from
	   		  com_board_content_tb
	   where 
	   		  board_content_seq = #{board_content_seq}	
	</delete>
	<!-- 오픈잡페어 취업정보 & 전략 게시판 내용 삭제 종료-->

	<!-- 통합잡페어 등록 시작; 2018.12.10 신동철 -->
	<insert id="insert_jobfair" parameterType="FAPAdminJobfair">
		<selectKey resultType="int" keyProperty="fap_jobfair_seq">
			select last_insert_id()
		</selectKey>	
		insert into
			fap_jobfair_tb
			(
                fap_jobfair_title
                , fap_jobfair_st
                , fap_jobfair_et
                , fap_jobfair_log_saved
                , fap_jobfair_log_origin
                , fap_jobfair_eps
                , fap_jobfair_ins_id
                , fap_jobfair_ins_dt
                , fap_jobfair_udt_id
                , fap_jobfair_udt_dt                
			)values
			(
				#{fap_jobfair_title}
                , #{fap_jobfair_st}
                , #{fap_jobfair_et}
                , #{fap_jobfair_log_saved}
                , #{fap_jobfair_log_origin}
                , #{fap_jobfair_eps}
                , #{fap_jobfair_ins_id}
                , now()
                , #{fap_jobfair_udt_id}
                , now()
			)
	</insert>
	<!-- 통합잡페어 등록 종료 -->
	
	<!-- 잡페어 개최지 등록 시작; 2018.12.10 신동철 -->
	<insert id="insert_jobfair_lo" parameterType="java.util.ArrayList">
		insert into
			fap_jobfair_lo_tb
			(
                fap_jobfair_seq
                , fap_jobfair_lo             
			)values
			<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_jobfair_seq}
                , #{element.fap_jobfair_lo}
			)
			</foreach>
	</insert>
	<!-- 잡페어 개최지 등록 종료 -->
	
	<!-- 통합잡페어 세부사항 등록 시작; 2018.12.10 신동철 -->
	<insert id="insert_jobfair_divide" parameterType="FAPAdminJobfairDivide">	
		<selectKey resultType="int" keyProperty="fap_jobfair_divide_seq">
			select last_insert_id()
		</selectKey>
		insert into
			fap_jobfair_divide_tb
			(
				fap_jobfair_seq
				, fap_jobfair_divide_st
				, fap_jobfair_divide_et
				, fap_jobfair_divide_detail
				, fap_jobfair_divide_gb
				, fap_jobfair_divide_gb_eps
				, fap_jobfair_divide_app_st
				, fap_jobfair_divide_app_et
				, fap_jobfair_divide_app_num
                , fap_jobfair_divide_ins_id
                , fap_jobfair_divide_ins_dt
                , fap_jobfair_divide_udt_id
                , fap_jobfair_divide_udt_dt          
			)values
			(
				#{fap_jobfair_seq}
				, #{fap_jobfair_divide_st}
				, #{fap_jobfair_divide_et}
				, #{fap_jobfair_divide_detail}
				, #{fap_jobfair_divide_gb}
                , #{fap_jobfair_divide_gb_eps}
                , #{fap_jobfair_divide_app_st}
				, #{fap_jobfair_divide_app_et}
				, #{fap_jobfair_divide_app_num}
                , #{fap_jobfair_divide_ins_id}
                , now()
                , #{fap_jobfair_divide_udt_id}
                , now()
			)
	</insert>
	<!-- 통합잡페어 세부사항 등록 종료 -->
	
	<!-- 잡페어 세부채용대상 등록 시작; 2018.12.10 신동철 -->
	<insert id="insert_jobfair_divide_rc" parameterType="java.util.ArrayList">
		insert into
			fap_jobfair_divide_rc_tb
			(
                fap_jobfair_divide_seq
                , fap_jobfair_seq
                , fap_jobfair_divide_rc
			)values
			<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_jobfair_divide_seq}
                , #{element.fap_jobfair_seq}
                , #{element.fap_jobfair_divide_rc}
			)
			</foreach>
	</insert>
	<!-- 잡페어 세부채용대상 등록 종료 -->
	
	<!-- 특정 잡페어 전체 정보 검색 시작; 2018. 12. 13. 신동철 -->
	<resultMap type="hashmap" id="fapJobfairMap">
		<id property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_jobfair_title" column="fap_jobfair_title" />
		<result property="fap_jobfair_st" column="fap_jobfair_st" />
		<result property="fap_jobfair_et" column="fap_jobfair_et" />
		<result property="fap_jobfair_log_saved" column="fap_jobfair_log_saved" />
		<result property="fap_jobfair_log_origin" column="fap_jobfair_log_origin" />
		<result property="fap_jobfair_eps" column="fap_jobfair_eps" />
		<result property="fap_apply_max_multiple" column="fap_apply_max_multiple" />
		<collection property="fapjobfairLimitInterviewMap"  javaType="java.util.HashMap" resultMap="fapjobfairLimitInterview" />
		<collection property="fapJobfairLoList" javaType="java.util.ArrayList" resultMap="fapJobfairLo" />
		<collection property="fapJobfairDivideList" javaType="java.util.ArrayList" resultMap="fapJobfairDivide" />
		<collection property="fapJobfairDivideRcList" javaType="java.util.ArrayList" resultMap="fapJobfairDivideRc" />
		<collection property="fapCompGroupSetList" javaType="java.util.ArrayList" resultMap="fapCompGroupSet" />
	</resultMap>
	<resultMap type="hashmap" id="fapjobfairLimitInterview">
		<id property="fap_limit_interview_set_seq" column="fap_limit_interview_set_seq" />
		<result property="fap_limit_interview_type" column="fap_limit_interview_type" />
		<result property="fap_limit_interview_count" column="fap_limit_interview_count" />
	</resultMap>
	<resultMap type="hashmap" id="fapJobfairLo">
		<id property="fap_jobfair_lo_seq" column="fap_jobfair_lo_seq" />
		<result property="fap_jobfair_lo" column="fap_jobfair_lo" />
	</resultMap>
	<resultMap type="hashmap" id="fapJobfairDivide">
		<id property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_divide_st" column="fap_jobfair_divide_st" />
		<result property="fap_jobfair_divide_et" column="fap_jobfair_divide_et" />
		<result property="fap_jobfair_divide_detail" column="fap_jobfair_divide_detail" />
		<result property="fap_jobfair_divide_gb" column="fap_jobfair_divide_gb" />
		<result property="fap_jobfair_divide_gb_eps" column="fap_jobfair_divide_gb_eps" />
		<result property="fap_jobfair_divide_app_st" column="fap_jobfair_divide_app_st" />
		<result property="fap_jobfair_divide_app_et" column="fap_jobfair_divide_app_et" />
		<result property="fap_jobfair_divide_app_num" column="fap_jobfair_divide_app_num" />
		<collection property="fapJobfairApplicableTimeList" javaType="java.util.ArrayList" resultMap="fapJobfairApplicableTime" />
	</resultMap>
	<resultMap type="hashmap" id="fapJobfairDivideRc">
		<id property="fap_jobfair_divide_rc_seq" column="fap_jobfair_divide_rc_seq" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_divide_rc" column="fap_jobfair_divide_rc" />
	</resultMap>
	<resultMap type="hashmap" id="fapCompGroupSet">
		<id property="fap_comp_group_set_seq" column="fap_comp_group_set_seq" />
		<result property="fap_comp_groupcode" column="fap_comp_groupcode" />
		<result property="fap_comp_stock" column="fap_comp_stock" />
		<result property="fap_comp_3years_avg_sales" column="fap_comp_3years_avg_sales" />
		<result property="fap_comp_employee_num" column="fap_comp_employee_num" />
	</resultMap>	
	<resultMap type="hashmap" id="fapJobfairApplicableTime">
		<id property="fap_jobfair_applicable_time_seq" column="fap_jobfair_applicable_time_seq" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_applicable_time_first" column="fap_jobfair_applicable_time_first" />
		<result property="fap_jobfair_applicable_time_st" column="fap_jobfair_applicable_time_st" />
		<result property="fap_jobfair_applicable_time_et" column="fap_jobfair_applicable_time_et" />
		<result property="fap_jobfair_applicable_time_deadline_gb" column="fap_jobfair_applicable_time_deadline_gb" />
	</resultMap>	
	
	<select id="select_fap_jobfair_info" parameterType="int" resultMap="fapJobfairMap">
		select
			jobfair.fap_jobfair_seq as fap_jobfair_seq 
		    ,jobfair.fap_jobfair_title as fap_jobfair_title
		    ,DATE_FORMAT(jobfair.fap_jobfair_st, '%Y-%m-%d') as fap_jobfair_st
		    ,DATE_FORMAT(jobfair.fap_jobfair_et, '%Y-%m-%d') as fap_jobfair_et
		    ,jobfair.fap_jobfair_log_saved as fap_jobfair_log_saved
		    ,jobfair.fap_jobfair_log_origin as fap_jobfair_log_origin
		    ,jobfair.fap_jobfair_eps as fap_jobfair_eps
		    ,lo.fap_jobfair_lo_seq as fap_jobfair_lo_seq
		    ,lo.fap_jobfair_lo as fap_jobfair_lo
		    ,divide.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,DATE_FORMAT(divide.fap_jobfair_divide_st, '%Y-%m-%d') as fap_jobfair_divide_st
		    ,DATE_FORMAT(divide.fap_jobfair_divide_et, '%Y-%m-%d') as fap_jobfair_divide_et
		    ,divide.fap_jobfair_divide_detail as fap_jobfair_divide_detail
		    ,divide.fap_jobfair_divide_gb as fap_jobfair_divide_gb
		    ,divide.fap_jobfair_divide_gb_eps as fap_jobfair_divide_gb_eps
		    ,DATE_FORMAT(divide.fap_jobfair_divide_app_st, '%Y-%m-%d') as fap_jobfair_divide_app_st
		    ,DATE_FORMAT(divide.fap_jobfair_divide_app_et, '%Y-%m-%d') as fap_jobfair_divide_app_et
		    ,divide.fap_jobfair_divide_app_num as fap_jobfair_divide_app_num
		    ,divide_rc.fap_jobfair_divide_rc_seq as fap_jobfair_divide_rc_seq
		    ,divide_rc.fap_jobfair_divide_rc as fap_jobfair_divide_rc
		    ,num_set.fap_apply_max_multiple as fap_apply_max_multiple
		    ,limit_set.fap_limit_interview_set_seq as fap_limit_interview_set_seq
		    ,limit_set.fap_limit_interview_type as fap_limit_interview_type
		    ,limit_set.fap_limit_interview_count as fap_limit_interview_count
		    ,comp_group.fap_comp_group_set_seq as fap_comp_group_set_seq
		    ,comp_group.fap_comp_groupcode as fap_comp_groupcode
		    ,comp_group.fap_comp_stock as fap_comp_stock
		    ,comp_group.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
		    ,comp_group.fap_comp_employee_num as fap_comp_employee_num
		    
		    ,time.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,time.fap_jobfair_applicable_time_deadline_gb as fap_jobfair_applicable_time_deadline_gb
		    ,time.fap_jobfair_applicable_time_seq as fap_jobfair_applicable_time_seq
		    ,time.fap_jobfair_applicable_time_first as fap_jobfair_applicable_time_first
		    ,DATE_FORMAT(time.fap_jobfair_applicable_time_st , '%Y-%m-%d %H:%i:%S') as fap_jobfair_applicable_time_st
		    ,DATE_FORMAT(time.fap_jobfair_applicable_time_et , '%Y-%m-%d %H:%i:%S') as fap_jobfair_applicable_time_et
		from
			fap_jobfair_tb jobfair
			left join fap_apply_max_num_set_tb num_set
					on jobfair.fap_jobfair_seq = num_set.fap_jobfair_seq
			left join fap_limit_interview_set_tb limit_set
					on jobfair.fap_jobfair_seq = limit_set.fap_jobfair_seq
		    left join fap_jobfair_lo_tb lo
					on jobfair.fap_jobfair_seq = lo.fap_jobfair_seq
			left join fap_jobfair_divide_tb divide
					on jobfair.fap_jobfair_seq = divide.fap_jobfair_seq
			left join fap_jobfair_divide_rc_tb divide_rc
					on jobfair.fap_jobfair_seq = divide_rc.fap_jobfair_seq 
					and divide.fap_jobfair_divide_seq = divide_rc.fap_jobfair_divide_seq
			left join fap_comp_group_set_tb comp_group
					on jobfair.fap_jobfair_seq = comp_group.fap_jobfair_seq
			left join fap_jobfair_applicable_time_tb time
					on divide.fap_jobfair_divide_seq = time.fap_jobfair_divide_seq
		where
			jobfair.fap_jobfair_seq = #{fap_jobfair_seq}
		and
			time.fap_jobfair_applicable_time_first = 'D0300'
	</select>
	<!-- 특정 잡페어 전체 정보 검색 종료-->
	
	<!-- 모든 잡페어 정보 리스트 검색 시작; 2018. 12. 13. 신동철 -->
	<select id="jobfair_search_list" parameterType="hashmap" resultType="FAPAdminJobfair">
		select
			fap_jobfair_seq 
		    ,fap_jobfair_title
		    ,fap_jobfair_st
		    ,fap_jobfair_et
		    ,fap_jobfair_log_saved
		    ,fap_jobfair_log_origin
		    ,fap_jobfair_eps
		from
			fap_jobfair_tb
		where
		1 = 1
		<if test="fap_jobfair_opening_flag !=null and fap_jobfair_opening_flag == 'C4500'">
			and date(fap_jobfair_et) >= DATE_FORMAT(now(), '%Y-%m-%d')
		</if>
		<if test="fap_jobfair_opening_flag !=null and fap_jobfair_opening_flag == 'C4501'">
			<![CDATA[			
				and date(fap_jobfair_et) < DATE_FORMAT(now(), '%Y-%m-%d')
			]]>
		</if>
		order by 
			fap_jobfair_ins_dt desc
	</select>
	<!-- 모든 잡페어 정보 리스트 검색 종료-->
	
	<!-- 특정 잡페어 정보 검색 시작; 2018. 12. 13. 신동철 -->
	<select id="select_fap_jobfair" parameterType="int" resultType="FAPAdminJobfair">
		select
			fap_jobfair_seq 
		    ,fap_jobfair_title
		    ,fap_jobfair_st
		    ,fap_jobfair_et
		    ,fap_jobfair_log_saved
		    ,fap_jobfair_log_origin
		    ,fap_jobfair_eps	    
		from
			fap_jobfair_tb
		where
			fap_jobfair_seq = #{fap_jobfair_seq}
	</select>
	<!-- 특정 잡페어 정보 검색 종료-->
	
	<!--특정 잡페어 세부 정보  검색 시작; 2018. 12. 14. 신동철 -->
	<select id="select_fap_jobfair_divide" parameterType="int" resultType="FAPAdminJobfairDivide">
		select
		    fap_jobfair_divide_seq
		    ,fap_jobfair_divide_st
		    ,fap_jobfair_divide_et
		    ,fap_jobfair_divide_app_st
		    ,fap_jobfair_divide_app_et
		    ,fap_jobfair_divide_app_num
		    ,fap_jobfair_divide_detail
		    ,fap_jobfair_divide_gb
		    ,fap_jobfair_divide_gb_eps
		from
			fap_jobfair_divide_tb		
		where 
			fap_jobfair_seq = #{fap_jobfair_seq}
		order by 
			fap_jobfair_divide_udt_dt desc
	</select>
	<!-- 특정 잡페어 세부 정보 검색 종료-->
	
	<!-- 특정 잡페어 세부 채용대상  검색 시작; 2018. 12. 14. 신동철 -->
	<select id="select_fap_jobfair_divide_rc" parameterType="int" resultType="FAPAdminJobfairDivideRc">
		select
		    fap_jobfair_divide_rc_seq		  
		    , fap_jobfair_divide_rc
		from
			fap_jobfair_divide_rc_tb			
		where 
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- 특정 잡페어 세부 채용대상 검색 종료-->
	
	<!-- 특정 잡페어 삭제; 2018. 12. 14. 신동철 -->
	<delete id="delete_fap_jobfair" parameterType="int">
		delete
		from
			fap_jobfair_tb			
		where 
			fap_jobfair_seq = #{fap_jobfair_seq}
	</delete>
	<!-- 특정 잡페어 삭제-->
	
	<!-- 통합잡페어 정보 수정 시작; 2018. 12. 17. 신동철 -->
	<update id="update_jobfair" parameterType="FAPAdminJobfair">
			update
				fap_jobfair_tb
			set			
		        fap_jobfair_title = #{fap_jobfair_title}
		        ,fap_jobfair_st = #{fap_jobfair_st}
		        ,fap_jobfair_et = #{fap_jobfair_et}
				<if test= "fap_jobfair_log_origin != null and fap_jobfair_log_saved != '' ">
		        	,fap_jobfair_log_saved = #{fap_jobfair_log_saved}
				</if>
				<if test="fap_jobfair_log_origin != null and fap_jobfair_log_saved != '' ">
		       		,fap_jobfair_log_origin = #{fap_jobfair_log_origin}
				</if>
				,fap_jobfair_eps = #{fap_jobfair_eps}
				,fap_jobfair_udt_id = #{fap_jobfair_udt_id}
				,fap_jobfair_udt_dt = now()
			where
				fap_jobfair_seq = #{fap_jobfair_seq}
	</update>
	<!-- 통합잡페어 정보 수정 종료 -->
	
	<!-- 통합잡페어 개최지 정보 수정 시작; 2018. 12. 17. 신동철 -->
	<update id="update_jobfair_lo" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_jobfair_lo_tb
			set			
		      	fap_jobfair_lo = #{element.fap_jobfair_lo}
			where			
				fap_jobfair_lo_seq = #{element.fap_jobfair_lo_seq}
		</foreach>
	</update>
	<!-- 통합잡페어 개최지 정보 수정 종료 -->
	
	<!-- 통합잡페어 세부정보 수정 시작; 2018. 12. 18. 신동철 -->
	<update id="update_jobfair_divide" parameterType="FAPAdminJobfairDivide">
			update
				fap_jobfair_divide_tb
			set			
		      	fap_jobfair_divide_st = #{fap_jobfair_divide_st}
		      	,fap_jobfair_divide_et = #{fap_jobfair_divide_et}
		      	,fap_jobfair_divide_detail = #{fap_jobfair_divide_detail}
		      	,fap_jobfair_divide_gb = #{fap_jobfair_divide_gb}		      	
				,fap_jobfair_divide_gb_eps = #{fap_jobfair_divide_gb_eps}
				,fap_jobfair_divide_app_st = #{fap_jobfair_divide_app_st}
				,fap_jobfair_divide_app_et = #{fap_jobfair_divide_app_et}
				,fap_jobfair_divide_app_num = #{fap_jobfair_divide_app_num}
				,fap_jobfair_divide_udt_id = #{fap_jobfair_divide_udt_id}
				,fap_jobfair_divide_udt_dt = now()
			where			
				fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</update>
	<!-- 통합잡페어 세부정보 수정 종료 -->
	
	<!-- 통합잡페어 세부채용대상 정보 수정 시작; 2018. 12. 18. 신동철 -->
	<update id="update_jobfair_divide_rc" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_jobfair_divide_rc_tb
			set			
		      	fap_jobfair_divide_rc = #{element.fap_jobfair_divide_rc}
			where			
				fap_jobfair_divide_rc_seq = #{element.fap_jobfair_divide_rc_seq}
		</foreach>
	</update>
	<!-- 통합잡페어 세부채용대상 정보 수정 종료 -->
		
	<!-- 통합잡페어 지원자 카운트 조회 시작; 2019. 1. 21 신동철 -->
		<select id="select_jobfair_apply_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			fap_jobfair_apply_tb jobfair_apply
		    left join fap_jobfair_tb jobfair
					on jobfair_apply.fap_jobfair_seq = jobfair.fap_jobfair_seq
			left join fap_personal_user_tb personal_user
					on personal_user.user_id = jobfair_apply.user_id
			left join com_user_tb com_user
					on personal_user.user_id = com_user.user_id 
		where
			1 = 1
			<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0">
				and jobfair.fap_jobfair_seq = #{fap_jobfair_seq}
			</if>
			<if test="user_flag != null and user_flag != '' ">
				and com_user.user_flag = #{user_flag}
			</if>
			<if test="fap_jobfair_user_per != null and fap_jobfair_user_per != '' ">
				and jobfair_apply.fap_jobfair_user_per = #{fap_jobfair_user_per}
			</if>
			<if test="user_nm != null and user_nm != '' ">
				and com_user.user_nm = #{user_nm}
			</if>
	</select>	
	<!-- 통합잡페어 지원자 카운트 조회 종료 -->	
		
	<!-- 통합잡페어 지원자 등록정보 검색 시작; 2018. 12. 20 신동철 -->
		<select id="search_jobfair_user_apply_info" parameterType="hashmap" resultType="hashmap">
		SELECT * FROM (
			SELECT  (@ROWNUM := @ROWNUM + 1) AS rn, A.* FROM (
				select
					jobfair.fap_jobfair_seq as fap_jobfair_seq 
				    ,jobfair.fap_jobfair_title as fap_jobfair_title
				    ,jobfair_apply.fap_jobfair_user_seq as fap_jobfair_user_seq
				    ,DATE_FORMAT(jobfair_apply.fap_jobfair_user_app_dt, '%Y-%m-%d') as fap_jobfair_user_app_dt
				    ,DATE_FORMAT(jobfair_apply.fap_jobfair_user_per_dt, '%Y-%m-%d') as fap_jobfair_user_per_dt
				    ,jobfair_apply.fap_jobfair_user_per as fap_jobfair_user_per
				    ,jobfair_apply.fap_jobfair_user_per_id as fap_jobfair_user_per_id
				    ,com_user.user_id as user_id
				    ,com_user.user_nm as user_nm
				    ,com_user.user_phone as user_phone
				    ,com_user.user_email as user_email
				    ,com_user.user_flag as user_flag
				    ,FLOOR((TO_DAYS(now())-(TO_DAYS(com_user.user_birth)))/365) as user_age
				    ,personal_user.fap_personal_user_job_objective as fap_personal_user_job_objective
				    ,personal_user.fap_personal_user_seq as fap_personal_user_seq
				    ,personal_user.fap_personal_user_edu_level as fap_personal_user_edu_level
				from
					fap_jobfair_apply_tb jobfair_apply
				    , fap_jobfair_tb jobfair
					, fap_personal_user_tb personal_user
					, com_user_tb com_user
					, (SELECT @ROWNUM := 0) B 
				where
					jobfair_apply.fap_jobfair_seq = jobfair.fap_jobfair_seq
				and 
					personal_user.user_id = jobfair_apply.user_id
				and
					personal_user.user_id = com_user.user_id 
					<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0">
						and jobfair.fap_jobfair_seq = #{fap_jobfair_seq}
					</if>
					<if test="user_flag != null and user_flag != '' ">
						and com_user.user_flag = #{user_flag}
					</if>
					<if test="fap_jobfair_user_per != null and fap_jobfair_user_per != '' ">
						and jobfair_apply.fap_jobfair_user_per = #{fap_jobfair_user_per}
					</if>
					<if test="user_nm != null and user_nm != '' ">
						and com_user.user_nm = #{user_nm}
					</if>
					) A
					<if test="orderType != null and orderType != '' ">
              				<!-- 지원자 이름으로 정렬 -->							
							<if test="orderType == 'apply_name'">
								<if test="orderValue == 'desc'">
									order by A.user_nm desc
								</if>
								<if test="orderValue == 'asc'">
									order by A.user_nm asc
								</if>
							</if>
							<!-- 지원자 아이디로 정렬 -->
							<if test="orderType == 'apply_id'">
								<if test="orderValue == 'desc'">
									order by A.user_id desc
								</if>
								<if test="orderValue == 'asc'">
									order by A.user_id asc
								</if>
							</if>
							<!-- 지원자 신청일로 정렬 -->
							<if test="orderType == 'apply_date'">
								<if test="orderValue == 'desc'">
									order by  DATE_FORMAT(A.fap_jobfair_user_app_dt, '%Y-%m-%d HH:mm:ss') desc
								</if>
								<if test="orderValue == 'asc'">
									order by DATE_FORMAT(A.fap_jobfair_user_app_dt, '%Y-%m-%d HH:mm:ss') asc
								</if>
							</if>
							<!-- 지원자 승인일로 정렬 -->
							<if test="orderType == 'per_date'">
								<if test="orderValue == 'desc'">
									order by  DATE_FORMAT(A.fap_jobfair_user_per_dt, '%Y-%m-%d HH:mm:ss') desc
								</if>
								<if test="orderValue == 'asc'">
									order by  DATE_FORMAT(A.fap_jobfair_user_per_dt, '%Y-%m-%d HH:mm:ss') asc
								</if>
							</if>
							<if test="orderType != null and orderType == ''">
								order by A.fap_jobfair_user_app_dt desc
							</if>
					</if>
				) C 
				WHERE rn BETWEEN #{adminPager.pageBegin} AND #{adminPager.pageEnd}
	</select>	
	<!-- 통합잡페어 지원자 등록정보 검색 종료 -->
	
	<!-- 통합잡페어 지원자 신청 승인 시작; 2018. 12. 21. 신동철 -->
	<update id="jobfair_user_apply_permission" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_jobfair_apply_tb
			set			
		      	fap_jobfair_user_per = 'C1001'
		      	,fap_jobfair_user_per_dt = now()
		      	,fap_jobfair_user_per_id = #{element.fap_jobfair_user_per_id}		      	
			where			
				fap_jobfair_user_seq = #{element.fap_jobfair_user_seq}
		</foreach>
	</update>
	<!-- 통합잡페어 지원자 신청 승인 종료 -->
	
	<!-- 잡페어 현지면접 인원제한 등록 시작 -->
	<insert id="insert_limit_interview" parameterType="FAPAdminLimitInterview">
		insert into
			fap_limit_interview_set_tb
			(
				fap_jobfair_seq
				,fap_limit_interview_type
				,fap_limit_interview_count
			)values(
				#{fap_jobfair_seq}
				,#{fap_limit_interview_type}
				,#{fap_limit_interview_count}
			)
	</insert>
	<!-- 잡페어 현지면접 인원제한 등록 종료 -->
	
	<!-- 잡페어 지원가능인원 등록 시작; 2018.12.28 신동철 -->
	<insert id="insert_apply_max_num" parameterType="FAPAdminJobfair">
		insert into
			fap_apply_max_num_set_tb
			(			
                fap_jobfair_seq
                , fap_apply_max_multiple
                , fap_apply_max_ins_id
                , fap_apply_max_ins_dt
                , fap_apply_max_udt_id
                , fap_apply_max_udt_dt                
			)values
			(
				#{fap_jobfair_seq}
                , #{fap_apply_max_multiple}
                , #{fap_jobfair_ins_id}
                , now()
                , #{fap_jobfair_udt_id}
                , now()
			)
	</insert>
	<!-- 잡페어 지원가능인원설정 등록 종료 -->
	
	<!-- 잡페어 현지인원 제한 설정 시작 -->
	<update id="update_limit_interview" parameterType="FAPAdminLimitInterview">
		update
			fap_limit_interview_set_tb
		set
			fap_limit_interview_type = #{fap_limit_interview_type}
			,fap_limit_interview_count = #{fap_limit_interview_count}
		where
			fap_jobfair_seq = #{fap_jobfair_seq}
	</update>
	<!-- 잡페어 현지인원 제한 설정 종료 -->
	
	<!-- 잡페어 지원 가능 인원 설정 수정 시작; 2018. 12. 28. 신동철 -->
	<update id="update_apply_max_num" parameterType="FAPAdminJobfair">
			update
				fap_apply_max_num_set_tb
			set			
		        fap_apply_max_multiple =#{fap_apply_max_multiple}
			where
				fap_jobfair_seq = #{fap_jobfair_seq}
	</update>
	<!-- 잡페어 지원 가능 인원 설정 수정 종료 -->
	
	<!-- 회사그룹 설정 등록 시작; 2018.12.30 신동철 -->
	<insert id="insert_comp_group_set" parameterType="java.util.ArrayList">
		insert into
			fap_comp_group_set_tb
			(
				fap_jobfair_seq
                , fap_comp_groupcode
                , fap_comp_stock
                , fap_comp_3years_avg_sales
                , fap_comp_employee_num
                , fap_comp_group_ins_id
                , fap_comp_group_ins_dt
                , fap_comp_group_udt_id
                , fap_comp_group_udt_dt                        
			)values
			<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_jobfair_seq}
				, #{element.fap_comp_groupcode}
				, #{element.fap_comp_stock}
				, #{element.fap_comp_3years_avg_sales}
				, #{element.fap_comp_employee_num}
				, #{element.fap_comp_group_ins_id}
				, now()
				, #{element.fap_comp_group_udt_id}
				, now()       
			)
			</foreach>
	</insert>
	<!-- 회사그룹 설정 등록 종료 -->
	
	<!-- 회사그룹 설정 삭제 시작; 2018. 12. 30. 신동철 -->
	<delete id="delete_comp_group_set" parameterType="int">
		delete
		from
			fap_comp_group_set_tb		
		where 
			fap_jobfair_seq = #{fap_jobfair_seq}
	</delete>
	<!-- 회사그룹 설정 삭제 종료-->
	
	<!-- 잡페어 개최지 삭제 시작; 2018. 12. 30. 신동철 -->
	<delete id="delete_jobfair_lo" parameterType="int">
		delete
		from
			fap_jobfair_lo_tb		
		where 
			fap_jobfair_lo_seq = #{fap_jobfair_lo_seq}
	</delete>
	<!-- 잡페어 개최지 삭제 종료-->
	
	<!-- 잡페어 세부정보 삭제 시작; 2018. 12. 30. 신동철 -->
	<delete id="delete_fap_jobfair_divide" parameterType="int">
		delete
		from
			fap_jobfair_divide_tb		
		where 
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</delete>
	<!-- 잡페어 세부정보 삭제 종료-->
	
	<!-- 잡페어 세부채용대상 삭제 시작; 2018. 12. 30. 신동철 -->
	<delete id="delete_fap_jobfair_divide_rc" parameterType="int">
		delete
		from
			fap_jobfair_divide_rc_tb		
		where 
			fap_jobfair_divide_rc_seq = #{fap_jobfair_divide_rc_seq}
	</delete>
	<!-- 잡페어 세부채용대상 삭제 종료-->

	<!-- FAP 회원 정보 가져오기 시작; 2019. 3. 4. 정병준 -->
	<select id="select_user_list" parameterType="hashmap" resultType="User">
		select * 
		from (
			select (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					user_id
					, user_pw
					, user_nm
					, user_phone
					, user_email
					, user_birth
					, user_sex
					, user_flag
					, user_state
					, user_ins_id
					, user_ins_dt
					, user_udt_id
					, user_udt_dt
				from
					com_user_tb
				where
					user_state = 'A0200'
				<if test="searchKey!='' and searchKey!=null ">
				   <if test="searchKey=='searchNm'">
						and
							user_nm like concat('%',#{searchValue},'%')
					</if>
						<if test="searchKey=='searchId'">
						and
							user_id  like concat('%',#{searchValue},'%')
					</if>
			    </if>
			) A, (select @ROWNUM := 0) B 
            <if test="orderType == ''">
            	order by A.user_ins_dt desc
            </if>
            <!-- 회원 관리의 리스트 항목에 아이디 , 이름 정렬 기준 추가_이재준 -->
            <if test="orderType == 'user_id'">
				<if test="orderValue == 'desc'">
					order by A.user_id desc
				</if>
				<if test="orderValue == 'asc'">
					order by A.user_id asc
				</if>
			</if>
			<if test="orderType == 'user_nm'">
				<if test="orderValue == 'desc'">
					order by A.user_nm desc
				</if>
				<if test="orderValue == 'asc'">
					order by A.user_nm asc
				</if>
			</if>
			<if test="orderType == 'user_birth'">
				<if test="orderValue == 'desc'">
					order by A.user_birth desc
				</if>
				<if test="orderValue == 'asc'">
					order by A.user_birth asc
				</if>
			</if>
			<if test="orderType == 'user_sex'">
				<if test="orderValue == 'desc'">
					order by A.user_sex desc
				</if>
				<if test="orderValue == 'asc'">
					order by A.user_sex asc
				</if>
			</if>
		) C
		where rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>
	<!-- FAP 회원 정보 가져오기 종료 -->
	
	<!-- FAP 회원 정보 개수 가져오기 시작; 2019. 3. 4. 정병준 -->
	<select id="select_user_list_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			com_user_tb
		where
			user_state = 'A0200'
		<if test="searchKey!='' and searchKey!=null ">
			   <if test="searchKey=='searchNm'">
				and
					user_nm like concat('%',#{searchValue},'%')
				</if>
					<if test="searchKey=='searchId'">
				and
					user_id  like concat('%',#{searchValue},'%')
				</if>
		 </if>
	</select>
	<!-- FAP 회원 정보 개수 가져오기 종료 -->
	
	<!-- FAP 회사 정보 가져오기 시작; 2019. 1. 2. 김준영 > 2019. 08. 25. 김경아-->
	<select id="select_company_list" parameterType="hashmap" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, DATE_FORMAT(fap_comp_est_dt, '%Y-%m-%d') as fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where 
			1=1 
		<if test="searchJaNm != null  ">
		 	and fap_comp_ja_nm like concat('%',#{searchJaNm},'%')
	 	</if>
	 	<if test="searchEnNm != null  ">
		 	and fap_comp_en_nm like concat('%',#{searchEnNm},'%')
	 	</if>
	 	<if test="orderType==null ">
			order by fap_comp_udt_dt desc
		</if>
		<if test="orderType!=null and orderType.equals('fap_comp_ja_nm') ">
				 <if test="orderValue.equals('desc') ">
						order by fap_comp_ja_nm desc
				 </if>
				 <if test="orderValue.equals('asc') ">
						order by fap_comp_ja_nm asc
				 </if>
		 </if>
		<if test="orderType!=null and orderType.equals('fap_comp_en_nm') ">
		       <if test="orderValue.equals('desc') ">
					order by fap_comp_en_nm desc
				</if>
				<if test="orderValue.equals('asc') ">
					order by fap_comp_en_nm asc
				</if>
		</if>		
	</select>
	<!-- FAP 회사 정보 가져오기 종료 -->
	
	<!-- FAP 관리자 기업 채용공고 리스트 가져오기 시작; 2018. 01. 02. 남유송-->
	<select id="select_jobfair_job_ad" resultType="hashmap" parameterType="hashmap">
		select 
			ad.fap_job_ad_seq as fap_job_ad_seq
			,ad.fap_job_ad_title as fap_job_ad_title
			,ad.fap_job_ad_stock as fap_job_ad_stock
			,ad.fap_job_ad_3years_avg_sales as fap_job_ad_3years_avg_sales
			,ad.fap_job_ad_employee_num as fap_job_ad_employee_num
			,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
			,ad.fap_job_ad_state as fap_job_ad_state
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
		    ,ad.fap_job_ad_rank as fap_job_ad_rank
            ,comp.fap_comp_en_nm as fap_comp_en_nm
            ,comp.fap_comp_ja_nm as fap_comp_ja_nm
		from
			fap_job_ad_tb ad
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_jobfair_divide_tb divide
            on ad.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
            and ad.fap_jobfair_seq = divide.fap_jobfair_seq
		where
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		<if test="sort_info != null and sort_info.equals('asc')">
		order by 
			fap_job_ad_groupcode asc
		</if>
		<if test="sort_info != null and sort_info.equals('desc')">
		order by 
			fap_job_ad_groupcode desc
		</if>
	</select>
	<!-- FAP 관리자 기업 채용공고 리스트 가져오기 종료; 2018. 01. 02. 남유송-->
	
	<!-- FAP 채용공고별 지원자 리스트 가져오기 시작; 2019. 01. 03. 남유송-->
	<select id="select_applicant_list" resultType="hashmap" parameterType="int">
		select  
			fap_job_apply_info.user_id as user_id
			,fap_job_apply_info.fap_resume_seq as fap_resume_seq
			,fap_resume_name.fap_resume_nm as fap_resume_nm
		from 
			fap_job_apply_info_tb as fap_job_apply_info
		inner join
			fap_resume_tb as fap_resume
		on 
			fap_job_apply_info.fap_resume_seq = fap_resume.fap_resume_seq
		    and
		    fap_job_apply_info.user_id = fap_resume.user_id
		inner join 
			fap_resume_name_tb as fap_resume_name
		on 
			fap_job_apply_info.fap_resume_seq = fap_resume_name.fap_resume_seq
		    and
		    fap_resume.fap_resume_seq = fap_resume_name.fap_resume_seq
		where
			fap_job_apply_info.fap_job_ad_seq = #{fap_job_ad_seq}
		    and
			fap_resume_name.fap_resume_lang_gb = 'B3100'
	</select>
	<!-- FAP 채용공고별 지원자 리스트 가져오기 종료 -->
	
	<!-- FAP 회원 정보 가져오기 시작; 2019. 1. 3. 김준영 -->
	<select id="select_personal_user" resultType="hashmap" parameterType="String">
		select
			com_user.user_id as user_id
			, com_user.user_pw as user_pw
			, com_user.user_nm as user_nm
			, com_user.user_phone as user_phone
			, com_user.user_email as user_email
			, com_user.user_birth as user_birth
			, com_user.user_sex as user_sex
			, com_user.user_flag as user_flag
			, com_user.user_state as user_state
			, com_user.user_ins_id as user_ins_id
			, com_user.user_ins_dt as user_ins_dt
			, com_user.user_udt_id as user_udt_id
			, com_user.user_udt_dt as user_udt_dt
			, personal_user.fap_personal_user_seq as fap_personal_user_seq
			, personal_user.fap_personal_user_edu_level as fap_personal_user_edu_level
			, personal_user.fap_personal_user_edu_ct_nm as fap_personal_user_edu_ct_nm
			, personal_user.fap_personal_user_ins_id as fap_personal_user_ins_id
			, personal_user.fap_personal_user_ins_dt as fap_personal_user_ins_dt
			, personal_user.fap_personal_user_udt_id as fap_personal_user_udt_id
			, personal_user.fap_personal_user_udt_dt as fap_personal_user_udt_dt
		from
			com_user_tb as com_user
			left join fap_personal_user_tb as personal_user 
				on com_user.user_id = personal_user.user_id
		where
			com_user.user_id = #{user_id}
	</select>
	<!-- FAP 회원 정보 가져오기 종료 -->
	
	<!-- FAP 일반 회원의 학교 정보 가져오기 시작; 2019. 1. 3. 김준영 -->
	<select id="select_personal_school" parameterType="hashmap" resultType="hashmap">
		select
			<if test="fap_personal_user_edu_level == 'B3300'">
				personal_highschool.fap_personal_hs_seq as fap_personal_hs_seq
				, personal_highschool.fap_personal_hs_nm as fap_personal_hs_nm
				, personal_highschool.fap_personal_hs_field as fap_personal_hs_field
				, personal_highschool.fap_personal_hs_ins_id as fap_personal_hs_ins_id
				, personal_highschool.fap_personal_hs_ins_dt as fap_personal_hs_ins_dt
				, personal_highschool.fap_personal_hs_udt_id as fap_personal_hs_udt_id
				, personal_highschool.fap_personal_hs_udt_dt as fap_personal_hs_udt_dt
			</if>
			<if test="fap_personal_user_edu_level == 'B3301' 
						|| fap_personal_user_edu_level == 'B3302'
						|| fap_personal_user_edu_level == 'B3304'
						|| fap_personal_user_edu_level == 'B3305'">
				personal_university.fap_personal_univ_seq as fap_personal_univ_seq
				, personal_university.fap_personal_univ_nm as fap_personal_univ_nm
				, personal_university.fap_personal_univ_abroad_ck as fap_personal_univ_abroad_ck
				, personal_university.fap_personal_univ_coll as fap_personal_univ_coll
				, personal_university.fap_personal_univ_major as fap_personal_univ_major
				, personal_university.fap_personal_univ_ins_id as fap_personal_univ_ins_id
				, personal_university.fap_personal_univ_ins_dt as fap_personal_univ_ins_dt
				, personal_university.fap_personal_univ_udt_id as fap_personal_univ_udt_id
				, personal_university.fap_personal_univ_udt_dt as fap_personal_univ_udt_dt
			</if>
			<if test="fap_personal_user_edu_level == 'B3303'
						|| fap_personal_user_edu_level == 'B3306'">
				personal_university.fap_personal_univ_seq as fap_personal_univ_seq
				, personal_university.fap_personal_univ_nm as fap_personal_univ_nm
				, personal_university.fap_personal_univ_abroad_ck as fap_personal_univ_abroad_ck
				, personal_university.fap_personal_univ_coll as fap_personal_univ_coll
				, personal_university.fap_personal_univ_major as fap_personal_univ_major
				, personal_university.fap_personal_univ_ins_id as fap_personal_univ_ins_id
				, personal_university.fap_personal_univ_ins_dt as fap_personal_univ_ins_dt
				, personal_university.fap_personal_univ_udt_id as fap_personal_univ_udt_id
				, personal_university.fap_personal_univ_udt_dt as fap_personal_univ_udt_dt
				, personal_graduate.fap_personal_grad_seq as fap_personal_grad_seq
				, personal_graduate.fap_personal_grad_nm as fap_personal_grad_nm
				, personal_graduate.fap_personal_grad_ck as fap_personal_grad_ck
				, personal_graduate.fap_personal_grad_major as fap_personal_grad_major
				, personal_graduate.fap_personal_grad_ins_id as fap_personal_grad_ins_id
				, personal_graduate.fap_personal_grad_ins_dt as fap_personal_grad_ins_dt
				, personal_graduate.fap_personal_grad_udt_id as fap_personal_grad_udt_id
				, personal_graduate.fap_personal_grad_udt_dt as fap_personal_grad_udt_dt
			</if>
		from
			<if test="fap_personal_user_edu_level == 'B3300'">
				fap_personal_highschool_tb as personal_highschool
			</if>
			<if test="fap_personal_user_edu_level == 'B3301' 
						|| fap_personal_user_edu_level == 'B3302'
						|| fap_personal_user_edu_level == 'B3304'
						|| fap_personal_user_edu_level == 'B3305'">
				fap_personal_university_tb as personal_university
			</if>
			<if test="fap_personal_user_edu_level == 'B3303'
						|| fap_personal_user_edu_level == 'B3306'">
				fap_personal_university_tb as personal_university
				, fap_personal_graduate_tb as personal_graduate
			</if>
		where
			<if test="fap_personal_user_edu_level == 'B3300'">
				#{fap_personal_user_seq} = personal_highschool.fap_personal_user_seq
			</if>
			<if test="fap_personal_user_edu_level == 'B3301' 
						|| fap_personal_user_edu_level == 'B3302'
						|| fap_personal_user_edu_level == 'B3304'
						|| fap_personal_user_edu_level == 'B3305'">
				#{fap_personal_user_seq} = personal_university.fap_personal_user_seq
			</if>
			<if test="fap_personal_user_edu_level == 'B3303'
						|| fap_personal_user_edu_level == 'B3306'">
				#{fap_personal_user_seq} = personal_university.fap_personal_user_seq
				and personal_university.fap_personal_univ_seq = personal_graduate.fap_personal_univ_seq
			</if>
	</select>
	<!-- FAP 일반 회원의 학교 정보 가져오기 종료 -->
	
	<!-- 개인회원 고등학교 등록 시작; 2019. 1. 3. 김준영 -->
	<insert id="insert_personal_hs" parameterType="FapPersonalHighschool">
		insert into
			fap_personal_highschool_tb
			(
				fap_personal_user_seq
				, fap_personal_hs_nm
				, fap_personal_hs_field
				, fap_personal_hs_ins_id
				, fap_personal_hs_ins_dt
				, fap_personal_hs_udt_id
				, fap_personal_hs_udt_dt
			) values (
				#{fap_personal_user_seq}
				, #{fap_personal_hs_nm}
				, #{fap_personal_hs_field}
				, #{fap_personal_hs_ins_id}
				, #{fap_personal_hs_ins_dt}
				, #{fap_personal_hs_udt_id}
				, #{fap_personal_hs_udt_dt}
			)
	</insert>
	<!-- 개인회원 고등학교 등록 종료 -->
	
	<!-- 개인회원 대학교 등록 시작; 2019. 1. 3. 김준영 -->
	<insert id="insert_personal_univ" parameterType="FapPersonalUniversity" useGeneratedKeys="true" keyProperty="fap_personal_univ_seq">
		insert into
			fap_personal_university_tb
			(
				fap_personal_user_seq
				, fap_personal_univ_nm
				, fap_personal_univ_abroad_ck
				, fap_personal_univ_coll
				, fap_personal_univ_major
				, fap_personal_univ_ins_id
				, fap_personal_univ_ins_dt
				, fap_personal_univ_udt_id
				, fap_personal_univ_udt_dt
			) values (
				#{fap_personal_user_seq}
				, #{fap_personal_univ_nm}
				, #{fap_personal_univ_abroad_ck}
				, #{fap_personal_univ_coll}
				, #{fap_personal_univ_major}
				, #{fap_personal_univ_ins_id}
				, #{fap_personal_univ_ins_dt}
				, #{fap_personal_univ_udt_id}
				, #{fap_personal_univ_udt_dt}
			)
	</insert>
	<!-- 개인회원 대학교 등록 종료 -->
	
	<!-- 개인회원 대학원 등록 시작; 2019. 1. 3. 김준영 -->
	<insert id="insert_personal_grad" parameterType="FapPersonalGraduate">
		insert into
			fap_personal_graduate_tb
			(
				fap_personal_univ_seq
				, fap_personal_grad_nm
				, fap_personal_grad_ck
				, fap_personal_grad_major
				, fap_personal_grad_ins_id
				, fap_personal_grad_ins_dt
				, fap_personal_grad_udt_id
				, fap_personal_grad_udt_dt
			) values (
				#{fap_personal_univ_seq}
				, #{fap_personal_grad_nm}
				, #{fap_personal_grad_ck}
				, #{fap_personal_grad_major}
				, #{fap_personal_grad_ins_id}
				, #{fap_personal_grad_ins_dt}
				, #{fap_personal_grad_udt_id}
				, #{fap_personal_grad_udt_dt}
			)
	</insert>
	<!-- 개인회원 대학원 등록 종료 -->
	
	<!-- FAP 공통 회원 정보 수정 시작; 2019. 1. 3. 김준영 -->
	<update id="update_com_user" parameterType="User">
		update
			com_user_tb
		set
			user_nm = #{user_nm}
			<if test="user_pw != ''">
				, user_pw = #{user_pw}			
			</if>
			, user_phone = #{user_phone}
			, user_email = #{user_email}
			, user_birth = #{user_birth}
			, user_sex = #{user_sex}
			, user_flag = #{user_flag}
			, user_state = #{user_state}
			, user_udt_id = #{user_id}
			, user_udt_dt = #{user_udt_dt}
		where
			user_id = #{user_id}
	</update>
	<!-- FAP 공통 회원 정보 수정 종료 -->
	
	<!-- FAP 개인 회원 정보 수정 시작; 2019. 1. 3. 김준영 -->
	<update id="update_personal_user" parameterType="FapPersonalUser">
		update
			fap_personal_user_tb
		set
			fap_personal_user_edu_level = #{fap_personal_user_edu_level}
			, fap_personal_user_edu_ct_nm = #{fap_personal_user_edu_ct_nm}
			, fap_personal_user_udt_id = #{fap_personal_user_udt_id}
			, fap_personal_user_udt_dt = #{fap_personal_user_udt_dt}
		where
			fap_personal_user_seq = #{fap_personal_user_seq}
	</update>
	<!-- FAP 개인 회원 정보 수정 종료 -->

	<!-- 개인 회원 고등학교 정보 수정 시작; 2019. 1. 3. 김준영 -->
	<update id="update_user_hs" parameterType="FapPersonalHighschool">
		update
			fap_personal_highschool_tb
		set
			fap_personal_hs_nm = #{fap_personal_hs_nm}
			, fap_personal_hs_field = #{fap_personal_hs_field}
			, fap_personal_hs_udt_id = #{fap_personal_hs_udt_id}
			, fap_personal_hs_udt_dt = #{fap_personal_hs_udt_dt}
		where
			fap_personal_hs_seq = #{fap_personal_hs_seq}
	</update>
	<!-- 개인 회원 고등학교 정보 수정 종료-->
	
	<!-- 개인 회원 대학교 정보 수정 시작; 2019. 1. 3. 김준영 -->
	<update id="update_user_univ" parameterType="FapPersonalUniversity">
		update
			fap_personal_university_tb
		set
			fap_personal_univ_nm = #{fap_personal_univ_nm}
			, fap_personal_univ_abroad_ck = #{fap_personal_univ_abroad_ck}
			, fap_personal_univ_coll = #{fap_personal_univ_coll}
			, fap_personal_univ_major = #{fap_personal_univ_major}
			, fap_personal_univ_udt_id = #{fap_personal_univ_udt_id}
			, fap_personal_univ_udt_dt = #{fap_personal_univ_udt_dt}
		where
			fap_personal_univ_seq = #{fap_personal_univ_seq}
	</update>
	<!-- 개인 회원 대학교 정보 수정 종료 -->
	
	<!-- 개인 회원 대학원 정보 수정 시작; 2019. 1. 3. 김준영 -->
	<update id="update_user_grad" parameterType="FapPersonalGraduate">
		update
			fap_personal_graduate_tb
		 set
			fap_personal_grad_nm = #{fap_personal_grad_nm}
			, fap_personal_grad_ck = #{fap_personal_grad_ck}
			, fap_personal_grad_major = #{fap_personal_grad_major}
			, fap_personal_grad_udt_id = #{fap_personal_grad_udt_id}
			, fap_personal_grad_udt_dt = #{fap_personal_grad_udt_dt}
		where
			fap_personal_grad_seq = #{fap_personal_grad_seq}
	</update>
	<!-- 개인 회원 대학원 정보 수정 종료 -->
	
	<!-- 개인 회원 고등학교 정보 삭제 시작; 2019. 1. 3. 김준영 -->
	<delete id="delete_user_hs" parameterType="int">
		delete
		from
			fap_personal_highschool_tb
		where
			fap_personal_user_seq = #{fap_personal_user_seq}
	</delete>
	<!-- 개인 회원 고등학교 정보 삭제 종료 -->
	
	<!-- 개인 회원 대학교 정보 삭제 시작; 2019. 1. 3. 김준영 -->
	<delete id="delete_user_univ" parameterType="int">
		delete
		from
			fap_personal_university_tb
		where
			fap_personal_user_seq = #{fap_personal_user_seq}
	</delete>
	<!-- 개인 회원 대학교 정보 삭제 종료 -->
	
	<!-- 개인 회원 대학원 정보 삭제 시작; 2019. 1. 3. 김준영 -->
	<delete id="delete_user_grad" parameterType="int">
		delete
		from
			fap_personal_graduate_tb
		where
			fap_personal_grad_seq = #{fap_personal_grad_seq}
	</delete>
	<!-- 개인 회원 대학원 정보 삭제 종료 -->
	
	<!-- FAP 관리자 회원 탈퇴 시작; 2019. 1. 3. 김준영 -->
	<update id="delete_user_info" parameterType="hashmap">
        update
           	com_user_tb
        set
            user_id = #{user_delete_id}
            , user_pw = ''
            , user_phone = ''
            , user_email = ''
            , user_birth = now()
            , user_sex = ''
            , user_state = #{user_state}
            , user_ins_id = #{user_delete_id}
            , user_ins_dt = now()
            , user_udt_id = #{user_delete_id}
            , user_udt_dt = now()
        where
            user_id = #{user_id}
    </update>
	<!-- FAP 관리자 회원 탈퇴 종료 -->
	
	<!-- FAP 관리자 회원 정보 가져오기 시작; 2019. 1. 3. 김준영 -->
	<select id="select_user" parameterType="String" resultType="User">
		select
			user_id
			, user_pw
			, user_nm
			, user_phone
			, user_email
			, user_birth
			, user_sex
			, user_flag
			, user_state
			, user_ins_id
			, user_ins_dt
			, user_udt_id
			, user_udt_dt
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- FAP 관리자 회원 정보 가져오기 종료 -->
	
	<!-- FAP 공통 회원 정보 수정 시작; 2019. 1. 3. 김준영 -->
	<update id="update_user" parameterType="User">
		update
			com_user_tb
		set
			user_nm = #{user_nm}
			<if test="user_pw != ''">
				, user_pw = #{user_pw}			
			</if>
			, user_phone = #{user_phone}
			, user_email = #{user_email}
			, user_birth = #{user_birth}
			, user_sex = #{user_sex}
			, user_flag = #{user_flag}
			, user_state = #{user_state}
			, user_udt_id = #{user_udt_id}
			, user_udt_dt = #{user_udt_dt}
		where
			user_id = #{user_id}
	</update>
	<!-- FAP 공통 회원 정보 수정 종료 -->
	
	<!-- FAP 기업 정보 가져오기 시작; 2018. 12. 13. 김준영 -->
	<select id="select_company" resultType="SocietyFapCompanyUser" parameterType="String">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, DATE_FORMAT(fap_comp_est_dt, '%Y-%m-%d') as fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id = #{fap_comp_id}
	</select>
	<!-- FAP 기업 정보 가져오기 종료 -->
	
	<!-- 취업지원자 채용공고 지원가능시간 등록 시작; 2019.1.3. 신동철 -->
	<insert id="insert_jobfair_applicable_time" parameterType="java.util.ArrayList">
		insert into
			fap_jobfair_applicable_time_tb
			(
                fap_jobfair_divide_seq
                , fap_jobfair_applicable_time_first
                , fap_jobfair_applicable_time_st
                , fap_jobfair_applicable_time_et
                , fap_jobfair_applicable_time_deadline_gb
                , fap_jobfair_applicable_time_ins_id
                , fap_jobfair_applicable_time_ins_dt
                , fap_jobfair_applicable_time_udt_id
                , fap_jobfair_applicable_time_udt_dt
			)values
			<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_jobfair_divide_seq}
                , #{element.fap_jobfair_applicable_time_first}
                , #{element.fap_jobfair_applicable_time_st}
                , #{element.fap_jobfair_applicable_time_et}
                , 'D0400'
                , #{element.fap_jobfair_applicable_time_ins_id}                
                , now()
                , #{element.fap_jobfair_applicable_time_udt_id}
                , now()
			)
			</foreach>
	</insert>
	<!-- 취업지원자 채용공고 지원가능시간 등록 종료 -->
	
	<!-- FAP 기업 정보 수정 시작; 2019. 1. 3. 김준영 -->
	<update id="update_company" parameterType="SocietyFapCompanyUser">
		update
			fap_company_user_tb
		set
			fap_comp_en_nm = #{fap_comp_en_nm}
			, fap_comp_ja_nm = #{fap_comp_ja_nm}
			, fap_comp_business_num = #{fap_comp_business_num}
			, fap_comp_rep = #{fap_comp_rep}
			, fap_comp_major_bussiness = #{fap_comp_major_bussiness}
			, fap_comp_homepage = #{fap_comp_homepage}
			, fap_comp_postcode = #{fap_comp_postcode}
			, fap_comp_address = #{fap_comp_address}
			, fap_comp_address_detail = #{fap_comp_address_detail}
			, fap_comp_est_dt = #{fap_comp_est_dt}
			, fap_comp_stock = #{fap_comp_stock}
			, fap_comp_3years_avg_sales = #{fap_comp_3years_avg_sales}
			, fap_comp_employee_num = #{fap_comp_employee_num}
			, fap_comp_scit_num = #{fap_comp_scit_num}
			, fap_comp_korean_num = #{fap_comp_korean_num}
			, fap_comp_foreigner_num = #{fap_comp_foreigner_num}
			, fap_comp_ins_id = #{fap_comp_ins_id}
			, fap_comp_ins_dt = #{fap_comp_ins_dt}
			, fap_comp_udt_id = #{fap_comp_udt_id}
			, fap_comp_udt_dt = #{fap_comp_udt_dt}
			<if test="fap_comp_log_saved != null">
				, fap_comp_log_saved = #{fap_comp_log_saved}
			</if>
			<if test="fap_comp_log_origin != null">
				, fap_comp_log_origin = #{fap_comp_log_origin}
			</if>
			, fap_comp_log_using = #{fap_comp_log_using}
		where
			fap_comp_id = #{fap_comp_id}
	</update>
	<!-- FAP 기업 정보 수정 종료 -->
	
	<!-- FAP 이메일 등록 시작; 2019. 1. 15. 전상수 -->
	<insert id="insert_email" parameterType="hashmap">
		insert into
			fap_admin_mail
		    (
		    fap_mail_uid
		    ,fap_mail_domain
		    ,fap_mail_subject
		    ,fap_mail_from
		    ,fap_mail_content
		    ,fap_mail_receivedate
		    ,fap_mail_deleteyn
		    ,fap_mail_completeyn
		    ,fap_mail_ins_dt
		    )
		values
			(
		    #{fap_mail_uid}
		    ,#{fap_mail_domain}
		    ,#{fap_mail_subject}
		    ,#{fap_mail_from}
		    ,#{fap_mail_content}
		    ,STR_TO_DATE(#{fap_mail_receivedate},'%Y-%m-%d %H:%i')
		    ,'N'
		    ,'N'
		    ,now()
		    )
	</insert>
	<!-- FAP 이메일 등록 종료; 2019. 1. 15. 전상수 -->
	
	<!-- FAP 이메일 호출 시작; 2019. 1. 15. 전상수 -->
	<select id="select_email" resultType="hashmap">
		select
		    fap_mail_uid
		    ,fap_mail_domain
		    ,fap_mail_subject
		    ,fap_mail_from
		    ,fap_mail_content
		    ,fap_mail_receivedate
		    ,fap_mail_deleteyn
		    ,fap_mail_completeyn
		    ,fap_mail_ins_dt
		from
		    fap_admin_mail
		where
		 	fap_mail_deleteyn='N'
	</select>
	<!-- FAP 이메일 호출 종료; 2019. 1. 15. 전상수 -->
	
	<!-- FAP 이메일 uid max 호출 시작; 2019. 1. 15. 전상수 -->
	<select id="select_email_max_uid" resultType="hashmap">
		select
		     max(CONVERT(fap_mail_uid,UNSIGNED INTEGER)) fap_mail_uid
		from
		    fap_admin_mail
	</select>
	<!-- FAP 이메일 uid max  종료; 2019. 1. 15. 전상수 -->
	
	<!-- FAP 담당자 - 기업 연결 리스트 불러오기 시작; 2019. 1. 4. 김준영 -->
	<select id="select_comp_user_connect" resultType="hashmap">
		<!-- select
			com_user.user_pw as user_pw
			, com_user.user_nm as user_nm
			, com_user.user_phone as user_phone
			, com_user.user_email as user_email
			, com_user.user_birth as user_birth
			, com_user.user_sex as user_sex
			, com_user.user_flag as user_flag
			, com_user.user_state as user_state
			, com_user.user_ins_id as user_ins_id
			, com_user.user_ins_dt as user_ins_dt
			, com_user.user_udt_id as user_udt_id
			, com_user.user_udt_dt as user_udt_dt
			, comp_user.fap_comp_id as fap_comp_id
			, comp_user.fap_comp_en_nm as fap_comp_en_nm
			, comp_user.fap_comp_ja_nm as fap_comp_ja_nm
			, comp_user.fap_comp_business_num as fap_comp_business_num
			, comp_user.fap_comp_rep as fap_comp_rep
			, comp_user.fap_comp_major_bussiness as fap_comp_major_bussiness
			, comp_user.fap_comp_homepage as fap_comp_homepage
			, comp_user.fap_comp_postcode as fap_comp_postcode
			, comp_user.fap_comp_address as fap_comp_address
			, comp_user.fap_comp_address_detail as fap_comp_address_detail
			, comp_user.fap_comp_est_dt
			, comp_user.fap_comp_stock as fap_comp_stock
			, comp_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
			, comp_user.fap_comp_employee_num as fap_comp_employee_num
			, comp_user.fap_comp_scit_num as fap_comp_scit_num
			, comp_user.fap_comp_korean_num as fap_comp_korean_num
			, comp_user.fap_comp_foreigner_num as fap_comp_foreigner_num
			, comp_user.fap_comp_ins_id as fap_comp_ins_id
			, comp_user.fap_comp_ins_dt as fap_comp_ins_dt
			, comp_user.fap_comp_udt_id as fap_comp_udt_id
			, comp_user.fap_comp_udt_dt as fap_comp_udt_dt
			, comp_user.fap_comp_log_saved as fap_comp_log_saved
			, comp_user.fap_comp_log_origin as fap_comp_log_origin
			, comp_user.fap_comp_log_using as fap_comp_log_using
			, comp_user_connect.fap_comp_user_connect_seq as fap_comp_user_connect_seq
			, comp_user_connect.user_id as user_id
			, comp_user_connect.fap_comp_user_connect_ck as fap_comp_user_connect_ck
		from
			com_user_tb as com_user
			, fap_company_user_tb as comp_user
		    , fap_comp_user_connect_tb as comp_user_connect
		where
			comp_user_connect.user_id = com_user.user_id
			and comp_user.fap_comp_id = comp_user_connect.fap_comp_id -->
		select
        	com_user.user_id as user_id
        	, com_user.user_nm as user_nm
        	, com_user.user_phone as user_phone
        	, com_user.user_email as user_email
        	, com_user.user_sex as user_sex
        	, com_user.user_flag as user_flag
        	, com_user.user_state as user_state
	        , com_user.user_ins_id as user_ins_id
	        , com_user.user_ins_dt as user_ins_dt
	        , com_user.user_udt_id as user_udt_id
	        , com_user.user_udt_dt as user_udt_dt
	        , comp_user.fap_comp_id as fap_comp_id
	        , comp_user.fap_comp_en_nm as fap_comp_en_nm
	        , comp_user.fap_comp_ja_nm as fap_comp_ja_nm
	        , comp_user.fap_comp_business_num as fap_comp_business_num
	        , comp_user.fap_comp_rep as fap_comp_rep
	        , comp_user.fap_comp_major_bussiness as fap_comp_major_bussiness
	        , comp_user.fap_comp_homepage as fap_comp_homepage
	        , comp_user.fap_comp_postcode as fap_comp_postcode
	        , comp_user.fap_comp_address as fap_comp_address
	        , comp_user.fap_comp_address_detail as fap_comp_address_detail
	        , comp_user.fap_comp_est_dt as fap_comp_est_dt
	        , comp_user.fap_comp_stock as fap_comp_stock
	        , comp_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
	        , comp_user.fap_comp_employee_num as fap_comp_employee_num
	        , comp_user.fap_comp_scit_num as fap_comp_scit_num
	        , comp_user.fap_comp_korean_num as fap_comp_korean_num
	        , comp_user.fap_comp_foreigner_num as fap_comp_foreigner_num
	        , comp_user.fap_comp_ins_id as fap_comp_ins_id
	        , comp_user.fap_comp_ins_dt as fap_comp_ins_dt
	        , comp_user.fap_comp_udt_id as fap_comp_udt_id
	        , comp_user.fap_comp_udt_dt as fap_comp_udt_dt
	        , comp_user.fap_comp_log_saved as fap_comp_log_saved
	        , comp_user.fap_comp_log_origin as fap_comp_log_origin
	        , comp_user.fap_comp_log_using as fap_comp_log_using
	        , comp_user_connect.fap_comp_user_connect_seq as fap_comp_user_connect_seq
	        , comp_user_connect.fap_comp_user_connect_ck as fap_comp_user_connect_ck
		from
         	com_user_tb as com_user
      	natural join
         	fap_company_user_tb as comp_user
      	natural join
         	fap_comp_user_connect_tb as comp_user_connect
	</select>
	<!-- FAP 담당자 - 기업 연결 리스트 불러오기 종료 -->
	
	<!-- FAP 담당자 - 기업 연결 승인 상태 변경 시작; 2019. 1. 4. 김준영 -->
	<update id="connect_update" parameterType="hashmap">
		<foreach item="seq_list" collection="seq_list" separator=";">
			update
				fap_comp_user_connect_tb
			set
				fap_comp_user_connect_ck = #{fap_comp_user_connect_ck}
			where
				fap_comp_user_connect_seq = #{seq_list}
		</foreach>
	</update>
	<!-- FAP 담당자 - 기업 연결 승인 상태 변경 종료 -->
	
	<!-- FAP 담당자 - 기업 연결 승인 상태 전부 변경 시작; 2019. 1. 4. 김준영 -->
	<update id="connect_all_update" parameterType="hashmap">
		update
			fap_comp_user_connect_tb
		set
			fap_comp_user_connect_ck = #{update_ck}
		where
			fap_comp_user_connect_ck = #{origin_ck}
	</update>	
	<!-- FAP 담당자 - 기업 연결 승인 상태 전부 변경 종료 -->
	
	<!-- FAP 담당자 - 기업 연결 끊기 시작; 2019. 1. 7. 김준영 -->
	<delete id="connect_delete" parameterType="java.util.ArrayList">
		<foreach item="seq_list" collection="list" separator=";">
			delete
			from
				fap_comp_user_connect_tb
			where
				fap_comp_user_connect_seq = #{seq_list}
		</foreach>
	</delete>
	<!-- FAP 담당자 - 기업 연결 끊기 종료 -->
	
	<!-- FAP 기업과 연결 되지 않은 유저(기업, 에이전기) 가져오기 시작; 2019. 1. 7. 김준영 -->
	<select id="select_unconnect_user_list" resultType="User">
		select
			user_id
			, user_pw
			, user_nm
			, user_phone
			, user_email
			, user_birth
			, user_sex
			, user_flag
			, user_state
			, user_ins_id
			, user_ins_dt
			, user_udt_id
			, user_udt_dt
		from
			com_user_tb
		where
			user_id not in (select
								user_id
					    	from
								fap_comp_user_connect_tb
					    	)
			and (user_flag = 'A0103' 
				 or user_flag = 'A0104')
	</select>
	<!-- FAP 기업과 연결 되지 않은 유저(기업, 에이전시) 가져오기 종료 -->	

	<!-- FAP 담당자와 연결 할 기업 리스트 가져오기 시작; 2019. 1. 7. 김준영 -->
	<select id="select_connect_company" resultType="hashmap">
		select
			company_user.fap_comp_id as fap_comp_id
			, company_user.fap_comp_en_nm as fap_comp_en_nm
			, company_user.fap_comp_ja_nm as fap_comp_ja_nm
			, company_user.fap_comp_business_num as fap_comp_business_num
			, company_user.fap_comp_rep as fap_comp_rep
			, company_user.fap_comp_major_bussiness as fap_comp_major_bussiness
			, company_user.fap_comp_homepage as fap_comp_homepage
			, company_user.fap_comp_postcode as fap_comp_postcode
			, company_user.fap_comp_address as fap_comp_address
			, company_user.fap_comp_address_detail as fap_comp_address_detail
			, DATE_FORMAT(company_user.fap_comp_est_dt, '%Y-%m-%d') as fap_comp_est_dt
			, company_user.fap_comp_stock as fap_comp_stock
			, company_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
			, company_user.fap_comp_employee_num as fap_comp_employee_num
			, company_user.fap_comp_scit_num as fap_comp_scit_num
			, company_user.fap_comp_korean_num as fap_comp_korean_num
			, company_user.fap_comp_foreigner_num as fap_comp_foreigner_num
			, company_user.fap_comp_ins_id as fap_comp_ins_id
			, company_user.fap_comp_ins_dt as fap_comp_ins_dt
			, company_user.fap_comp_udt_id as fap_comp_udt_id
			, company_user.fap_comp_udt_dt as fap_comp_udt_dt
			, company_user.fap_comp_log_saved as fap_comp_log_saved
			, company_user.fap_comp_log_origin as fap_comp_log_origin
			, company_user.fap_comp_log_using as fap_comp_log_using
			, com_user.user_flag as user_flag
		from
			fap_company_user_tb as company_user
			, fap_comp_user_connect_tb as comp_user_connect
			, com_user_tb as com_user
		where
			company_user.fap_comp_id = comp_user_connect.fap_comp_id
			and com_user.user_id = comp_user_connect.user_id
			and comp_user_connect.fap_comp_user_connect_ck = 'B3800'
		group by
			fap_comp_id
		order by
			company_user.fap_comp_udt_id desc
	</select>
	<!-- FAP 담당자와 연결 할 기업 리스트 가져오기 종료; 2019. 1. 7. 김준영 -->

	<!-- FAP 취업지원자 채용공고 지원가능시간 정보 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_jobfair_applicable_time" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_jobfair_applicable_time_tb
			set			
		      	fap_jobfair_applicable_time_first = #{element.fap_jobfair_applicable_time_first}
				, fap_jobfair_applicable_time_st = #{element.fap_jobfair_applicable_time_st}
				, fap_jobfair_applicable_time_et = #{element.fap_jobfair_applicable_time_et}
				, fap_jobfair_applicable_time_udt_id = #{element.fap_jobfair_applicable_time_udt_id}
				, fap_jobfair_applicable_time_udt_dt = now()
			where			
				fap_jobfair_divide_seq = #{element.fap_jobfair_divide_seq}
				and fap_jobfair_applicable_time_seq = #{element.fap_jobfair_applicable_time_seq}
		</foreach>
	</update>
	<!-- FAP 취업지원자 채용공고 지원가능시간 정보 수정 종료 -->
	
	<!-- FAP 기업 - 담장자 연결 시작; 2019. 1. 7. 김준영 -->
	<insert id="insert_comp_user_connect" parameterType="hashmap">
		<foreach item="user_id_list" collection="user_id_list" separator=";">
			insert into
				fap_comp_user_connect_tb
				(
					user_id
					, fap_comp_id
					, fap_comp_user_connect_ck
				) values (
					#{user_id_list}
					, #{fap_comp_id}
					, #{fap_comp_user_connect_ck}
				)
		</foreach>
	</insert>
	<!-- FAP 기업 - 담장자 연결 종료 -->
	
	<!-- FAP 에이전시 - 기업 연결 리스트 가져오기 시작; 2019. 1. 7. 김준영 -->
	<select id="select_ag_comp_connect" resultType="hashmap">
		select
			agency.fap_comp_id as ag_id
			, agency.fap_comp_en_nm as ag_en_nm
			, agency.fap_comp_ja_nm as ag_ja_nm
			, agency.fap_comp_business_num as ag_business_num
			, agency.fap_comp_rep as ag_rep
			, agency.fap_comp_major_bussiness as ag_major_bussiness
			, agency.fap_comp_homepage as ag_homepage
			, agency.fap_comp_postcode as ag_postcode
			, agency.fap_comp_address as ag_address
			, agency.fap_comp_address_detail as ag_address_detail
			, DATE_FORMAT(agency.fap_comp_est_dt, '%Y-%m-%d') as ag_est_dt
			, agency.fap_comp_stock as ag_stock
			, agency.fap_comp_3years_avg_sales as ag_3years_avg_sales
			, agency.fap_comp_employee_num as ag_employee_num
			, agency.fap_comp_scit_num as ag_scit_num
			, agency.fap_comp_korean_num as ag_korean_num
			, agency.fap_comp_foreigner_num as ag_foreigner_num
			, agency.fap_comp_ins_id as ag_ins_id
			, agency.fap_comp_ins_dt as ag_ins_dt
			, agency.fap_comp_udt_id as ag_udt_id
			, agency.fap_comp_udt_dt as ag_udt_dt
			, agency.fap_comp_log_saved as ag_log_saved
			, agency.fap_comp_log_origin as ag_log_origin
			, agency.fap_comp_log_using as ag_log_using
			, company.fap_comp_id as comp_id
			, company.fap_comp_en_nm as comp_en_nm
			, company.fap_comp_ja_nm as comp_ja_nm
			, company.fap_comp_business_num as comp_business_num
			, company.fap_comp_rep as comp_rep
			, company.fap_comp_major_bussiness as comp_major_bussiness
			, company.fap_comp_homepage as comp_homepage
			, company.fap_comp_postcode as comp_postcode
			, company.fap_comp_address as comp_address
			, company.fap_comp_address_detail as comp_address_detail
			, DATE_FORMAT(company.fap_comp_est_dt, '%Y-%m-%d') as comp_est_dt
			, company.fap_comp_stock as comp_stock
			, company.fap_comp_3years_avg_sales as comp_3years_avg_sales
			, company.fap_comp_employee_num as comp_employee_num
			, company.fap_comp_scit_num as comp_scit_num
			, company.fap_comp_korean_num as comp_korean_num
			, company.fap_comp_foreigner_num as comp_foreigner_num
			, company.fap_comp_ins_id as comp_ins_id
			, company.fap_comp_ins_dt as comp_ins_dt
			, company.fap_comp_udt_id as comp_udt_id
			, company.fap_comp_udt_dt as comp_udt_dt
			, company.fap_comp_log_saved as comp_log_saved
			, company.fap_comp_log_origin as comp_log_origin
			, company.fap_comp_log_using as comp_log_using
			, ag_comp_connect.fap_ag_comp_connect_seq as fap_ag_comp_connect_seq
			, ag_comp_connect.fap_ag_comp_connect_ck as fap_ag_comp_connect_ck
		from
			fap_company_user_tb as agency
			, fap_company_user_tb as company
			, fap_ag_comp_connect_tb as ag_comp_connect
		where
			agency.fap_comp_id = ag_comp_connect.fap_ag_id
			and company.fap_comp_id = ag_comp_connect.fap_comp_id
	</select>
	<!-- FAP 에이전시 - 기업 연결 리스트 가져오기 종료 -->
	
	<!-- FAP 에이전시에 연결 되어있지 않은 기업 리스트 가져오기 시작; 2019. 1. 7. 김준영 -->
	<select id="select_unconnect_comp_list" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, DATE_FORMAT(fap_comp_est_dt, '%Y-%m-%d') as fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id not in (select
									fap_comp_id
								from
									fap_ag_comp_connect_tb
								)
			and fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb as comp_user_connect
						   where
						   		user_id in (select
						   						user_id
						   				    from
						   				   		com_user_tb
						   				   	where
						   				   		user_flag = 'A0103'
						   				    )
						   		 )
		order by
			fap_comp_udt_dt desc
	</select>
	<!-- FAP 에이전시에 연결 되어있지 않은 기업 리스트 가져오기 종료 -->

	<!-- FAP 기업에 연결 될 에이전시 리스트 가져오기 시작; 2019. 1. 8. 김준영 -->
	<select id="select_agency_list" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb as comp_user
		where
			fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb as comp_user_connect
						   where
						   		user_id in (select
						   						user_id
						   				    from
						   				   		com_user_tb
						   				   	where
						   				   		user_flag = 'A0104'
						   				   )
						   )
	</select>
	<!-- FAP 기업에 연결 될 에이전시 리스트 가져오기 종료 -->
	
	<!-- FAP 에이전시 - 기업 연결 시작; 2019. 1. 8. 김준영 -->
	<insert id="connect_ag_comp" parameterType="hashmap">
		insert into
			fap_ag_comp_connect_tb
			(
				fap_ag_id
				, fap_comp_id
				, fap_ag_comp_connect_ck
			) values (
				#{agency_id}
				, #{company_id}
				, #{fap_ag_comp_connect_ck}
			)
	</insert>
	<!-- FAP 에이전시 - 기업 연결 종료 -->
	
	<!-- FAP 에이전시 - 기업 연결 끊기 시작; 2019. 1. 8. 김준영 -->
	<delete id="ag_comp_connect_delete" parameterType="java.util.ArrayList">
		<foreach item="seq_list" collection="list" separator=";">
			delete
			from
				fap_ag_comp_connect_tb
			where
				fap_ag_comp_connect_seq = #{seq_list}
		</foreach>
	</delete>
	<!-- FAP 에이전시 - 기업 연결 끊기 종료 -->
	
	<!-- FAP 에이전시 - 기업 승인 상태 변경 시작; 2019. 1. 8. 김준영 -->
	<update id="ag_comp_connect_update" parameterType="hashmap">
		<foreach item="seq_list" collection="seq_list" separator=";">
			update
				fap_ag_comp_connect_tb
			set
				fap_ag_comp_connect_ck = #{fap_ag_comp_connect_ck}
			where
				fap_ag_comp_connect_seq = #{seq_list}
		</foreach>
	</update>
	<!-- FAP 에이전시 - 기업 승인 상태 변경 종료 -->
	
	<!-- FAP 연결 객체가 없어 불명확한 기업 리스트 가져오기 시작; 2019. 1. 8. 김준영 -->
	<select id="select_uncertain_company" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, DATE_FORMAT(fap_comp_est_dt, '%Y-%m-%d') as fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id not in (select
						   			fap_comp_id
						   		from
						   			fap_comp_user_connect_tb
						   		)
	</select>
	<!-- FAP 연결 객체가 없어 불명확한 기업 리스트 가져오기 종료 -->
			
	<!-- 승인된 채용공고  정보 검색 시작; 2019. 1. 10 신동철 -->
	<select id="search_job_ad_info" parameterType="hashmap" resultType="hashmap">
		select			
			ad.fap_job_ad_seq
			, ad.fap_job_ad_title
			, ad.fap_comp_id
			, comp.fap_comp_en_nm
		from
			fap_job_ad_tb ad
			inner join fap_company_user_tb comp
				on comp.fap_comp_id = ad.fap_comp_id
		where
			(ad.fap_job_ad_state = 'C2101'
			or ad.fap_job_ad_state = 'C2102')
			<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0 ">
				and ad.fap_jobfair_seq = #{fap_jobfair_seq}
			</if>
			<if test="fap_jobfair_divide_seq != null and fap_jobfair_divide_seq != 0 ">
				and ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			</if>
			<if test="comp_nm != null and comp_nm != '' ">
				and comp.fap_comp_en_nm like concat('%',#{comp_nm},'%') 
			</if>
		order by
		    comp.fap_comp_en_nm
	</select>		
	<!-- 승인된 모든 채용공고 검색 종료-->
 
	
	<!-- 승인된 채용전형 정보 검색 시작; 2019. 1. 10 신동철 -->
	<select id="search_recruit_process_info" parameterType="hashmap" resultType="hashmap">
		select			
			ad.fap_job_ad_seq			
			, pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
			, pcs.fap_job_recruit_pcs_od
			, sch.fap_job_recruit_pcs_sch_ck
		from
			fap_job_ad_tb ad
			inner join fap_job_recruit_pcs_tb pcs
				on pcs.fap_job_ad_seq = ad.fap_job_ad_seq
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
		where
			(ad.fap_job_ad_state = 'C2101'
			or ad.fap_job_ad_state = 'C2102')
			<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0 ">
				and ad.fap_jobfair_seq = #{fap_jobfair_seq}
			</if>
			<if test="fap_jobfair_divide_seq != null and fap_jobfair_divide_seq != 0 ">
				and ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			</if>
			<if test="fap_job_recruit_pcs_sch_ck != null and fap_job_recruit_pcs_sch_ck != '' ">
				and sch.fap_job_recruit_pcs_sch_ck = #{fap_job_recruit_pcs_sch_ck}
			</if>
		order by
			pcs.fap_job_recruit_pcs_seq asc
	</select>		
	  <!--승인된 모든 채용전형 검색 종료-->
	
	<!-- 서류 채용전형 검색 시작; 2019. 1. 12. 신동철 -->
	<select id="select_review_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, sch.fap_job_recruit_pcs_sch_seq
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_detail
		    , sch.fap_job_recruit_pcs_sch_color
		    , sch.fap_job_recruit_pcs_sch_ck
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on pcs.fap_job_recruit_pcs_seq = sch.fap_job_recruit_pcs_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 서류 채용전형 검색 종료-->
	
	<!-- 시험 채용전형 검색 시작; 2019. 1. 12. 신동철 -->
	<resultMap type="hashmap" id="fapRecruitMap">
		<id property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq" />
		<result property="fap_job_recruit_pcs_gb" column="fap_job_recruit_pcs_gb" />
		<result property="fap_job_recruit_pcs_dtl" column="fap_job_recruit_pcs_dtl" />
		<result property="fap_job_recruit_pcs_sch_seq" column="fap_job_recruit_pcs_sch_seq" />
		<result property="fap_job_recruit_pcs_sch_st" column="fap_job_recruit_pcs_sch_st" />
		<result property="fap_job_recruit_pcs_sch_et" column="fap_job_recruit_pcs_sch_et" />
		<result property="fap_job_recruit_pcs_sch_lo" column="fap_job_recruit_pcs_sch_lo" />
		<result property="fap_job_recruit_pcs_sch_detail" column="fap_job_recruit_pcs_sch_detail" />
		<result property="fap_job_recruit_pcs_sch_color" column="fap_job_recruit_pcs_sch_color" />
		<result property="fap_job_recruit_pcs_sch_ck" column="fap_job_recruit_pcs_sch_ck" />
		<result property="fap_job_exam_seq" column="fap_job_exam_seq" />
		<result property="fap_job_exam_gb" column="fap_job_exam_gb" />
		<result property="fap_job_exam_obj" column="fap_job_exam_obj" />
		<result property="fap_job_exam_mail" column="fap_job_exam_mail" />
		<result property="fap_job_exam_tm" column="fap_job_exam_tm" />
		<result property="fap_job_exam_sv" column="fap_job_exam_sv" />
		<result property="fap_job_exam_need" column="fap_job_exam_need" />
		<result property="fap_job_exam_file_seq" column="fap_job_exam_file_seq" />
		<result property="fap_job_exam_file_saved" column="fap_job_exam_file_saved" />
		<result property="fap_job_exam_file_origin" column="fap_job_exam_file_origin" />
		<result property="fap_job_exam_obj_etc_seq" column="fap_job_exam_obj_etc_seq" />
		<result property="fap_job_exam_obj_etc_dtl" column="fap_job_exam_obj_etc_dtl" />
		<result property="fap_job_exam_sv_etc_seq" column="fap_job_exam_sv_etc_seq" />
		<result property="fap_job_exam_sv_etc_dtl" column="fap_job_exam_sv_etc_dtl" />
		<result property="fap_job_exam_need_etc_seq" column="fap_job_exam_need_etc_seq" />
		<result property="fap_job_exam_need_etc_dtl" column="fap_job_exam_need_etc_dtl" />
		<collection property="fapRecruitExamList" javaType="java.util.ArrayList" resultMap="fapRecruitExamMap" />
	</resultMap>
	<resultMap type="hashmap" id="fapRecruitExamMap">
		<id property="fap_job_exam_type_seq" column="fap_job_exam_type_seq" />
		<result property="fap_job_exam_type_gb" column="fap_job_exam_type_gb" />
	</resultMap>
	<select id="select_exam_pcs" parameterType="Long" resultMap="fapRecruitMap">
		select
			pcs.fap_job_recruit_pcs_seq as fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb as fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl as fap_job_recruit_pcs_dtl
			, sch.fap_job_recruit_pcs_sch_seq as fap_job_recruit_pcs_sch_seq
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo as fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_detail as fap_job_recruit_pcs_sch_detail
		    , sch.fap_job_recruit_pcs_sch_color as fap_job_recruit_pcs_sch_color
		    , sch.fap_job_recruit_pcs_sch_ck as fap_job_recruit_pcs_sch_ck
		    , exam.fap_job_exam_seq as fap_job_exam_seq
		    , exam.fap_job_exam_gb as fap_job_exam_gb
		    , exam.fap_job_exam_obj as fap_job_exam_obj
		    , exam.fap_job_exam_mail as fap_job_exam_mail
		    , exam.fap_job_exam_tm as fap_job_exam_tm
		    , exam.fap_job_exam_sv as fap_job_exam_sv
		    , exam.fap_job_exam_need as fap_job_exam_need
		    , exam_file.fap_job_exam_file_seq as fap_job_exam_file_seq
		    , exam_file.fap_job_exam_file_saved as fap_job_exam_file_saved
		    , exam_file.fap_job_exam_file_origin as fap_job_exam_file_origin
		    , exam_obj.fap_job_exam_obj_etc_seq as fap_job_exam_obj_etc_seq
		    , exam_obj.fap_job_exam_obj_etc_dtl as fap_job_exam_obj_etc_dtl
		    , exam_sv.fap_job_exam_sv_etc_seq as fap_job_exam_sv_etc_seq
		    , exam_sv.fap_job_exam_sv_etc_dtl as fap_job_exam_sv_etc_dtl
		    , exam_need.fap_job_exam_need_etc_seq as fap_job_exam_need_etc_seq
		    , exam_need.fap_job_exam_need_etc_dtl as fap_job_exam_need_etc_dtl
		    , exam_type.fap_job_exam_type_seq as fap_job_exam_type_seq
		    , exam_type.fap_job_exam_type_gb as fap_job_exam_type_gb
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			left join fap_job_exam_tb exam
				on pcs.fap_job_recruit_pcs_seq = exam.fap_job_recruit_pcs_seq
			left join fap_job_exam_file_tb exam_file
				on exam_file.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_obj_etc_tb exam_obj
				on exam_obj.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_sv_etc_tb exam_sv
				on exam_sv.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_need_etc_tb exam_need
				on exam_need.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_type_tb exam_type
				on exam_type.fap_job_exam_seq = exam.fap_job_exam_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 시험 채용전형 검색 종료-->
	
	<!-- 면접 채용전형 검색 시작; 2019. 1. 12. 신동철 -->
	<select id="select_itv_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, sch.fap_job_recruit_pcs_sch_seq
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_waitingroom
		    , sch.fap_job_recruit_pcs_sch_detail
		    , sch.fap_job_recruit_pcs_sch_color    
		    , sch.fap_job_recruit_pcs_sch_ck
		    , itv.fap_job_itv_seq
		    , itv.fap_job_itv_gb
		    , itv.fap_job_itv_obj
		    , itv.fap_job_itv_tp
		    , itv.fap_job_itv_tm
		    , itv.fap_job_itv_skype
		    , itv_tp.fap_job_itv_tp_etc_seq
		    , itv_tp.fap_job_itv_tp_etc_dtl
		    , itv_obj.fap_job_itv_obj_etc_seq
		    , itv_obj.fap_job_itv_obj_etc_dtl		    
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_itv_tb itv
				on pcs.fap_job_recruit_pcs_seq = itv.fap_job_recruit_pcs_seq
			left join fap_job_itv_tp_etc_tb itv_tp
				on itv_tp.fap_job_itv_seq = itv.fap_job_itv_seq
			left join fap_job_itv_obj_etc_tb itv_obj
				on itv_obj.fap_job_itv_seq = itv.fap_job_itv_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 면접 채용전형 검색 종료-->
	
	<!-- 기타 채용전형 검색 시작; 2019. 1. 12. 신동철 -->
	<select id="select_test_etc_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, sch.fap_job_recruit_pcs_sch_seq
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_detail
		    , sch.fap_job_recruit_pcs_sch_color
		    , sch.fap_job_recruit_pcs_sch_ck
			, test_etc.fap_job_test_etc_seq
			, test_etc.fap_job_test_etc_obj
			, test_etc.fap_job_test_etc_dtl
			, test_etc_obj.fap_job_test_etc_obj_seq
			, test_etc_obj.fap_job_test_etc_obj_dtl		       
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_test_etc_tb test_etc
				on pcs.fap_job_recruit_pcs_seq = test_etc.fap_job_recruit_pcs_seq
			left join fap_job_test_etc_obj_tb test_etc_obj
				on test_etc_obj.fap_job_test_etc_seq = test_etc.fap_job_test_etc_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 기타 채용전형 검색 종료-->
	
	<!--서류전형 스케줄 설정 시작; 2019. 1. 13. 신동철 -->
	<update id="update_review_process_schedule" parameterType="JobRecruitPcsSch">
		update
			fap_job_recruit_pcs_sch_tb
		set
			fap_job_recruit_pcs_sch_st = #{fap_job_recruit_pcs_sch_st}
			, fap_job_recruit_pcs_sch_et = #{fap_job_recruit_pcs_sch_et}
			, fap_job_recruit_pcs_sch_color = #{fap_job_recruit_pcs_sch_color}
			, fap_job_recruit_pcs_sch_ck = 'C5001'
			, fap_job_recruit_pcs_sch_udt_id = #{fap_job_recruit_pcs_sch_udt_id}
			, fap_job_recruit_pcs_sch_udt_dt = now()
		where
			fap_job_recruit_pcs_sch_seq = #{fap_job_recruit_pcs_sch_seq}
	</update>
	<!-- 서류전형 스케줄 설정 종료 -->
	
	<!--시험전형 스케줄 설정 시작; 2019. 1. 13. 신동철 -->
	<update id="update_exam_process_schedule" parameterType="JobRecruitPcsSch">
		update
			fap_job_recruit_pcs_sch_tb
		set
			fap_job_recruit_pcs_sch_st = #{fap_job_recruit_pcs_sch_st}
			, fap_job_recruit_pcs_sch_et = #{fap_job_recruit_pcs_sch_et}
			, fap_job_recruit_pcs_sch_lo = #{fap_job_recruit_pcs_sch_lo}
			, fap_job_recruit_pcs_sch_detail = #{fap_job_recruit_pcs_sch_detail}
			, fap_job_recruit_pcs_sch_color = #{fap_job_recruit_pcs_sch_color}
			, fap_job_recruit_pcs_sch_ck = 'C5001'
			, fap_job_recruit_pcs_sch_udt_id = #{fap_job_recruit_pcs_sch_udt_id}
			, fap_job_recruit_pcs_sch_udt_dt = now()
		where
			fap_job_recruit_pcs_sch_seq = #{fap_job_recruit_pcs_sch_seq}
	</update>
	<!-- 시험전형 스케줄 설정 종료 -->
	
	<!--면접전형 스케줄 설정 시작; 2019. 1. 13. 신동철 -->
	<update id="update_itv_process_schedule" parameterType="JobRecruitPcsSch">
		update
			fap_job_recruit_pcs_sch_tb
		set
			fap_job_recruit_pcs_sch_st = #{fap_job_recruit_pcs_sch_st}
			, fap_job_recruit_pcs_sch_et = #{fap_job_recruit_pcs_sch_et}
			, fap_job_recruit_pcs_sch_lo = #{fap_job_recruit_pcs_sch_lo}
			, fap_job_recruit_pcs_sch_waitingroom = #{fap_job_recruit_pcs_sch_waitingroom}
			, fap_job_recruit_pcs_sch_detail = #{fap_job_recruit_pcs_sch_detail}
			, fap_job_recruit_pcs_sch_color = #{fap_job_recruit_pcs_sch_color}
			, fap_job_recruit_pcs_sch_ck = 'C5001'
			, fap_job_recruit_pcs_sch_udt_id = #{fap_job_recruit_pcs_sch_udt_id}
			, fap_job_recruit_pcs_sch_udt_dt = now()
		where
			fap_job_recruit_pcs_sch_seq = #{fap_job_recruit_pcs_sch_seq}
	</update>
	<!-- 면접전형 스케줄 설정 종료 -->
	
	<!--기타전형 스케줄 설정 시작; 2019. 1. 13. 신동철 -->
	<update id="update_test_etc_process_schedule" parameterType="JobRecruitPcsSch">
		update
			fap_job_recruit_pcs_sch_tb
		set
			fap_job_recruit_pcs_sch_st = #{fap_job_recruit_pcs_sch_st}
			, fap_job_recruit_pcs_sch_et = #{fap_job_recruit_pcs_sch_et}
			, fap_job_recruit_pcs_sch_lo = #{fap_job_recruit_pcs_sch_lo}
			, fap_job_recruit_pcs_sch_detail = #{fap_job_recruit_pcs_sch_detail}
			, fap_job_recruit_pcs_sch_color = #{fap_job_recruit_pcs_sch_color}
			, fap_job_recruit_pcs_sch_ck = 'C5001'
			, fap_job_recruit_pcs_sch_udt_id = #{fap_job_recruit_pcs_sch_udt_id}
			, fap_job_recruit_pcs_sch_udt_dt = now()
		where
			fap_job_recruit_pcs_sch_seq = #{fap_job_recruit_pcs_sch_seq}
	</update>
	<!-- 기타전형 스케줄 설정 종료 -->	
	
	<!--서류전형 제출서류 목록 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_review_process" parameterType="JobRecruitPcs">
		update
			fap_job_recruit_pcs_tb
		set
			fap_job_recruit_pcs_dtl = #{fap_job_recruit_pcs_dtl}
			, fap_job_recruit_pcs_udt_id = #{fap_job_recruit_pcs_udt_id}
			, fap_job_recruit_pcs_udt_dt = now()
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</update>
	<!-- 서류전형 제출서류 목록 수정 종료 -->
	
	<!-- 시험 채용전형 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_exam_process" parameterType="JobExam">
		update
			fap_job_exam_tb
		set
			fap_job_exam_gb = #{fap_job_exam_gb}
			, fap_job_exam_obj = #{fap_job_exam_obj}
			, fap_job_exam_mail = #{fap_job_exam_mail}
			, fap_job_exam_tm = #{fap_job_exam_tm}
			, fap_job_exam_sv = #{fap_job_exam_sv}
			, fap_job_exam_need = #{fap_job_exam_need}
			, fap_job_exam_udt_id = #{fap_job_exam_udt_id}
			, fap_job_exam_udt_dt = now()
		where
			fap_job_exam_seq = #{fap_job_exam_seq}
	</update>
	<!-- 시험 채용전형 수정 종료 -->
	
	
	<!-- 시험전형 시험문제파일 등록 시작; 2019. 9. 26. 김경아 -->
	<insert id="insert_exam_file" parameterType="JobExamFile">		
		insert into
			fap_job_exam_file_tb (				
				 fap_job_exam_file_saved
				, fap_job_exam_file_origin
				, fap_job_exam_file_ins_id
				, fap_job_exam_file_ins_dt
				, fap_job_exam_file_udt_id
				, fap_job_exam_file_udt_dt
				, fap_job_exam_seq
			) values (			
				 #{fap_job_exam_file_saved}
				, #{fap_job_exam_file_origin}
				, #{fap_job_exam_file_ins_id}
				, now()
				, #{fap_job_exam_file_udt_id}
				, now()
				, #{fap_job_exam_seq}
			)
	</insert>
	<!-- 시험전형 시험문제파일 등록 종료; -->
	
	<!-- 시험전형 시험문제파일 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_exam_file" parameterType="JobExamFile">
		update
			fap_job_exam_file_tb
		set
			fap_job_exam_file_udt_id = #{fap_job_exam_file_udt_id}
			, fap_job_exam_file_udt_dt = now()
			<if test= "fap_job_exam_file_origin != null and fap_job_exam_file_saved != '' ">
	        	, fap_job_exam_file_saved = #{fap_job_exam_file_saved}
			</if>
			<if test="fap_job_exam_file_origin != null and fap_job_exam_file_saved != '' ">
	       		, fap_job_exam_file_origin = #{fap_job_exam_file_origin}
			</if>
		where
			fap_job_exam_seq = #{fap_job_exam_seq}
	</update>
	<!-- 시험전형 시험문제파일 수정 종료 -->
	
	<!-- 게시물 파일 삭제 시작; 2019.9. 26. 김경아 -->
	<delete id="delete_exam_file" parameterType="String" >
		delete from
		 	fap_job_exam_file_tb
		where			 
			fap_job_exam_file_saved = #{fap_job_exam_file_saved}
	</delete>
	<!-- 게시물 파일 삭제 종료 -->
	
	<!-- 시험전형 시험대상자 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_exam_obj_etc" parameterType="JobExamObjEtc">
		update
			fap_job_exam_obj_etc_tb
		set
			fap_job_exam_obj_etc_dtl =#{fap_job_exam_obj_etc_dtl}
			, fap_job_exam_obj_etc_udt_id = #{fap_job_exam_obj_etc_udt_id}
			, fap_job_exam_obj_etc_udt_dt = now()
		where
			fap_job_exam_seq = #{fap_job_exam_seq}
	</update>
	<!-- 시험전형 시험대상자 수정 종료 -->
	
	<!-- 시험전형 시험감독관 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_exam_sv_etc" parameterType="JobExamSvEtc">
		update
			fap_job_exam_sv_etc_tb
		set
			fap_job_exam_sv_etc_dtl = #{fap_job_exam_sv_etc_dtl}
			, fap_job_exam_sv_etc_udt_id = #{fap_job_exam_sv_etc_udt_id}
			, fap_job_exam_sv_etc_udt_dt = now()
		where
			fap_job_exam_seq = #{fap_job_exam_seq}
	</update>
	<!-- 시험전형 시험감독관 수정 종료 -->
	
	<!-- 시험전형 시험준비물 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_exam_need_etc" parameterType="JobExamNeedEtc">
		update
			fap_job_exam_need_etc_tb
		set
			fap_job_exam_need_etc_dtl = #{fap_job_exam_need_etc_dtl}
			, fap_job_exam_need_etc_udt_id = #{fap_job_exam_need_etc_udt_id}
			, fap_job_exam_need_etc_udt_dt = now()
		where
			fap_job_exam_seq = #{fap_job_exam_seq}
	</update>
	<!-- 시험전형 시험준비물 수정 종료 -->
	
	<!-- 시험전형 시험종류 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_exam_type" parameterType="JobExamType">
		update
			fap_job_exam_type_tb
		set
			fap_job_exam_type_gb = #{fap_job_exam_type_gb}
			, fap_job_exam_type_udt_id = #{fap_job_exam_type_udt_id}
			, fap_job_exam_type_udt_dt = now()
		where
			fap_job_exam_seq = #{fap_job_exam_seq}
	</update>
	<!-- 시험전형 시험종류 수정 종료 -->
	
	<!-- 면접 채용전형 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_itv_process" parameterType="JobRecruitPcs">
		update
			fap_job_recruit_pcs_tb
		set
			fap_job_recruit_pcs_dtl = #{fap_job_recruit_pcs_dtl}
			, fap_job_recruit_pcs_udt_id = #{fap_job_recruit_pcs_udt_id}
			, fap_job_recruit_pcs_udt_dt = now()
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</update>
	<!-- 면접 채용전형 수정 종료 -->
	
	<!-- 면접 전형정보 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_itv_process_info" parameterType="JobItv">
		update
			fap_job_itv_tb
		set
			fap_job_itv_gb = #{fap_job_itv_gb}
			, fap_job_itv_obj = #{fap_job_itv_obj}
			, fap_job_itv_tp = #{fap_job_itv_tp}
			, fap_job_itv_tm = #{fap_job_itv_tm}
			, fap_job_itv_skype = #{fap_job_itv_skype}
			, fap_job_itv_udt_id = #{fap_job_itv_udt_id}
			, fap_job_itv_udt_dt = now()
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</update>
	<!-- 면접 전형정보 수정 종료 -->
	
	<!-- 면접 방식 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_itv_tp_etc" parameterType="JobItvTpEtc">
		update
			fap_job_itv_tp_etc_tb
		set
			fap_job_itv_tp_etc_dtl = #{fap_job_itv_tp_etc_dtl}
			, fap_job_itv_tp_etc_udt_id = #{fap_job_itv_tp_etc_udt_id}
			, fap_job_itv_tp_etc_udt_dt = now()
		where
			fap_job_itv_seq = #{fap_job_itv_seq}
	</update>
	<!-- 면접 방식 수정 종료 -->
	
	<!-- 면접 대상자 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_itv_obj_etc" parameterType="JobItvObjEtc">
		update
			fap_job_itv_obj_etc_tb
		set
			fap_job_itv_obj_etc_dtl = #{fap_job_itv_obj_etc_dtl}
			, fap_job_itv_obj_etc_udt_id = #{fap_job_itv_obj_etc_udt_id}
			, fap_job_itv_obj_etc_udt_dt = now()
		where
			fap_job_itv_seq = #{fap_job_itv_seq}
	</update>
	<!-- 면접 대상자 수정 종료 -->
	
	<!-- 기타면접 전형정보 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_test_etc_info" parameterType="JobTestEtc">
		update
			fap_job_test_etc_tb
		set
			fap_job_test_etc_obj = #{fap_job_test_etc_obj}
			, fap_job_test_etc_dtl = #{fap_job_test_etc_dtl}
			, fap_job_test_etc_udt_id = #{fap_job_test_etc_udt_id}
			, fap_job_test_etc_udt_dt = now()
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</update>
	<!-- 기타면접 전형정보 수정 종료 -->
	
	<!-- 기타면접 전형대상자 수정 시작; 2019. 1. 14. 신동철 -->
	<update id="update_test_etc_obj" parameterType="JobTestEtcObj">
		update
			fap_job_test_etc_obj_tb
		set
			fap_job_test_etc_obj_dtl = #{fap_job_test_etc_obj_dtl}
			, fap_job_test_etc_obj_udt_id = #{fap_job_test_etc_obj_udt_id}
			, fap_job_test_etc_obj_udt_dt = now()
		where
			fap_job_test_etc_seq = #{fap_job_test_etc_seq}
	</update>
	<!-- 기타면접 전형대상자 수정 종료 -->
	
	<!-- 전형일정 스케줄 검색 시작; 2019. 1. 14 신동철 -->
	<select id="select_recruit_pcs_sch" parameterType="JobRecruitPcsSch" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
			, sch.fap_job_recruit_pcs_sch_seq
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
			, sch.fap_job_recruit_pcs_sch_color
			, exam.fap_job_exam_gb
			, itv.fap_job_itv_gb
			, comp.fap_comp_en_nm
		from
			fap_job_ad_tb ad
			inner join fap_company_user_tb comp
				on comp.fap_comp_id = ad.fap_comp_id
			inner join fap_job_recruit_pcs_tb pcs
				on pcs.fap_job_ad_seq = ad.fap_job_ad_seq
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			left join fap_job_exam_tb exam
				on exam.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			left join fap_job_itv_tb itv
				on itv.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
		where
			sch.fap_job_recruit_pcs_sch_ck = 'C5001'
			<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0 ">
				and ad.fap_jobfair_seq = #{fap_jobfair_seq}
			</if>
			<if test="fap_jobfair_divide_seq != null and fap_jobfair_divide_seq != 0 ">
				and ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			</if>
			<if test="comp_nm != null and comp_nm != '' ">
				and comp.fap_comp_en_nm like concat('%',#{comp_nm},'%') 
			</if>
			<if test="fap_job_recruit_pcs_gb != null and fap_job_recruit_pcs_gb != '' ">
				and pcs.fap_job_recruit_pcs_gb = #{fap_job_recruit_pcs_gb}
			</if>
	</select>
	<!-- 전형일정 스케줄 검색 종료 -->
	
	<!-- 승인된 채용공고의 모든 잡페어 리스트 검색 시작; 2019. 1. 18 신동철 -->
	<select id="search_job_ad_jobfair_list" resultType="hashmap">
		select distinct
			ad.fap_jobfair_seq
			, jobfair.fap_jobfair_title			
		from
			fap_job_ad_tb ad
			inner join fap_jobfair_tb jobfair
				on jobfair.fap_jobfair_seq = ad.fap_jobfair_seq
		where
			(ad.fap_job_ad_state = 'C2101'
			or ad.fap_job_ad_state = 'C2102')
	</select>
	<!-- 승인된 채용공고의 모든 잡페어 리스트 검색 종료 -->
	
	<!-- 승인된 채용공고의 모든 회사 리스트 검색 시작 2019.1.18. 신동철 -->
	<select id="search_job_ad_comp_list" resultType="hashmap">
		select distinct
			 ad.fap_comp_id
			 , comp.fap_comp_en_nm
		from
			fap_job_ad_tb ad
			inner join fap_company_user_tb comp
				on comp.fap_comp_id = ad.fap_comp_id
		where
			(ad.fap_job_ad_state = 'C2101'
			or ad.fap_job_ad_state = 'C2102')
	</select>	
	<!-- 승인된 채용공고의 모든 회사 리스트 검색 종료 -->
	
	<!--  회사가 참가하여 승인받은 채용공고 리스트 검색 시작 2019.1.18. 신동철 -->
	<select id="search_job_ad_list" parameterType="JobAd" resultType="JobAd">
		select
			fap_job_ad_seq
			, fap_jobfair_seq
			, fap_jobfair_divide_seq
			, fap_comp_id
			,fap_job_ad_title
		from
			fap_job_ad_tb
		where
			(fap_job_ad_state = 'C2101'
			or fap_job_ad_state = 'C2102')			
			and fap_comp_id = #{fap_comp_id}			
			<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0 ">
				and fap_jobfair_seq = #{fap_jobfair_seq}
			</if>
	</select>	
	<!-- 회사가 참가한 채용공고 리스트 검색 종료 -->
	
	<!-- 특정 잡페어의 승인된 채용공고의 모든 회사 리스트 검색 시작 2019.1.18. 신동철 -->
	<select id="select_job_ad_comp_list" parameterType="int" resultType="hashmap">
		select distinct
			 ad.fap_comp_id
			 , comp.fap_comp_en_nm
		from
			fap_job_ad_tb ad
			inner join fap_company_user_tb comp
				on comp.fap_comp_id = ad.fap_comp_id
		where
			(ad.fap_job_ad_state = 'C2101'
			or ad.fap_job_ad_state = 'C2102')
			and fap_jobfair_seq = #{fap_jobfair_seq}
		order by 
			 comp.fap_comp_en_nm
	</select>	
	<!-- 승인된 채용공고의 모든 회사 리스트 검색 종료 -->
	
	<!-- 지원자별 전형 결과 리스트 출력 시작 2019.1.21. 남유송 -->
	<select id="select_applied_result" parameterType="hashmap" resultType="hashmap">
		select
				pcs.fap_job_recruit_pcs_gb
				,info.fap_resume_seq
			    ,info.fap_job_app_info_cancel_gb
				,info.user_id
			    ,res.fap_job_app_rt_acp
		from
				fap_job_apply_info_tb as info
		inner join 
				fap_job_recruit_pcs_tb as pcs
		on 
				info.fap_job_ad_seq = pcs.fap_job_ad_seq
		left outer join 
				fap_job_apply_result_tb as res
		on 
				info.fap_job_app_info_seq = res.fap_job_app_info_seq
		and
				pcs.fap_job_recruit_pcs_seq = res.fap_job_recruit_pcs_seq
		where 
				info.fap_job_ad_seq=#{fap_job_ad_seq}
		
	</select>
	<!-- 지원자별 전형 결과 리스트 출력 종료 -->
	
	
	<!-- 잡페어별 임시 결제 그룹 등록 시작 -->
	<insert id="per_jobfair_temp_group_insert" parameterType="FAPJobfairTempGroup" useGeneratedKeys="true" keyProperty="fap_per_jobfair_temp_group_seq">
		insert into
			fap_per_jobfair_temp_group_tb(
				fap_jobfair_seq
				,fap_per_jobfair_temp_group_nm
				,fap_per_jobfair_temp_group_ins_id
				,fap_per_jobfair_temp_group_ins_dt
				,fap_per_jobfair_temp_group_udt_id
				,fap_per_jobfair_temp_group_udt_dt
			)values(
				#{fap_jobfair_seq}
				,#{fap_per_jobfair_temp_group_nm}
				,#{fap_per_jobfair_temp_group_ins_id}
				,now()
				,#{fap_per_jobfair_temp_group_udt_id}
				,now()
			)
	</insert>
	<!-- 잡페어별 임시 결제 그룹 등록 종료 -->
	
	<!-- 세부잡페어별 임시 결제 등록 시작 -->
	<insert id="per_jobfair_divide_temp_insert" parameterType="FAPJobfairDivideTemp">
		insert into
			fap_per_jobfair_divide_temp_tb(
				fap_jobfair_divide_seq
				,fap_per_jobfair_temp_group_seq
				,fap_per_jobfair_divide_temp_cost
				,fap_per_jobfair_divide_temp_ins_id
				,fap_per_jobfair_divide_temp_ins_dt
				,fap_per_jobfair_divide_temp_udt_id
				,fap_per_jobfair_divide_temp_udt_dt
			)values
			<foreach item ="divideList" collection="perJobfairDivideList" index="index" open=" " separator="," close=" ">
				(
					#{divideList.fap_jobfair_divide_seq}
					,#{divideList.fap_per_jobfair_temp_group_seq}
					,#{divideList.fap_per_jobfair_divide_temp_cost}
					,#{divideList.fap_per_jobfair_divide_temp_ins_id}
					,now()
					,#{divideList.fap_per_jobfair_divide_temp_udt_id}
					,now()
				)
			</foreach>
	</insert>
	<!-- 세부잡페어별 임시 결제 등록 종료 -->
	
	<resultMap type="hashmap" id="perJobfairTempGroupMap">
		<id property="fap_per_jobfair_temp_group_seq" column="fap_per_jobfair_temp_group_seq" />
		<result property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_per_jobfair_temp_group_nm" column="fap_per_jobfair_temp_group_nm" />
		<collection property="divideList" javaType="java.util.ArrayList" resultMap="divideTempMap" />
	</resultMap>
	<resultMap type="hashmap" id="divideTempMap">
		<id property="fap_per_jobfair_divide_temp_seq" column="fap_per_jobfair_divide_temp_seq" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_divide_gb" column="fap_jobfair_divide_gb" />
		<result property="fap_per_jobfair_divide_temp_cost" column="fap_per_jobfair_divide_temp_cost" />
	</resultMap>
	
	<!-- 잡페어별 임시 결제 그룹 검색 시작 -->
	<select id="per_jobfair_temp_group_search" parameterType="int" resultMap="perJobfairTempGroupMap">
		select
			perGroup.fap_per_jobfair_temp_group_seq
			,perGroup.fap_jobfair_seq
			,perGroup.fap_per_jobfair_temp_group_nm
			,divideTemp.fap_per_jobfair_divide_temp_seq
			,divideTemp.fap_jobfair_divide_seq
		    ,divideTemp.fap_jobfair_divide_gb
			,divideTemp.fap_per_jobfair_divide_temp_cost
		from
			fap_per_jobfair_temp_group_tb perGroup
		left join 
			(
				select
					t1.fap_per_jobfair_divide_temp_seq
		            ,t1.fap_jobfair_divide_seq
		            ,t1.fap_per_jobfair_divide_temp_cost
		            ,t1.fap_per_jobfair_temp_group_seq
		            ,t2.fap_jobfair_divide_gb
				from
					fap_per_jobfair_divide_temp_tb t1
				left join
					fap_jobfair_divide_tb t2
				on
					t1.fap_jobfair_divide_seq = t2.fap_jobfair_divide_seq
			) divideTemp
		on
			perGroup.fap_per_jobfair_temp_group_seq = divideTemp.fap_per_jobfair_temp_group_seq
		where
			perGroup.fap_jobfair_seq = #{fap_jobfair_seq}
		order by
			fap_per_jobfair_temp_group_udt_dt
	</select>
	<!-- 잡페어별 임시 결제 그룹 검색 종료 -->
	
	<!-- 잡페어별 임시 결제 그룹 삭제 시작 -->
	<delete id="per_jobfair_temp_group_delete" parameterType="int">
		delete from
			fap_per_jobfair_temp_group_tb
		where
			fap_per_jobfair_temp_group_seq = #{fap_per_jobfair_temp_group_seq}
	</delete>
	<!-- 잡페어별 임시 결제 그룹 삭제 종료 -->
	
	<resultMap type="hashmap" id="perGroupDetailMap">
		<id property="fap_per_jobfair_temp_group_seq" column="fap_per_jobfair_temp_group_seq" />
		<result property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_per_jobfair_temp_group_nm" column="fap_per_jobfair_temp_group_nm" />
		<collection property="divideList" javaType="java.util.ArrayList" resultMap="divideTempDetailMap" />
	</resultMap>
	<resultMap type="hashmap" id="divideTempDetailMap">
		<id property="fap_per_jobfair_divide_temp_seq" column="fap_per_jobfair_divide_temp_seq" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_divide_gb" column="fap_jobfair_divide_gb" />
		<result property="fap_per_jobfair_divide_temp_cost" column="fap_per_jobfair_divide_temp_cost" />
	</resultMap>
	
	<!-- 잡페어별 임시 결제 그룹 상세 검색 시작 -->
	<select id="per_jobfair_temp_group_search_detail" parameterType="FAPJobfairTempGroup" resultMap="perGroupDetailMap">
		select
			perGroup.fap_per_jobfair_temp_group_seq
			,perGroup.fap_jobfair_seq
			,perGroup.fap_per_jobfair_temp_group_nm
			,divideTemp.fap_per_jobfair_divide_temp_seq
			,divideTemp.fap_jobfair_divide_seq
		    ,divideTemp.fap_jobfair_divide_gb
			,divideTemp.fap_per_jobfair_divide_temp_cost
		from
			fap_per_jobfair_temp_group_tb perGroup
		left join 
			(
				select
					t1.fap_per_jobfair_divide_temp_seq
		            ,t1.fap_jobfair_divide_seq
		            ,t1.fap_per_jobfair_divide_temp_cost
		            ,t1.fap_per_jobfair_temp_group_seq
		            ,t2.fap_jobfair_divide_gb
				from
					fap_per_jobfair_divide_temp_tb t1
				left join
					fap_jobfair_divide_tb t2
				on
					t1.fap_jobfair_divide_seq = t2.fap_jobfair_divide_seq
			) divideTemp
		on
			perGroup.fap_per_jobfair_temp_group_seq = divideTemp.fap_per_jobfair_temp_group_seq
		where
			perGroup.fap_per_jobfair_temp_group_seq = #{fap_per_jobfair_temp_group_seq}
	</select>
	<!-- 잡페어별 임시 결제 그룹 상세 검색 종료 -->
	
	<!-- 잡페어별 임시 결제 그룹 수정 시작 -->
	<update id="per_jobfair_temp_group_update" parameterType="FAPJobfairTempGroup">
		update
			fap_per_jobfair_temp_group_tb
		set
			fap_per_jobfair_temp_group_nm = #{fap_per_jobfair_temp_group_nm}
			,fap_per_jobfair_temp_group_udt_id = #{fap_per_jobfair_temp_group_udt_id}
			,fap_per_jobfair_temp_group_udt_dt = now()
		where
			fap_per_jobfair_temp_group_seq = #{fap_per_jobfair_temp_group_seq}
	</update>
	<!-- 잡페어별 임시 결제 그룹 수정 종료 -->
	
	<!-- 상세잡페어별 임시 결제 삭제 시작 -->
	<delete id="per_jobfair_divide_temp_delete" parameterType="int">
		delete from
			fap_per_jobfair_divide_temp_tb
		where
			fap_per_jobfair_temp_group_seq = #{fap_per_jobfair_temp_group_seq}
	</delete>
	<!--상세 잡페어별 임시 결제 삭제 종료 -->
	
	<!-- 잡페어별 회사 결제정보 수정 시작 -->
	<update id="per_comp_temp_payment_update" parameterType="hashmap">
		UPDATE 
			fap_per_comp_temp_payment_tb
		SET
			FAP_PER_JOBFAIR_TEMP_GROUP_SEQ = #{fap_per_jobfair_temp_group_seq}
			,FAP_PER_COMP_TEMP_PAYMENT_GB = #{fap_per_comp_temp_payment_gb}
			,FAP_PER_COMP_TEMP_PAYMENT_VIP_GB = #{fap_per_comp_temp_payment_vip_gb}
			,FAP_PER_COMP_TEMP_PAYMENT_UDT_ID = #{fap_per_comp_temp_payment_udt_id}
			,FAP_PER_COMP_TEMP_PAYMENT_UDT_DT = now()
		WHERE
		 	FAP_PER_COMP_TEMP_PAYMENT_SEQ = #{fap_per_comp_temp_payment_seq}
	</update>
	<!-- 잡페어별 회사 결제정보 수정 종료 -->
	
	<!-- 잡페어별 회사 결제정보 등록 시작 -->
	<insert id="per_comp_temp_payment_insert" parameterType="hashmap">
		insert into
			fap_per_comp_temp_payment_tb
			(
				fap_comp_id
				,fap_per_jobfair_temp_group_seq
				,fap_per_comp_temp_payment_gb
				,fap_per_comp_temp_payment_vip_gb
				,fap_per_comp_temp_payment_ins_id
				,fap_per_comp_temp_payment_udt_id
			)values(
				#{fap_comp_id}
				,#{fap_per_jobfair_temp_group_seq}
				,#{fap_per_comp_temp_payment_gb}
				,#{fap_per_comp_temp_payment_vip_gb}
				,#{fap_per_comp_temp_payment_ins_id}
				,#{fap_per_comp_temp_payment_ins_id}
			)
	</insert>
	<!-- 잡페어별 회사 결제정보 등록 종료 -->
	
	<!-- 잡페어별 회사 결제정보 삭제 시작 -->
	<delete id="per_comp_temp_payment_delete" parameterType="int">
		delete from
			fap_per_comp_temp_payment_tb
		where
			fap_per_comp_temp_payment_seq = #{fap_per_comp_temp_payment_seq}
	</delete>
	<!-- 잡페어별 회사 결제정보 삭제 종료 -->
	
	<!-- 회사 (에이전시 포함) 목록 검색 시작 -->
	<select id="select_comp_list_include_agency" resultType="hashmap" parameterType="int">
		select
			comp_user.fap_comp_id
			, comp_user.fap_comp_en_nm
			, comp_user.fap_comp_ja_nm
			, comp_connect.user_flag
			, temp_payment.fap_per_comp_temp_payment_gb
			, temp_payment.fap_per_jobfair_temp_group_seq
		    , temp_payment.fap_per_jobfair_temp_group_nm
	        , temp_payment.fap_per_comp_temp_payment_seq
		from
			fap_company_user_tb as comp_user
		join
			(select
					comp_user_connect.fap_comp_id as fap_comp_id
					,cuser.user_flag
			   from
					fap_comp_user_connect_tb as comp_user_connect
					,(select
							user_id
							,user_flag
						from
							com_user_tb
						where
							user_flag in ('A0103','A0104')
					   ) as cuser
			   where
					comp_user_connect.user_id = cuser.user_id
				group by
					comp_user_connect.fap_comp_id
			   ) as comp_connect
		on
			comp_user.fap_comp_id = comp_connect.fap_comp_id
		left join
			(
				select
					perGroup.fap_per_jobfair_temp_group_seq
					,perGroup.fap_jobfair_seq
					,perGroup.fap_per_jobfair_temp_group_nm
		            ,payment.fap_comp_id
		            ,payment.fap_per_comp_temp_payment_gb
		            ,payment.fap_per_comp_temp_payment_seq
				from
					fap_per_jobfair_temp_group_tb perGroup
				left join
					fap_per_comp_temp_payment_tb payment
				on
					perGroup.fap_per_jobfair_temp_group_seq = payment.fap_per_jobfair_temp_group_seq
				where
					perGroup.fap_jobfair_seq = #{fap_jobfair_seq}
				order by
					fap_per_jobfair_temp_group_udt_dt
		    ) temp_payment
		on
			comp_user.fap_comp_id = temp_payment.fap_comp_id
	</select>
	<!-- 회사 (에이전시 포함) 목록 검색 종료 -->
	
	<!-- 승인된 채용공고의 채용전형 검색 시작; 2019.1.30 신동철  -->
	<select id="search_approved_job_recruit_pcs" parameterType="Long" resultType="JobRecruitPcs">
		select
			fap_job_recruit_pcs_seq
			, fap_job_recruit_pcs_gb
			, fap_job_recruit_pcs_dtl
		from
			fap_job_recruit_pcs_tb
		where
			fap_job_ad_seq=#{fap_job_ad_seq}
		order by fap_job_recruit_pcs_od asc
	</select>
	<!-- 승인된 채용공고의 채용전형 검색 종료 -->
	
	<!-- 승인된 채용공고 서류전형을 스케줄테이블에 등록 시작; 2019.1.30 신동철 -->
	<insert id="insert_approved_review_pcs" parameterType="JobRecruitPcsSch">
		insert into
			fap_job_recruit_pcs_sch_tb
			(			
                fap_job_recruit_pcs_seq
                , fap_job_recruit_pcs_sch_st
                , fap_job_recruit_pcs_sch_et
                , fap_job_recruit_pcs_sch_detail
                , fap_job_recruit_pcs_sch_ck
                , fap_job_recruit_pcs_sch_ins_id
                , fap_job_recruit_pcs_sch_ins_dt
                , fap_job_recruit_pcs_sch_udt_id
                , fap_job_recruit_pcs_sch_udt_dt                
			)values
			(
				#{fap_job_recruit_pcs_seq}
                , #{fap_job_recruit_pcs_sch_st}
                , #{fap_job_recruit_pcs_sch_et}
                , #{fap_job_recruit_pcs_sch_detail}
                , 'C5000'
                , #{fap_job_recruit_pcs_sch_ins_id}
                , now()
                , #{fap_job_recruit_pcs_sch_udt_id}
                , now()
			)
	</insert>
	<!--  승인된 채용공고 서류전형을 스케줄테이블에 등록 종료 -->
	
	<!-- 승인된 채용공고 서류전형 제외한 채용전형을 스케줄테이블에 등록 시작; 2019.1.30 신동철 -->
	<insert id="insert_approved_recruit_pcs" parameterType="JobRecruitPcsSch">
		insert into
			fap_job_recruit_pcs_sch_tb
			(			
                fap_job_recruit_pcs_seq
                , fap_job_recruit_pcs_sch_ck
                , fap_job_recruit_pcs_sch_ins_id
                , fap_job_recruit_pcs_sch_ins_dt
                , fap_job_recruit_pcs_sch_udt_id
                , fap_job_recruit_pcs_sch_udt_dt                
			)values
			(
				#{fap_job_recruit_pcs_seq}
				, 'C5000'
                , #{fap_job_recruit_pcs_sch_ins_id}
                , now()
                , #{fap_job_recruit_pcs_sch_udt_id}
                , now()
			)
	</insert>
	<!--  승인된 채용공고 서류전형 제외한 채용전형을 스케줄테이블에 등록 종료 -->
	
	<!-- 채용전형 스케줄에 서류전형 설정을 위한 시작일과 종료일 검색 시작; 2019.1.30 신동철 -->
	<select id="search_approved_review_pcs_date" parameterType="long" resultType="fapJobfairApplicableTime">
		select
			time.fap_jobfair_applicable_time_st
			, time.fap_jobfair_applicable_time_et
		from
			fap_jobfair_applicable_time_tb time
		where
			time.fap_jobfair_applicable_time_first = 'D0300'
		and
			time.fap_jobfair_divide_seq = (select
												ad.fap_jobfair_divide_seq
											from
												fap_job_ad_tb ad
											where
												ad.fap_job_ad_seq = #{fap_job_ad_seq})	
	</select>
	<!-- 채용전형 스케줄에 서류전형 설정을 위한 시작일과 종료일 검색 종료 -->
	
	<select id="select_job_recruit_pcs_sch_by_seq" parameterType="long" resultType="JobRecruitPcsSch">
		select
			fap_job_recruit_pcs_sch_seq
		from
			fap_job_recruit_pcs_sch_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	
	<!-- FAP 기업 - 담당자 연결 요청 가져오기 시작; 2019. 2. 7. 김준영 -->
	<select id="select_connect_request" resultType="hashmap">
		select
			request.fap_comp_user_request_seq as fap_comp_user_request_seq
			, request.user_id as user_id
			, request.fap_comp_en_nm as fap_comp_en_nm
			, request.fap_comp_ja_nm as fap_comp_ja_nm
			, request.fap_comp_user_request_ck as fap_comp_user_request_ck
			, user.user_flag as user_flag
		from
			fap_comp_user_request_tb as request
		inner join com_user_tb as user
			on request.user_id = user.user_id
	</select>
	<!-- FAP 기업 - 담당자 연결 요청 가져오기 종료 -->
	
	<!-- FAP 기업 - 담당자 연결 요청 삭제 시작; 2019. 2. 7. 김준영 -->
	<delete id="delete_connect_request" parameterType="String">
		delete
		from
			fap_comp_user_request_tb
		where
			user_id = #{user_id}
	</delete>
	<!-- FAP 기업 - 담당자 연결 요청 삭제 종료 -->
	
	<!-- FAP 기업 - 담당자 연결 요청 삭제 시작; 2019. 2. 7. 김준영 -->
	<delete id="delete_connect_request_seq" parameterType="int">
		delete
		from
			fap_comp_user_request_tb
		where
			fap_comp_user_request_seq = #{fap_comp_user_request_seq}
	</delete>
	<!-- FAP 기업 - 담당자 연결 요청 삭제 종료 -->
	
	<!-- FAP 회원 정보 리스트 총 개수 가져오기 시작; 2019. 2. 11. 이재준 -->
	<select id="select_user_list_paging_count" resultType="Int">
		select
			count(*)
		from
			com_user_tb as com
		where
			com.user_state = 'A0200'
		and
			(((com.user_flag = 'A0100'
			  or
			  	com.user_flag = 'A0101'
			  or
			  	com.user_flag = 'A0102'
			  or
			  	com.user_flag = 'A0106'
			  )
			 and
			 	 com.user_id = (select
									user_id
					  	   	    from
					   				fap_personal_user_tb as personal
					   	   	    where
					   				com.user_id = personal.user_id
					   	       )
			 
			)
		or
			com.user_flag = 'A0103'
		or
			com.user_flag = 'A0104')
		order by
			user_udt_dt desc
	</select>
	<!-- FAP 회원 정보 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 기업 정보 리스트 총 개수 가져오기 시작; 2019. 8. 2. 김경아 -->
	<select id="select_company_list_paging_count" resultType="int" parameterType="hashmap">
		select
			count(*)
		from
			fap_company_user_tb
		where
		 	1=1
	 	<if test="searchJaNm!=null  ">
	 	and 
	 		fap_comp_ja_nm like concat('%',#{searchJaNm},'%')
	 	</if>
	 	<if test="searchEnNm!=null ">
	 	and 
	 		fap_comp_en_nm like concat('%',#{searchEnNm},'%')
	 	</if>
		order by
			fap_comp_udt_dt desc
	</select>
	<!-- FAP 기업 정보 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 대기중인 에이전시 - 기업 연결 리스트 가져오기 시작; 2019. 2. 14. 이재준 -->
	<select id="select_standby_ag_comp_connect_list" resultType="hashmap">
		select
			agency.fap_comp_id as ag_id
			, agency.fap_comp_en_nm as ag_en_nm
			, agency.fap_comp_ja_nm as ag_ja_nm
			, agency.fap_comp_business_num as ag_business_num
			, agency.fap_comp_rep as ag_rep
			, agency.fap_comp_major_bussiness as ag_major_bussiness
			, agency.fap_comp_homepage as ag_homepage
			, agency.fap_comp_postcode as ag_postcode
			, agency.fap_comp_address as ag_address
			, agency.fap_comp_address_detail as ag_address_detail
			, DATE_FORMAT(agency.fap_comp_est_dt, '%Y-%m-%d') as ag_est_dt
			, agency.fap_comp_stock as ag_stock
			, agency.fap_comp_3years_avg_sales as ag_3years_avg_sales
			, agency.fap_comp_employee_num as ag_employee_num
			, agency.fap_comp_scit_num as ag_scit_num
			, agency.fap_comp_korean_num as ag_korean_num
			, agency.fap_comp_foreigner_num as ag_foreigner_num
			, agency.fap_comp_ins_id as ag_ins_id
			, agency.fap_comp_ins_dt as ag_ins_dt
			, agency.fap_comp_udt_id as ag_udt_id
			, agency.fap_comp_udt_dt as ag_udt_dt
			, agency.fap_comp_log_saved as ag_log_saved
			, agency.fap_comp_log_origin as ag_log_origin
			, agency.fap_comp_log_using as ag_log_using
			, company.fap_comp_id as comp_id
			, company.fap_comp_en_nm as comp_en_nm
			, company.fap_comp_ja_nm as comp_ja_nm
			, company.fap_comp_business_num as comp_business_num
			, company.fap_comp_rep as comp_rep
			, company.fap_comp_major_bussiness as comp_major_bussiness
			, company.fap_comp_homepage as comp_homepage
			, company.fap_comp_postcode as comp_postcode
			, company.fap_comp_address as comp_address
			, company.fap_comp_address_detail as comp_address_detail
			, DATE_FORMAT(company.fap_comp_est_dt, '%Y-%m-%d') as comp_est_dt
			, company.fap_comp_stock as comp_stock
			, company.fap_comp_3years_avg_sales as comp_3years_avg_sales
			, company.fap_comp_employee_num as comp_employee_num
			, company.fap_comp_scit_num as comp_scit_num
			, company.fap_comp_korean_num as comp_korean_num
			, company.fap_comp_foreigner_num as comp_foreigner_num
			, company.fap_comp_ins_id as comp_ins_id
			, company.fap_comp_ins_dt as comp_ins_dt
			, company.fap_comp_udt_id as comp_udt_id
			, company.fap_comp_udt_dt as comp_udt_dt
			, company.fap_comp_log_saved as comp_log_saved
			, company.fap_comp_log_origin as comp_log_origin
			, company.fap_comp_log_using as comp_log_using
			, ag_comp_connect.fap_ag_comp_connect_seq as fap_ag_comp_connect_seq
			, ag_comp_connect.fap_ag_comp_connect_ck as fap_ag_comp_connect_ck
		from
			fap_company_user_tb as agency
			, fap_company_user_tb as company
			, fap_ag_comp_connect_tb as ag_comp_connect
		where
			agency.fap_comp_id = ag_comp_connect.fap_ag_id
			and company.fap_comp_id = ag_comp_connect.fap_comp_id
			and fap_ag_comp_connect_ck = 'B3801'
	</select>
	<!-- FAP 에이전시 - 기업 연결 리스트 가져오기 종료 -->
	
	<!-- FAP 대기중인 에이전시 - 기업 연결 리스트 총 개수 가져오기 시작; 2019. 2. 14. 이재준 -->
	<select id="select_standby_ag_comp_connect_list_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb as agency
			, fap_company_user_tb as company
			, fap_ag_comp_connect_tb as ag_comp_connect
		where
			agency.fap_comp_id = ag_comp_connect.fap_ag_id
			and company.fap_comp_id = ag_comp_connect.fap_comp_id
			and fap_ag_comp_connect_ck = 'B3801'
	</select>
	<!-- FAP 대기중인 에이전시 - 기업 연결 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 승인받은 에이전시 - 기업 연결 리스트 가져오기 시작; 2019. 2. 15. 이재준 -->
	<select id="select_approval_ag_comp_connect_list" resultType="hashmap">
		select
			agency.fap_comp_id as ag_id
			, agency.fap_comp_en_nm as ag_en_nm
			, agency.fap_comp_ja_nm as ag_ja_nm
			, agency.fap_comp_business_num as ag_business_num
			, agency.fap_comp_rep as ag_rep
			, agency.fap_comp_major_bussiness as ag_major_bussiness
			, agency.fap_comp_homepage as ag_homepage
			, agency.fap_comp_postcode as ag_postcode
			, agency.fap_comp_address as ag_address
			, agency.fap_comp_address_detail as ag_address_detail
			, DATE_FORMAT(agency.fap_comp_est_dt, '%Y-%m-%d') as ag_est_dt
			, agency.fap_comp_stock as ag_stock
			, agency.fap_comp_3years_avg_sales as ag_3years_avg_sales
			, agency.fap_comp_employee_num as ag_employee_num
			, agency.fap_comp_scit_num as ag_scit_num
			, agency.fap_comp_korean_num as ag_korean_num
			, agency.fap_comp_foreigner_num as ag_foreigner_num
			, agency.fap_comp_ins_id as ag_ins_id
			, agency.fap_comp_ins_dt as ag_ins_dt
			, agency.fap_comp_udt_id as ag_udt_id
			, agency.fap_comp_udt_dt as ag_udt_dt
			, agency.fap_comp_log_saved as ag_log_saved
			, agency.fap_comp_log_origin as ag_log_origin
			, agency.fap_comp_log_using as ag_log_using
			, company.fap_comp_id as comp_id
			, company.fap_comp_en_nm as comp_en_nm
			, company.fap_comp_ja_nm as comp_ja_nm
			, company.fap_comp_business_num as comp_business_num
			, company.fap_comp_rep as comp_rep
			, company.fap_comp_major_bussiness as comp_major_bussiness
			, company.fap_comp_homepage as comp_homepage
			, company.fap_comp_postcode as comp_postcode
			, company.fap_comp_address as comp_address
			, company.fap_comp_address_detail as comp_address_detail
			, DATE_FORMAT(company.fap_comp_est_dt, '%Y-%m-%d') as comp_est_dt
			, company.fap_comp_stock as comp_stock
			, company.fap_comp_3years_avg_sales as comp_3years_avg_sales
			, company.fap_comp_employee_num as comp_employee_num
			, company.fap_comp_scit_num as comp_scit_num
			, company.fap_comp_korean_num as comp_korean_num
			, company.fap_comp_foreigner_num as comp_foreigner_num
			, company.fap_comp_ins_id as comp_ins_id
			, company.fap_comp_ins_dt as comp_ins_dt
			, company.fap_comp_udt_id as comp_udt_id
			, company.fap_comp_udt_dt as comp_udt_dt
			, company.fap_comp_log_saved as comp_log_saved
			, company.fap_comp_log_origin as comp_log_origin
			, company.fap_comp_log_using as comp_log_using
			, ag_comp_connect.fap_ag_comp_connect_seq as fap_ag_comp_connect_seq
			, ag_comp_connect.fap_ag_comp_connect_ck as fap_ag_comp_connect_ck
		from
			fap_company_user_tb as agency
			, fap_company_user_tb as company
			, fap_ag_comp_connect_tb as ag_comp_connect
		where
			agency.fap_comp_id = ag_comp_connect.fap_ag_id
			and company.fap_comp_id = ag_comp_connect.fap_comp_id
			and fap_ag_comp_connect_ck = 'B3800'
	</select>
	<!-- FAP 승인받은 에이전시 - 기업 연결 리스트 가져오기 종료 -->
	
	<!-- FAP 승인받은 에이전시 - 기업 연결 리스트 총 개수 가져오기 시작; 2019. 2. 15. 이재준 -->
	<select id="select_approval_ag_comp_connect_list_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb as agency
			, fap_company_user_tb as company
			, fap_ag_comp_connect_tb as ag_comp_connect
		where
			agency.fap_comp_id = ag_comp_connect.fap_ag_id
			and company.fap_comp_id = ag_comp_connect.fap_comp_id
			and fap_ag_comp_connect_ck = 'B3800'
	</select>
	<!-- FAP 승인받은 에이전시 - 기업 연결 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 에이전시에 연결 되어있지 않은 기업 리스트 총 개수 가져오기 시작; 2019. 2. 15. 이재준 -->
	<select id="select_unconnect_comp_list_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb
		where
			fap_comp_id not in (select
									fap_comp_id
								from
									fap_ag_comp_connect_tb
								)
			and fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb as comp_user_connect
						   where
						   		user_id in (select
						   						user_id
						   				    from
						   				   		com_user_tb
						   				   	where
						   				   		user_flag = 'A0103'
						   				    )
						   		 )
		order by
			fap_comp_udt_dt desc
	</select>
	<!-- FAP 에이전시에 연결 되어있지 않은 기업 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 기업에 연결 될 에이전시 리스트 총 개수 가져오기 시작; 2019. 2. 15. 이재준 -->
	<select id="select_agency_list_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb as comp_user
		where
			fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb as comp_user_connect
						   where
						   		user_id in (select
						   						user_id
						   				    from
						   				   		com_user_tb
						   				   	where
						   				   		user_flag = 'A0104'
						   				   )
						   )
	</select>
	<!-- FAP 기업에 연결 될 에이전시 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 공지사항 삭제 시작; 2019. 2. 20. 김준영 -->
	<delete id="delete_notice" parameterType="int">
		delete
		from
			com_board_content_tb
		where
			board_content_seq = #{board_content_seq}
	</delete>
	<!-- FAP 공지사항 삭제 종료 -->
	
	<!-- FAP 잡페어 참가 기업 리스트 검색 시작; 2019. 02. 21. 신동철-->
	<select id="search_jobfair_attended_comp_list" resultType="hashmap">
		select distinct
			jobfair.fap_jobfair_title
			, comp_user.fap_comp_en_nm
		from
			fap_jobfair_comp_tb jobfair_comp
		inner join
			fap_jobfair_tb jobfair
			on jobfair.fap_jobfair_seq = jobfair_comp.fap_jobfair_seq
		inner join
			fap_company_user_tb comp_user
			on comp_user.fap_comp_id  = jobfair_comp.fap_comp_id
		order by
			comp_user.fap_comp_en_nm asc
	</select>
	<!-- FAP 잡페어 참가 기업 리스트 검색 종료 -->
	
	<!-- FAP 잡페어별 참가 기업 리스트 검색 시작; 2019. 02. 21. 신동철-->
	<select id="searched_jobfair_attended_comp_list" parameterType="hashmap" resultType="hashmap">
		select
			jobfair.fap_jobfair_title
			, jobfair_divide.fap_jobfair_divide_gb
			, comp_user.fap_comp_en_nm
			, DATE_FORMAT(jobfair_comp.fap_jobfair_comp_ins_dt, '%Y-%m-%d %T') as fap_jobfair_comp_ins_dt
		from
			fap_jobfair_comp_tb jobfair_comp
		inner join
			fap_jobfair_tb jobfair
			on jobfair.fap_jobfair_seq = jobfair_comp.fap_jobfair_seq
		inner join
			fap_jobfair_divide_tb jobfair_divide
			on jobfair_divide.fap_jobfair_divide_seq = jobfair_comp.fap_jobfair_divide_seq
		inner join
			fap_company_user_tb comp_user
			on comp_user.fap_comp_id  = jobfair_comp.fap_comp_id
		where
			jobfair_comp.fap_jobfair_seq = #{fap_jobfair_seq}
			<if test="fap_jobfair_divide_seq != null and fap_jobfair_divide_seq != 0">
				and jobfair_comp.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			</if>
		order by
			comp_user.fap_comp_en_nm asc
	</select>
	<!-- FAP 잡페어별 참가 기업 리스트 검색 종료 -->
	
	<!-- FAP 거절한 에이전시 - 기업 연결 리스트 가져오기 시작; 2019. 2. 20. 이재준 -->
	<select id="select_refusal_ag_comp_connect_list" resultType="hashmap">
		select
			agency.fap_comp_id as ag_id
			, agency.fap_comp_en_nm as ag_en_nm
			, agency.fap_comp_ja_nm as ag_ja_nm
			, agency.fap_comp_business_num as ag_business_num
			, agency.fap_comp_rep as ag_rep
			, agency.fap_comp_major_bussiness as ag_major_bussiness
			, agency.fap_comp_homepage as ag_homepage
			, agency.fap_comp_postcode as ag_postcode
			, agency.fap_comp_address as ag_address
			, agency.fap_comp_address_detail as ag_address_detail
			, DATE_FORMAT(agency.fap_comp_est_dt, '%Y-%m-%d') as ag_est_dt
			, agency.fap_comp_stock as ag_stock
			, agency.fap_comp_3years_avg_sales as ag_3years_avg_sales
			, agency.fap_comp_employee_num as ag_employee_num
			, agency.fap_comp_scit_num as ag_scit_num
			, agency.fap_comp_korean_num as ag_korean_num
			, agency.fap_comp_foreigner_num as ag_foreigner_num
			, agency.fap_comp_ins_id as ag_ins_id
			, agency.fap_comp_ins_dt as ag_ins_dt
			, agency.fap_comp_udt_id as ag_udt_id
			, agency.fap_comp_udt_dt as ag_udt_dt
			, agency.fap_comp_log_saved as ag_log_saved
			, agency.fap_comp_log_origin as ag_log_origin
			, agency.fap_comp_log_using as ag_log_using
			, company.fap_comp_id as comp_id
			, company.fap_comp_en_nm as comp_en_nm
			, company.fap_comp_ja_nm as comp_ja_nm
			, company.fap_comp_business_num as comp_business_num
			, company.fap_comp_rep as comp_rep
			, company.fap_comp_major_bussiness as comp_major_bussiness
			, company.fap_comp_homepage as comp_homepage
			, company.fap_comp_postcode as comp_postcode
			, company.fap_comp_address as comp_address
			, company.fap_comp_address_detail as comp_address_detail
			, DATE_FORMAT(company.fap_comp_est_dt, '%Y-%m-%d') as comp_est_dt
			, company.fap_comp_stock as comp_stock
			, company.fap_comp_3years_avg_sales as comp_3years_avg_sales
			, company.fap_comp_employee_num as comp_employee_num
			, company.fap_comp_scit_num as comp_scit_num
			, company.fap_comp_korean_num as comp_korean_num
			, company.fap_comp_foreigner_num as comp_foreigner_num
			, company.fap_comp_ins_id as comp_ins_id
			, company.fap_comp_ins_dt as comp_ins_dt
			, company.fap_comp_udt_id as comp_udt_id
			, company.fap_comp_udt_dt as comp_udt_dt
			, company.fap_comp_log_saved as comp_log_saved
			, company.fap_comp_log_origin as comp_log_origin
			, company.fap_comp_log_using as comp_log_using
			, ag_comp_connect.fap_ag_comp_connect_seq as fap_ag_comp_connect_seq
			, ag_comp_connect.fap_ag_comp_connect_ck as fap_ag_comp_connect_ck
		from
			fap_company_user_tb as agency
			, fap_company_user_tb as company
			, fap_ag_comp_connect_tb as ag_comp_connect
		where
			agency.fap_comp_id = ag_comp_connect.fap_ag_id
			and company.fap_comp_id = ag_comp_connect.fap_comp_id
			and fap_ag_comp_connect_ck = 'B3802'
	</select>
	<!-- FAP 거절한 에이전시 - 기업 연결 리스트 가져오기 종료 -->
	
	<!-- FAP 거절한 에이전시 - 기업 연결 리스트 총 개수 가져오기 시작; 2019. 2. 20. 이재준 -->
	<select id="select_refusal_ag_comp_connect_list_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb as agency
			, fap_company_user_tb as company
			, fap_ag_comp_connect_tb as ag_comp_connect
		where
			agency.fap_comp_id = ag_comp_connect.fap_ag_id
			and company.fap_comp_id = ag_comp_connect.fap_comp_id
			and fap_ag_comp_connect_ck = 'B3802'
	</select>
	<!-- FAP 거절한 에이전시 - 기업 연결 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 대기중인 담당자 - 기업 연결 리스트 불러오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_standby_comp_user_connect" resultType="hashmap">
		select
        	com_user.user_id as user_id
        	, com_user.user_nm as user_nm
        	, com_user.user_phone as user_phone
        	, com_user.user_email as user_email
        	, com_user.user_sex as user_sex
        	, com_user.user_flag as user_flag
        	, com_user.user_state as user_state
	        , com_user.user_ins_id as user_ins_id
	        , com_user.user_ins_dt as user_ins_dt
	        , com_user.user_udt_id as user_udt_id
	        , com_user.user_udt_dt as user_udt_dt
	        , comp_user.fap_comp_id as fap_comp_id
	        , comp_user.fap_comp_en_nm as fap_comp_en_nm
	        , comp_user.fap_comp_ja_nm as fap_comp_ja_nm
	        , comp_user.fap_comp_business_num as fap_comp_business_num
	        , comp_user.fap_comp_rep as fap_comp_rep
	        , comp_user.fap_comp_major_bussiness as fap_comp_major_bussiness
	        , comp_user.fap_comp_homepage as fap_comp_homepage
	        , comp_user.fap_comp_postcode as fap_comp_postcode
	        , comp_user.fap_comp_address as fap_comp_address
	        , comp_user.fap_comp_address_detail as fap_comp_address_detail
	        , comp_user.fap_comp_est_dt as fap_comp_est_dt
	        , comp_user.fap_comp_stock as fap_comp_stock
	        , comp_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
	        , comp_user.fap_comp_employee_num as fap_comp_employee_num
	        , comp_user.fap_comp_scit_num as fap_comp_scit_num
	        , comp_user.fap_comp_korean_num as fap_comp_korean_num
	        , comp_user.fap_comp_foreigner_num as fap_comp_foreigner_num
	        , comp_user.fap_comp_ins_id as fap_comp_ins_id
	        , comp_user.fap_comp_ins_dt as fap_comp_ins_dt
	        , comp_user.fap_comp_udt_id as fap_comp_udt_id
	        , comp_user.fap_comp_udt_dt as fap_comp_udt_dt
	        , comp_user.fap_comp_log_saved as fap_comp_log_saved
	        , comp_user.fap_comp_log_origin as fap_comp_log_origin
	        , comp_user.fap_comp_log_using as fap_comp_log_using
	        , comp_user_connect.fap_comp_user_connect_seq as fap_comp_user_connect_seq
	        , comp_user_connect.fap_comp_user_connect_ck as fap_comp_user_connect_ck
		from
         	com_user_tb as com_user
      	natural join
         	fap_company_user_tb as comp_user
      	natural join
         	fap_comp_user_connect_tb as comp_user_connect
         where
			fap_comp_user_connect_ck = 'B3801'
	</select>
	<!-- FAP 대기중인 담당자 - 기업 연결 리스트 불러오기 종료 -->
	
	<!-- FAP 대기중인 담당자 - 기업 연결 리스트 총 개수 가져오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_standby_comp_user_connect_list_paging_count" resultType="Int">
		select
			count(*)
		from
         	com_user_tb as com_user
      	natural join
         	fap_company_user_tb as comp_user
      	natural join
         	fap_comp_user_connect_tb as comp_user_connect
         where
			fap_comp_user_connect_ck = 'B3801'
	</select>
	<!-- FAP 대기중인 담당자 - 기업 연결 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 승인한 담당자 - 기업 연결 리스트 불러오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_approval_comp_user_connect" resultType="hashmap">
		select
        	com_user.user_id as user_id
        	, com_user.user_nm as user_nm
        	, com_user.user_phone as user_phone
        	, com_user.user_email as user_email
        	, com_user.user_sex as user_sex
        	, com_user.user_flag as user_flag
        	, com_user.user_state as user_state
	        , com_user.user_ins_id as user_ins_id
	        , com_user.user_ins_dt as user_ins_dt
	        , com_user.user_udt_id as user_udt_id
	        , com_user.user_udt_dt as user_udt_dt
	        , comp_user.fap_comp_id as fap_comp_id
	        , comp_user.fap_comp_en_nm as fap_comp_en_nm
	        , comp_user.fap_comp_ja_nm as fap_comp_ja_nm
	        , comp_user.fap_comp_business_num as fap_comp_business_num
	        , comp_user.fap_comp_rep as fap_comp_rep
	        , comp_user.fap_comp_major_bussiness as fap_comp_major_bussiness
	        , comp_user.fap_comp_homepage as fap_comp_homepage
	        , comp_user.fap_comp_postcode as fap_comp_postcode
	        , comp_user.fap_comp_address as fap_comp_address
	        , comp_user.fap_comp_address_detail as fap_comp_address_detail
	        , comp_user.fap_comp_est_dt as fap_comp_est_dt
	        , comp_user.fap_comp_stock as fap_comp_stock
	        , comp_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
	        , comp_user.fap_comp_employee_num as fap_comp_employee_num
	        , comp_user.fap_comp_scit_num as fap_comp_scit_num
	        , comp_user.fap_comp_korean_num as fap_comp_korean_num
	        , comp_user.fap_comp_foreigner_num as fap_comp_foreigner_num
	        , comp_user.fap_comp_ins_id as fap_comp_ins_id
	        , comp_user.fap_comp_ins_dt as fap_comp_ins_dt
	        , comp_user.fap_comp_udt_id as fap_comp_udt_id
	        , comp_user.fap_comp_udt_dt as fap_comp_udt_dt
	        , comp_user.fap_comp_log_saved as fap_comp_log_saved
	        , comp_user.fap_comp_log_origin as fap_comp_log_origin
	        , comp_user.fap_comp_log_using as fap_comp_log_using
	        , comp_user_connect.fap_comp_user_connect_seq as fap_comp_user_connect_seq
	        , comp_user_connect.fap_comp_user_connect_ck as fap_comp_user_connect_ck
		from
         	com_user_tb as com_user
      	natural join
         	fap_company_user_tb as comp_user
      	natural join
         	fap_comp_user_connect_tb as comp_user_connect
         where
			fap_comp_user_connect_ck = 'B3800'
	</select>
	<!-- FAP 승인한 담당자 - 기업 연결 리스트 불러오기 종료 -->
	
	<!-- FAP 승인한 담당자 - 기업 연결 리스트 총 개수 가져오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_approval_comp_user_connect_list_paging_count" resultType="Int">
		select
			count(*)
		from
         	com_user_tb as com_user
      	natural join
         	fap_company_user_tb as comp_user
      	natural join
         	fap_comp_user_connect_tb as comp_user_connect
         where
			fap_comp_user_connect_ck = 'B3800'
	</select>
	<!-- FAP 승인한 담당자 - 기업 연결 리스트 총 개수 가져오기 종료 -->
	
	<!-- FAP 거절한 담당자 - 기업 연결 리스트 불러오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_refusal_comp_user_connect" resultType="hashmap">
		select
        	com_user.user_id as user_id
        	, com_user.user_nm as user_nm
        	, com_user.user_phone as user_phone
        	, com_user.user_email as user_email
        	, com_user.user_sex as user_sex
        	, com_user.user_flag as user_flag
        	, com_user.user_state as user_state
	        , com_user.user_ins_id as user_ins_id
	        , com_user.user_ins_dt as user_ins_dt
	        , com_user.user_udt_id as user_udt_id
	        , com_user.user_udt_dt as user_udt_dt
	        , comp_user.fap_comp_id as fap_comp_id
	        , comp_user.fap_comp_en_nm as fap_comp_en_nm
	        , comp_user.fap_comp_ja_nm as fap_comp_ja_nm
	        , comp_user.fap_comp_business_num as fap_comp_business_num
	        , comp_user.fap_comp_rep as fap_comp_rep
	        , comp_user.fap_comp_major_bussiness as fap_comp_major_bussiness
	        , comp_user.fap_comp_homepage as fap_comp_homepage
	        , comp_user.fap_comp_postcode as fap_comp_postcode
	        , comp_user.fap_comp_address as fap_comp_address
	        , comp_user.fap_comp_address_detail as fap_comp_address_detail
	        , comp_user.fap_comp_est_dt as fap_comp_est_dt
	        , comp_user.fap_comp_stock as fap_comp_stock
	        , comp_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
	        , comp_user.fap_comp_employee_num as fap_comp_employee_num
	        , comp_user.fap_comp_scit_num as fap_comp_scit_num
	        , comp_user.fap_comp_korean_num as fap_comp_korean_num
	        , comp_user.fap_comp_foreigner_num as fap_comp_foreigner_num
	        , comp_user.fap_comp_ins_id as fap_comp_ins_id
	        , comp_user.fap_comp_ins_dt as fap_comp_ins_dt
	        , comp_user.fap_comp_udt_id as fap_comp_udt_id
	        , comp_user.fap_comp_udt_dt as fap_comp_udt_dt
	        , comp_user.fap_comp_log_saved as fap_comp_log_saved
	        , comp_user.fap_comp_log_origin as fap_comp_log_origin
	        , comp_user.fap_comp_log_using as fap_comp_log_using
	        , comp_user_connect.fap_comp_user_connect_seq as fap_comp_user_connect_seq
	        , comp_user_connect.fap_comp_user_connect_ck as fap_comp_user_connect_ck
		from
         	com_user_tb as com_user
      	natural join
         	fap_company_user_tb as comp_user
      	natural join
         	fap_comp_user_connect_tb as comp_user_connect
         where
			fap_comp_user_connect_ck = 'B3802'
	</select>
	<!-- FAP 거절한 담당자 - 기업 연결 리스트 불러오기 종료 -->
	
	<!-- FAP 거절한 담당자 - 기업 연결 리스트 총 개수 가져오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_refusal_comp_user_connect_list_paging_count" resultType="Int">
		select
			count(*)
		from
         	com_user_tb as com_user
      	natural join
         	fap_company_user_tb as comp_user
      	natural join
         	fap_comp_user_connect_tb as comp_user_connect
         where
			fap_comp_user_connect_ck = 'B3802'
	</select>
	<!-- FAP 거절한 담당자 - 기업 연결 리스트 총 개수 가져오기 종료 -->

	<!-- FAP 기업 - 담당자 연결 요청 개수 가져오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_connect_request_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_comp_user_request_tb as request
		inner join com_user_tb as user
			on request.user_id = user.user_id
	</select>
	<!-- FAP 기업 - 담당자 연결 요청 개수 가져오기 종료 -->
	
	<!-- FAP 연결 객체가 없어 불명확한 기업 리스트 개수 가져오기 시작; 2019. 2. 21. 이재준 -->
	<select id="select_uncertain_company_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb
		where
			fap_comp_id not in (select
						   			fap_comp_id
						   		from
						   			fap_comp_user_connect_tb
						   		)
	</select>
	<!-- FAP 연결 객체가 없어 불명확한 기업 리스트 개수 가져오기 종료 -->
	
	<!-- FAP 기업과 연결 되지 않은 유저(기업) 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_unconnect_company_list" resultType="User">
		select
			user_id
			, user_pw
			, user_nm
			, user_phone
			, user_email
			, user_birth
			, user_sex
			, user_flag
			, user_state
			, user_ins_id
			, user_ins_dt
			, user_udt_id
			, user_udt_dt
		from
			com_user_tb
		where
			user_id not in (select
								user_id
					    	from
								fap_comp_user_connect_tb
					    	)
			and user_flag = 'A0103' 
				
	</select>
	<!-- FAP 기업과 연결 되지 않은 유저(기업) 가져오기 종료 -->	
	
	<!-- FAP 기업과 연결 되지 않은 유저(기업) 개수 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_unconnect_company_list_paging_count" resultType="Int">
		select
			count(*)
		from
			com_user_tb
		where
			user_id not in (select
								user_id
					    	from
								fap_comp_user_connect_tb
					    	)
			and user_flag = 'A0103' 
	</select>
	<!-- FAP 기업과 연결 되지 않은 유저(기업) 개수 가져오기 종료 -->
	
	<!-- FAP 기업과 연결 되지 않은 유저(에이전기) 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_unconnect_agency_list" resultType="User">
		select
			user_id
			, user_pw
			, user_nm
			, user_phone
			, user_email
			, user_birth
			, user_sex
			, user_flag
			, user_state
			, user_ins_id
			, user_ins_dt
			, user_udt_id
			, user_udt_dt
		from
			com_user_tb
		where
			user_id not in (select
								user_id
					    	from
								fap_comp_user_connect_tb
					    	)
			and user_flag = 'A0104' 
				
	</select>
	<!-- FAP 기업과 연결 되지 않은 유저(에이전시) 가져오기 종료 -->	
	
	<!-- FAP 기업과 연결 되지 않은 유저(에이전기)수 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_unconnect_agency_list_paging_count" resultType="Int">
		select
			count(*)
		from
			com_user_tb
		where
			user_id not in (select
								user_id
					    	from
								fap_comp_user_connect_tb
					    	)
			and user_flag = 'A0104' 
				
	</select>
	<!-- FAP 기업과 연결 되지 않은 유저(에이전시)수 가져오기 종료 -->	
	
	<!-- FAP 담당자와 연결 할 기업 리스트 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_connect_company_list" resultType="hashmap">
		select
			company_user.fap_comp_id as fap_comp_id
			, company_user.fap_comp_en_nm as fap_comp_en_nm
			, company_user.fap_comp_ja_nm as fap_comp_ja_nm
			, company_user.fap_comp_business_num as fap_comp_business_num
			, company_user.fap_comp_rep as fap_comp_rep
			, company_user.fap_comp_major_bussiness as fap_comp_major_bussiness
			, company_user.fap_comp_homepage as fap_comp_homepage
			, company_user.fap_comp_postcode as fap_comp_postcode
			, company_user.fap_comp_address as fap_comp_address
			, company_user.fap_comp_address_detail as fap_comp_address_detail
			, DATE_FORMAT(company_user.fap_comp_est_dt, '%Y-%m-%d') as fap_comp_est_dt
			, company_user.fap_comp_stock as fap_comp_stock
			, company_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
			, company_user.fap_comp_employee_num as fap_comp_employee_num
			, company_user.fap_comp_scit_num as fap_comp_scit_num
			, company_user.fap_comp_korean_num as fap_comp_korean_num
			, company_user.fap_comp_foreigner_num as fap_comp_foreigner_num
			, company_user.fap_comp_ins_id as fap_comp_ins_id
			, company_user.fap_comp_ins_dt as fap_comp_ins_dt
			, company_user.fap_comp_udt_id as fap_comp_udt_id
			, company_user.fap_comp_udt_dt as fap_comp_udt_dt
			, company_user.fap_comp_log_saved as fap_comp_log_saved
			, company_user.fap_comp_log_origin as fap_comp_log_origin
			, company_user.fap_comp_log_using as fap_comp_log_using
			, com_user.user_flag as user_flag
		from
			fap_company_user_tb as company_user
			, fap_comp_user_connect_tb as comp_user_connect
			, com_user_tb as com_user
		where
			company_user.fap_comp_id = comp_user_connect.fap_comp_id
			and com_user.user_id = comp_user_connect.user_id
			and comp_user_connect.fap_comp_user_connect_ck = 'B3800'
			and user_flag = 'A0103' 
		order by
			company_user.fap_comp_udt_id desc
	</select>
	<!-- FAP 담당자와 연결 할 기업 리스트 가져오기 종료; 2019. 2. 22. 이재준 -->
	
	<!-- FAP 담당자와 연결 할 기업 리스트 개수 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_connect_company_list_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb as company_user
			, fap_comp_user_connect_tb as comp_user_connect
			, com_user_tb as com_user
		where
			company_user.fap_comp_id = comp_user_connect.fap_comp_id
			and com_user.user_id = comp_user_connect.user_id
			and comp_user_connect.fap_comp_user_connect_ck = 'B3800'
			and user_flag = 'A0103' 
		order by
			company_user.fap_comp_udt_id desc
	</select>
	<!-- FAP 담당자와 연결 할 기업 리스트 개수 가져오기 종료; 2019. 2. 22. 이재준 -->
	
	<!-- FAP 담당자와 연결 할 에이전시 리스트 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_connect_agency_list" resultType="hashmap">
		select
			company_user.fap_comp_id as fap_comp_id
			, company_user.fap_comp_en_nm as fap_comp_en_nm
			, company_user.fap_comp_ja_nm as fap_comp_ja_nm
			, company_user.fap_comp_business_num as fap_comp_business_num
			, company_user.fap_comp_rep as fap_comp_rep
			, company_user.fap_comp_major_bussiness as fap_comp_major_bussiness
			, company_user.fap_comp_homepage as fap_comp_homepage
			, company_user.fap_comp_postcode as fap_comp_postcode
			, company_user.fap_comp_address as fap_comp_address
			, company_user.fap_comp_address_detail as fap_comp_address_detail
			, DATE_FORMAT(company_user.fap_comp_est_dt, '%Y-%m-%d') as fap_comp_est_dt
			, company_user.fap_comp_stock as fap_comp_stock
			, company_user.fap_comp_3years_avg_sales as fap_comp_3years_avg_sales
			, company_user.fap_comp_employee_num as fap_comp_employee_num
			, company_user.fap_comp_scit_num as fap_comp_scit_num
			, company_user.fap_comp_korean_num as fap_comp_korean_num
			, company_user.fap_comp_foreigner_num as fap_comp_foreigner_num
			, company_user.fap_comp_ins_id as fap_comp_ins_id
			, company_user.fap_comp_ins_dt as fap_comp_ins_dt
			, company_user.fap_comp_udt_id as fap_comp_udt_id
			, company_user.fap_comp_udt_dt as fap_comp_udt_dt
			, company_user.fap_comp_log_saved as fap_comp_log_saved
			, company_user.fap_comp_log_origin as fap_comp_log_origin
			, company_user.fap_comp_log_using as fap_comp_log_using
			, com_user.user_flag as user_flag
		from
			fap_company_user_tb as company_user
			, fap_comp_user_connect_tb as comp_user_connect
			, com_user_tb as com_user
		where
			company_user.fap_comp_id = comp_user_connect.fap_comp_id
			and com_user.user_id = comp_user_connect.user_id
			and comp_user_connect.fap_comp_user_connect_ck = 'B3800'
			and user_flag = 'A0104' 
		order by
			company_user.fap_comp_udt_id desc
	</select>
	<!-- FAP 담당자와 연결 할 에이전시 리스트 가져오기 종료; 2019. 2. 22. 이재준 -->
	
	<!-- FAP 담당자와 연결 할 에이전시 리스트 개수 가져오기 시작; 2019. 2. 22. 이재준 -->
	<select id="select_connect_agency_list_paging_count" resultType="Int">
		select
			count(*)
		from
			fap_company_user_tb as company_user
			, fap_comp_user_connect_tb as comp_user_connect
			, com_user_tb as com_user
		where
			company_user.fap_comp_id = comp_user_connect.fap_comp_id
			and com_user.user_id = comp_user_connect.user_id
			and comp_user_connect.fap_comp_user_connect_ck = 'B3800'
			and user_flag = 'A0104' 
		order by
			company_user.fap_comp_udt_id desc
	</select>
	<!-- FAP 담당자와 연결 할 에이전시 리스트 개수 가져오기 종료; 2019. 2. 22. 이재준 -->
	
	<!-- FAP 관리자 지원가능 시간 정보 가져오기 시작 2019. 2. 21 원병호 -->
	<!-- 최초허가 -->
	<select id="select_jobfair_applicable_time_first" parameterType="int" resultType="FAPJobfairApplicableTime">
		select
			app_time.fap_jobfair_applicable_time_seq
			, app_time.fap_jobfair_divide_seq
			, app_time.fap_jobfair_applicable_time_first
			, DATE_FORMAT(app_time.fap_jobfair_applicable_time_st, '%Y-%m-%d %H:%i:%S') as fap_jobfair_applicable_time_st
			, DATE_FORMAT(app_time.fap_jobfair_applicable_time_et, '%Y-%m-%d %H:%i:%S') as fap_jobfair_applicable_time_et
			, app_time.fap_jobfair_applicable_time_nm
			, app_time.fap_jobfair_applicable_time_deadline_gb
		from
			fap_jobfair_applicable_time_tb app_time
		where
		 	app_time.fap_jobfair_applicable_time_first = 'D0300'
		and
			app_time.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}				
	</select>
	
 
 
	<!-- 미스매칭 / 추가허가 : FAP 관리자 지원가능 시간 정보 가져오기 시작 2019. 2. 21 원병호 -->
	<select id="select_jobfair_applicable_time" parameterType="int" resultType="hashmap">
		select
			app_time.fap_jobfair_applicable_time_seq
			, app_time.fap_jobfair_divide_seq
			, app_time.fap_jobfair_applicable_time_first
			, DATE_FORMAT(app_time.fap_jobfair_applicable_time_st, '%Y-%m-%d %H:%i:%S') as fap_jobfair_applicable_time_st
			, DATE_FORMAT(app_time.fap_jobfair_applicable_time_et, '%Y-%m-%d %H:%i:%S') as fap_jobfair_applicable_time_et
			, app_time.fap_jobfair_applicable_time_nm
			, app_time.fap_jobfair_applicable_time_deadline_gb			 			
		from
			fap_jobfair_applicable_time_tb app_time	  
		where
		 	app_time.fap_jobfair_applicable_time_first != 'D0300'
		and
			app_time.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}	
	</select>
	   <!-- FAP 관리자 지원가능 시간 정보 가져오기 종료  -->
	  
	  
	  
	
	<!--FAP 관리자 지원룰 정보 추가 시작 2019. 8. 08. 김경아 -->
    <insert id="insert_jobfair_apply_info">
		    insert into 
				 fap_jobfair_apply_rule_tb(  
					     fap_job_ad_seq
					   , fap_jobfair_applicable_time_seq
					   , fap_jobfair_apply_rule_gb
					   , fap_jobfair_apply_rule_ins_id
					   , fap_jobfair_apply_rule_udt_id
			   )values(  
						  #{fap_job_ad_seq}
					    , #{fap_jobfair_applicable_time_seq}
					    , 'D1900' 
					    , #{fap_jobfair_apply_rule_ins_id}
					    , #{fap_jobfair_apply_rule_udt_id}
			   )
    </insert>	
    <!--FAP 관리자 지원룰 정보 추가 종료 -->
 
	<!-- FAP 잡페어별 취업지원자 지망개수 검색 시작; 2019. 2. 25 신동철 -->
	<select id="search_user_apply_numbers" parameterType="int" resultType="hashmap">
		select
			num.fap_user_apply_numbers_seq
			, num.user_id
			, num.fap_jobfair_divide_seq
			, num.fap_user_apply_numbers_fixed
			, num.fap_user_apply_numbers_count
			, num.fap_user_apply_numbers_auto_gb
			, user.user_nm
			, user.user_flag
		from
			fap_user_apply_numbers_tb num
			inner join com_user_tb user
				on user.user_id = num.user_id
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 잡페어별 취업지원자 지망개수 검색 끝 -->

	<!-- 지원자 지망가능 갯수 수정 시작; 2019. 2. 25. 신동철 -->
	<update id="update_user_apply_numbers" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_user_apply_numbers_tb
			set			
		      	fap_user_apply_numbers_fixed = #{element.fap_user_apply_numbers_fixed}
		      	, fap_user_apply_numbers_auto_gb = #{element.fap_user_apply_numbers_auto_gb}
		      	, fap_user_apply_numbers_udt_id = #{element.fap_user_apply_numbers_udt_id}
			where			
				fap_user_apply_numbers_seq = #{element.fap_user_apply_numbers_seq}
		</foreach>
	</update>
	<!-- 지원자 지망가능 갯수 수정 종료 -->

	<insert id="insert_jobfair_applicable_time_one" parameterType="FAPJobfairApplicableTime">
		insert into
			fap_jobfair_applicable_time_tb
			(
                fap_jobfair_divide_seq
                , fap_jobfair_applicable_time_first
                , fap_jobfair_applicable_time_st
                , fap_jobfair_applicable_time_et
                , fap_jobfair_applicable_time_deadline_gb
                , fap_jobfair_applicable_time_nm
                , fap_jobfair_applicable_time_ins_id
                , fap_jobfair_applicable_time_ins_dt
                , fap_jobfair_applicable_time_udt_id
                , fap_jobfair_applicable_time_udt_dt
			)values
			(
				#{fap_jobfair_divide_seq}
                , #{fap_jobfair_applicable_time_first}
                , #{fap_jobfair_applicable_time_st}
                , #{fap_jobfair_applicable_time_et}
                , 'D0400'
                , #{fap_jobfair_applicable_time_nm}
                , #{fap_jobfair_applicable_time_ins_id}                
                , now()
                , #{fap_jobfair_applicable_time_udt_id}
                , now()
			)
			
	</insert>

	<!-- FAP 취업지원자 채용공고 지원가능시간 정보 수정(단일) 시작; 2019. 3. 04. 원병호 -->
	<update id="update_jobfair_applicable_time_one" parameterType="FAPJobfairApplicableTime">
		update
			fap_jobfair_applicable_time_tb
		set			
	      	fap_jobfair_applicable_time_first = #{fap_jobfair_applicable_time_first}
			, fap_jobfair_applicable_time_st = #{fap_jobfair_applicable_time_st}
			, fap_jobfair_applicable_time_et = #{fap_jobfair_applicable_time_et}
			, fap_jobfair_applicable_time_nm = #{fap_jobfair_applicable_time_nm}
			, fap_jobfair_applicable_time_udt_id = #{fap_jobfair_applicable_time_udt_id}
			, fap_jobfair_applicable_time_udt_dt = now()
		where			
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and fap_jobfair_applicable_time_seq = #{fap_jobfair_applicable_time_seq}
	</update>
	<!-- FAP 취업지원자 채용공고 지원가능시간 정보 수정 종료 -->

	<!-- FAP 취업지원자 채용공고 지원가능시간 정보 삭제 시작; 2019. 3. 04. 원병호 -->
	<delete id="delete_jobfair_applicable_time" parameterType="int">
		delete from
			fap_jobfair_applicable_time_tb
		where
			fap_jobfair_applicable_time_seq = #{fap_jobfair_applicable_time_seq}	    
	</delete>
	<!-- FAP 취업지원자 채용공고 지원가능시간 정보 삭제 끝  -->
	
	<!-- FAP 취업지원자 채용공고  지원정보 삭제 시작; 2019. 8. 16. 김경아 -->
	<delete id="delete_jobfair_divide_seq_from_apply_info" parameterType="int">
		delete from
			fap_comp_add_apply_info_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}	    
	</delete>
	<!-- FAP 취업지원자 채용공고 지원가능시간 정보 삭제 끝  -->
	
	<!-- FAP 잡페어 게시판 수정 시작; 2019. 3. 5 신동철 -->
	<update id="update_board_content" parameterType="BoardContent">
		update
			com_board_content_tb
		set
			board_content_title = #{board_content_title}
			, board_content_ct = #{board_content_ct}
			, board_content_nm = #{board_content_nm}
			, board_content_imp = #{board_content_imp}
			, board_content_udt_id = #{board_content_udt_id}
			, board_content_udt_dt = now()
		where
			board_content_seq = #{board_content_seq}
	</update>	
	<!-- FAP 잡페어 게시판 수정 종료 -->
	
	<!-- FAP 잡페어 공지사항 수정 시작; 2019. 3. 5 신동철 -->
	<update id="update_notice_content" parameterType="FapNoticeContent">
		update
			fap_notice_content_tb
		set
			fap_notice_view_target_ck = #{fap_notice_view_target_ck}
			, fap_notice_kind = #{fap_notice_kind}
		where
			fap_notice_seq = #{fap_notice_seq}
	</update>	
	<!-- FAP 잡페어 공지사항 수정 종료 -->
	
	<!-- 게시물 파일 삭제 시작; 2019. 3. 5 신동철 -->
	<delete id="delete_board_file" parameterType="int">
		delete from
		 	com_board_file_tb
		where
			board_file_seq = #{board_file_seq}
	</delete>
	<!-- 게시물 파일 삭제 종료 -->
	
	<!-- 채용공고 Q&A 기업명 검색 시작; 2019. 3. 6. 신동철 -->
	<select id="search_qna_comp" resultType="hashmap">
		select distinct
			job_ad.fap_comp_id
			, comp_user.fap_comp_en_nm
		from
			fap_job_qna_question_tb qna_que
			inner join fap_job_ad_tb job_ad
				on qna_que.fap_job_ad_seq = job_ad.fap_job_ad_seq
			inner join fap_company_user_tb comp_user
				on comp_user.fap_comp_id = job_ad.fap_comp_id
		order by
			comp_user.fap_comp_en_nm asc
	</select>
	<!-- 채용공고 Q&A 기업명 검색 종료 -->
	
	<!-- 채용공고 Q&A 채용공고 검색 시작; 2019. 3. 6. 신동철 -->
	<select id="search_qna_job_ad" parameterType="String" resultType="hashmap">
		select distinct
			job_ad.fap_job_ad_seq
			, job_ad.fap_job_ad_title
		from
			fap_job_qna_question_tb qna_que
			inner join fap_job_ad_tb job_ad
				on qna_que.fap_job_ad_seq = job_ad.fap_job_ad_seq
		where
			(job_ad.fap_job_ad_state = 'C2101'
			or job_ad.fap_job_ad_state = 'C2102')
			and job_ad.fap_comp_id = #{fap_comp_id}
	</select>
	<!-- 채용공고 Q&A 채용공고 검색 종료 -->
	
	<!-- 채용공고 Q&A 질문 정보 검색 시작; 2019. 3. 6. 신동철 -->
	<select id="search_job_qna_question_info" parameterType="hashmap" resultType="hashmap">
		select
			comp_user.fap_comp_en_nm
			, job_ad.fap_job_ad_title
			, qna_que.fap_job_qna_question_seq
			, qna_que.fap_job_qna_question_title
			, qna_que.fap_job_qna_question_content
			, qna_que.fap_job_qna_refuse_reason
			, DATE_FORMAT(qna_que.fap_job_qna_question_ins_dt, '%Y-%m-%d') as fap_job_qna_question_ins_dt
			, qna_que.fap_job_qna_question_per
			, qna_que.fap_job_qna_refuse_reason
			, user.user_id
			, user.user_nm
		from
			fap_job_qna_question_tb qna_que
			inner join fap_job_ad_tb job_ad
				on qna_que.fap_job_ad_seq = job_ad.fap_job_ad_seq
			inner join fap_company_user_tb comp_user
				on comp_user.fap_comp_id = job_ad.fap_comp_id
			inner join com_user_tb user
				on user.user_id = qna_que.fap_job_qna_question_ins_id
		where
			(job_ad.fap_job_ad_state = 'C2101'
			or job_ad.fap_job_ad_state = 'C2102')
			<if test="fap_comp_id != null and fap_comp_id != '' ">
				and job_ad.fap_comp_id = #{fap_comp_id}
			</if>
			<if test="fap_job_ad_seq != null and fap_job_ad_seq != 0 ">
				and qna_que.fap_job_ad_seq = #{fap_job_ad_seq}
			</if>
			<if test="fap_job_qna_question_per != null and fap_job_qna_question_per != '' ">
				and qna_que.fap_job_qna_question_per = #{fap_job_qna_question_per}
			</if>
			<if test="user_nm != null and user_nm != '' ">
				and user.user_nm like concat('%',#{user_nm},'%') 
			</if>	
		order by
			qna_que.fap_job_qna_question_ins_dt desc
	</select>
	<!-- 채용공고 Q&A 질문 정보 검색 종료 -->
	
	<!-- 채용공고 Q&A 질문 승인 시작; 2019.3.7 신동철 -->
	<update id="jobfair_user_qna_permission" parameterType="java.util.List">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_job_qna_question_tb
			set
				fap_job_qna_question_per = 'C5101'				
			where
				fap_job_qna_question_seq = #{element}
		</foreach>
	</update>
	
		
	<!-- 채용공고 Q&A 질문 미승인 시작; 2019.3.7 신동철 -->
	<update id="jobfair_user_qna_nonpermission" parameterType="java.util.List">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_job_qna_question_tb
			set
				fap_job_qna_question_per = 'C5100'				
			where
				fap_job_qna_question_seq = #{element}
		</foreach>
	</update>
	
	<!-- 채용공고 Q&A 질문 미승인사유 등록 시작; 2019.3.7 신동철 -->
	<update id="insert_qna_question_refuse_reason" parameterType="hashmap">
		update
				fap_job_qna_question_tb
			set			
		        fap_job_qna_refuse_reason =#{fap_job_qna_refuse_reason}
			where
				fap_job_qna_question_seq = #{fap_job_qna_question_seq}
	</update>
	<!-- 채용공고 Q&A 질문 미승인사유 등록 종료 -->
	
	<!-- 세부 잡페어 목록 검색 시작; 2019. 3. 12 신동철 -->
	<select id="select_jobfair_divide_info" parameterType="hashmap" resultType="CompanyRoadmapJobfairDivide">
		select distinct
			detail.fap_jobfair_divide_seq
		    ,detail.fap_jobfair_seq
			,detail.fap_jobfair_divide_st
		    ,detail.fap_jobfair_divide_et
		    ,detail.fap_jobfair_divide_detail
		    ,detail.fap_jobfair_divide_gb
		    ,detail.fap_jobfair_divide_gb_eps
		    ,detail.fap_jobfair_divide_app_st
		    ,detail.fap_jobfair_divide_app_et
		from
			fap_jobfair_divide_tb detail
		join
			fap_jobfair_tb job
		on
			job.fap_jobfair_seq = detail.fap_jobfair_seq
		join
			fap_jobfair_comp_tb comp
		on
			detail.fap_jobfair_divide_seq = comp.fap_jobfair_divide_seq
		where
			detail.fap_jobfair_seq = #{fap_jobfair_seq}
	</select>
	<!-- 세부 잡페어 목록 검색 종료 -->
	
	<!-- 잡페어 세부별 최종합격자 결정 시한 설정 정보 검색 시작; 2019. 3. 14 신동철 -->
	<select id="search_jobfair_divide_final_select_info" parameterType="int" resultType="hashmap">
		select
			fap_jobfair_divide_seq
			, fap_jobfair_divide_final_select_st
			, fap_jobfair_divide_final_select_et
		from
			fap_jobfair_divide_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}	
	</select>	
	<!-- 잡페어 세부별 최종합격자 결정 시한 설정 정보 검색 종료 -->
	
	<!-- 잡페어 세부별 최종합격자 결정 시한 설정 등록 시작; 2019. 3. 14 신동철 -->
	<update id="insert_fap_jobfair_divide_final_select" parameterType="hashmap">
		update
			fap_jobfair_divide_tb
		set
			fap_jobfair_divide_final_select_st = #{fap_jobfair_divide_final_select_st}
			, fap_jobfair_divide_final_select_et = #{fap_jobfair_divide_final_select_et}
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</update>
	<!-- 잡페어 세부별 최종합격자 결정 시한 설정 등록 종료 -->
	
	<!-- 잡페어 최종확정 기간 중복 확인 시작 -->
	<select id="final_decision_time_duplicate_check" parameterType="FAPFinalDecisionTime" resultType="int">
		<![CDATA[
		select
			count(*)
		from
			fap_jobfair_final_decision_time_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			(
				fap_jobfair_final_decision_time_st
				between
					#{fap_jobfair_final_decision_time_st}
				and
					#{fap_jobfair_final_decision_time_et}
			or
				fap_jobfair_final_decision_time_et
				between
					#{fap_jobfair_final_decision_time_st}
				and
					#{fap_jobfair_final_decision_time_et}
			or
				(
					fap_jobfair_final_decision_time_st <= #{fap_jobfair_final_decision_time_st}
				and
					fap_jobfair_final_decision_time_et >= #{fap_jobfair_final_decision_time_et}
				)
			)
		]]>
	</select>
	<!-- 잡페어 최종확정 기간 중복 확인 종료 -->
	
	<!-- 잡페어 최종확정 기간 설정 등록 시작 -->
	<insert id="final_decision_time_insert" parameterType="FAPFinalDecisionTime">
		insert into
			fap_jobfair_final_decision_time_tb
			(
				fap_jobfair_divide_seq
				,fap_jobfair_final_decision_time_gb
				,fap_jobfair_final_decision_time_st
				,fap_jobfair_final_decision_time_et
				,fap_jobfair_final_decision_time_ct
				,fap_jobfair_final_decision_time_ins_id
				,fap_jobfair_final_decision_time_ins_dt
				,fap_jobfair_final_decision_time_udt_id
				,fap_jobfair_final_decision_time_udt_dt
			)values(
				#{fap_jobfair_divide_seq}
				,#{fap_jobfair_final_decision_time_gb}
				,#{fap_jobfair_final_decision_time_st}
				,#{fap_jobfair_final_decision_time_et}
				,#{fap_jobfair_final_decision_time_ct}
				,#{fap_jobfair_final_decision_time_ins_id}
				,now()
				,#{fap_jobfair_final_decision_time_udt_id}
				,now()
			)
	</insert>
	<!-- 잡페어 최종확정 기간 설정 등록 종료 -->
	
	<!-- 잡페어 최종확정 기간 조회 시작 -->
	<select id="final_decision_time_select" parameterType="int" resultType="FAPFinalDecisionTime">
		select
			fap_jobfair_final_decision_time_seq
			,fap_jobfair_divide_seq
			,fap_jobfair_final_decision_time_gb
			,fap_jobfair_final_decision_time_ct
			,DATE_FORMAT(fap_jobfair_final_decision_time_st, '%Y-%m-%d') as fap_jobfair_final_decision_time_st
			,DATE_FORMAT(fap_jobfair_final_decision_time_et, '%Y-%m-%d') as fap_jobfair_final_decision_time_et
		from
			fap_jobfair_final_decision_time_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		order by
			fap_jobfair_final_decision_time_st
	</select>
	<!-- 잡페어 최종확정 기간 조회 종료 -->
	
	<!-- 잡페어 최종확정 기간 삭제 시작 -->
	<delete id="final_decision_time_delete" parameterType="hashmap">
		delete from
			fap_jobfair_final_decision_time_tb
		where
			fap_jobfair_final_decision_time_seq in
			<choose>
				<when test="fap_jobfair_set_seq_list.size != 0">
					<foreach collection="fap_jobfair_set_seq_list" item="item" index="index" separator="," open="(" close=")">
						#{item}
					</foreach>
				</when>
			</choose>
	</delete>
	<!-- 잡페어 최종확정 기간 삭제 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 내정자중 미 선택자 포기처리 시작 -->
	<update id="final_decision_algorithm_step_one" parameterType="int">
		<![CDATA[
			update
				fap_job_apply_final_result_tb
			set
				fap_job_app_choice_comp_gb = 'D0702'
			where
				fap_job_app_final_rt_seq in (
																select
																	*
																from
																(
																	select
																		t1.fap_job_app_final_rt_seq
																	from
																		fap_job_apply_final_result_tb t1
																	inner join
																		fap_job_apply_info_tb info
																	on
																		t1.fap_job_app_info_seq = info.fap_job_app_info_seq
																	where
																		1=1
																	and
																		t1.fap_job_app_final_rt_acp_user = 'D0001'
																	and
																		not exists
																					(
																						select
																							1
																						from
																							fap_job_apply_final_result_tb t2
																						where
																							t1.user_id = t2.user_id
																						and
																							t2.fap_job_app_final_rt_acp_user = 'D0004'
																							
																					)
																	and
																		info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
																	and
																		t1.fap_job_app_choice_comp_gb = 'D0700'
																) as sub
															)
		]]>
	</update>
	<!-- 잡페어 최종확정 알고리즘 내정자중 미 선택자 포기처리 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 내정자중 미 선택자 포기처리 시작 (확정필수-유예없음) -->
	<update id="final_decision_algorithm_step_one_ns" parameterType="int">
		<![CDATA[
			update
				fap_job_apply_final_result_tb
			set
				fap_job_app_choice_comp_gb = 'D0702'
			where
				fap_job_app_final_rt_seq in (
																select
																	*
																from
																(
																	select
																		t1.fap_job_app_final_rt_seq
																	from
																		fap_job_apply_final_result_tb t1
																	inner join
																		fap_job_apply_info_tb info
																	on
																		t1.fap_job_app_info_seq = info.fap_job_app_info_seq
																	where
																		1=1
																	and
																		t1.fap_job_app_final_rt_acp_user = 'D0001'
																	and
																		exists
																					(
																						select
																							1
																						from
																							fap_job_apply_final_result_tb t2
																						where
																							t1.user_id = t2.user_id
																						and
																							t2.fap_job_app_final_rt_acp_user = 'D0004'
																							
																					)
																	and
																		info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
																	and
																		t1.fap_job_app_choice_comp_gb = 'D0700'
																) as sub
															)
		]]>
	</update>
	<!-- 잡페어 최종확정 알고리즘 내정자중 미 선택자 포기처리 종료 (확정필수-유예없음) -->
	
	<!-- 잡페어 최종확정 알고리즘 내정+예비중 확정된 기업을 제외하고 포기처리 시작 -->
	<update id="final_decision_algorithm_step_two" parameterType="int">
		update
			fap_job_apply_final_result_tb final
		inner join
			fap_job_apply_info_tb info
		set
			final.fap_job_app_choice_comp_gb = 'D0702'
		where
			final.fap_job_app_final_rt_seq in (
																	select
																		*
																	from
																	(
																		select
																			t3.fap_job_app_final_rt_seq
																		from
																			fap_job_apply_final_result_tb t3
																		inner join
																			fap_job_apply_info_tb info
																		on
																			t3.fap_job_app_info_seq = info.fap_job_app_info_seq
																		where
																			t3.user_id in (
																							select
																								t1.user_id
																							from
																								fap_job_apply_final_result_tb t1
																							where
																								1=1
																							and
																								t1.fap_job_app_final_rt_acp_user = 'D0001'
																							and
																								exists
																											(
																												select
																													1
																												from
																													fap_job_apply_final_result_tb t2
																												where
																													t1.user_id = t2.user_id
																												and
																													t2.fap_job_app_final_rt_acp_user = 'D0004'
																												and
																													t1.fap_job_app_choice_comp_gb = 'D0701'
																											)
																							)
																		and
																			t3.fap_job_app_final_rt_seq not in (
																													select
																														t1.fap_job_app_final_rt_seq
																													from
																														fap_job_apply_final_result_tb t1
																													where
																														1=1
																													and
																														t1.fap_job_app_final_rt_acp_user = 'D0001'
																													and
																														exists
																																	(
																																		select
																																			1
																																		from
																																			fap_job_apply_final_result_tb t2
																																		where
																																			t1.user_id = t2.user_id
																																		and
																																			t2.fap_job_app_final_rt_acp_user = 'D0004'
																																		and
																																			t1.fap_job_app_choice_comp_gb = 'D0701'
																																	)
																												)
																		and
																			info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
																		) as sub
															)
	</update>
	<!-- 잡페어 최종확정 알고리즘 내정+예비중 확정된 기업을 제외하고 포기처리 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 내정포기로 인한 예비합격자 정보 조회 시작 -->
	<select id="final_decision_algorithm_step_three" parameterType="int" resultType="hashmap">
		<![CDATA[
			select
				final1.user_id as user_id
			    ,final1.fap_job_app_final_rt_seq as fap_job_app_final_rt_seq
			    ,IF(final1.fap_job_app_standby_rank_user - count(final2.user_id) <= 0 , 0 ,final1.fap_job_app_standby_rank_user - count(final2.user_id)) as num
			from
				fap_job_apply_final_result_tb final1
			join
				fap_job_apply_final_result_tb final2
			inner join
				fap_job_apply_info_tb info1
			on
				final1.fap_job_app_info_seq = info1.fap_job_app_info_seq
			inner join
				fap_job_apply_info_tb info2
			on
				final2.fap_job_app_info_seq = info2.fap_job_app_info_seq
			where
				final1.user_id <> final2.user_id
			and
				info1.fap_comp_id = info2.fap_comp_id
			and
				info1.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
				info2.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
				final1.fap_job_app_final_rt_acp_user = 'D0004'
			and
				final2.fap_job_app_final_rt_acp_user <> 'D0002'
			and
				final1.fap_job_app_standby_rank_user > final2.fap_job_app_standby_rank_user
			and
				final2.fap_job_app_choice_comp_gb = 'D0702'
			and
				final2.fap_job_app_final_btn_gb = 'D1800'
			group by
				final1.fap_job_app_final_rt_seq
		]]>
	</select>
	<!-- 잡페어 최종확정 알고리즘 내정포기로 인한 예비합격자 정보 조회 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 예비합격자 정보 적용 시작 -->
	<update id="final_decision_algorithm_step_four" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_job_apply_final_result_tb
			set
				fap_job_app_standby_rank_user = #{element.num}
				<if test="element.num == 0">
					,fap_job_app_final_rt_acp_user = 'D0001'
				</if>
			where
				fap_job_app_final_rt_seq = #{element.fap_job_app_final_rt_seq}
		</foreach>
	</update>
	<!-- 잡페어 최종확정 알고리즘 예비합격자 정보 적용 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 확정된 지원자 확정 버튼 노출여부 변경 시작 -->
	<update id="final_decision_algorithm_step_five" parameterType="int">
		update
			fap_job_apply_final_result_tb
		set
			fap_job_app_final_btn_gb = 'D1801'
		where
			user_id in (
							select
								*
							from
							(
								select
									final.user_id as user_id
								from
									fap_job_apply_final_result_tb final
								inner join
									fap_job_apply_info_tb info
								on
									final.fap_job_app_info_seq = info.fap_job_app_info_seq
								where
									final.fap_job_app_choice_comp_gb = 'D0701'
								and
									info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
							) as sub
						) 
		or
			fap_job_app_choice_comp_gb = 'D0702'
	</update>
	<!-- 잡페어 최종확정 알고리즘 확정된 지원자 확정 버튼 노출여부 변경 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 모든 지원자 확정 버튼 노출여부 변경 시작 -->
	<update id="final_decision_algorithm_step_final" parameterType="int">
		update
			fap_job_apply_final_result_tb
		set
			fap_job_app_final_btn_gb = 'D1801'
		where
			user_id in (
							select
								*
							from
							(
								select
									final.user_id as user_id
								from
									fap_job_apply_final_result_tb final
								inner join
									fap_job_apply_info_tb info
								on
									final.fap_job_app_info_seq = info.fap_job_app_info_seq
								where
									info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
							) as sub
						) 
		or
			fap_job_app_choice_comp_gb = 'D0702'
	</update>
	<!-- 잡페어 최종확정 알고리즘 모든 지원자 확정 버튼 노출여부 변경 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 최종적용 이후 예비합격자 종료 처리 시작 -->
	<update id="final_decision_algorithm_gb_update" parameterType="int">
		update
			fap_job_apply_final_result_tb final
		set
			final.fap_job_app_choice_comp_gb = 'D0703'
		where
			final.fap_job_app_final_rt_acp_user = 'D0004'
		and
			final.fap_job_app_info_seq in (
															select
																*
															from
																(
																	select
																		info.fap_job_app_info_seq
																	from
																		fap_job_apply_info_tb info
																	where
																		info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
																) as sub
														)
	</update>
	<!-- 잡페어 최종확정 알고리즘 최종적용 이후 예비합격자 종료 처리 종료 -->
	
	<!-- 잡페어 최종확정 알고리즘 최종적용 이후 기업에 전달 시작 -->
	<update id="final_decision_algorithm_pass_to_comp" parameterType="int">
		update
			fap_job_apply_final_result_tb final
		set
			final.fap_job_app_approval_gb = 'D0801'
		where
			final.fap_job_app_info_seq in (
															select
																*
															from
																(
																	select
																		info.fap_job_app_info_seq
																	from
																		fap_job_apply_info_tb info
																	where
																		info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
																) as sub
														)
	</update>
	<!-- 잡페어 최종확정 알고리즘 최종적용 이후 기업에 전달 종료 -->
	
	<!-- 채용공고 대상자들 공통코드 조회 시작  -->
	<select id="fap_ad_show_code_select" resultType="hashmap">
		SELECT 
			CONCAT(group_id,code) as com_code
			,code_nm as com_code_nm
		FROM
			com_code_tb 
		where 
			group_id = 'A01'
	</select>
	<!-- 채용공고 대상자들 공통코드 조회 종료  -->
	
	<!-- 채용공고에 등록되어있는 대상자 코드 조회 시작 -->
	<select id="fap_ad_show_link_code_select" parameterType="long" resultType="JobAdShow">
		SELECT
			fap_job_ad_seq
			,fap_job_ad_show_gb 
		FROM 
			fap_job_ad_show_tb 
		where 
			fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 채용공고에 등록되어있는 대상자 코드 조회 종료 -->
	
	<!-- 채용공고에 등록되어있는 대상자 코드 삭제 시작 -->
	<select id="fap_ad_show_link_code_delete" parameterType="long">
		delete from
			fap_job_ad_show_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 채용공고에 등록되어있는 대상자 코드 삭제 종료 -->	
	
	<!-- 채용공고에 등록되어있는 대상자 코드 등록 시작 -->
	<insert id="fap_ad_show_link_code_insert" parameterType="java.util.ArrayList">
		insert into
			fap_job_ad_show_tb
			(
                fap_job_ad_seq
                ,fap_job_ad_show_gb
                , fap_job_ad_show_ins_id
                , fap_job_ad_show_ins_dt
                , fap_job_ad_show_udt_id
                , fap_job_ad_show_udt_dt
			)values
			<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_job_ad_seq  }                
                , #{element.fap_job_ad_show_gb}
                , #{element.fap_job_ad_show_ins_id}
                , now()
                , #{element.fap_job_ad_show_udt_id}
                , now()
			)
			</foreach>
	</insert>
	<!-- 채용공고에 등록되어있는 대상자 코드 등록 종료 -->
	
	<!-- FAQ 리스트 조회 시작 -->
	<select id="fap_faq_select_list" resultType="hashmap">
		select
			com.consulting_seq as consulting_seq
		    ,com.consulting_tp as consulting_tp
		    ,com.consulting_title as consulting_title
		    ,com.consulting_ct as consulting_ct
		    ,com.consulting_ins_id as consulting_ins_id
		    ,DATE_FORMAT(com.consulting_ins_dt, '%Y-%m-%d') as consulting_ins_dt
		    ,com.consulting_udt_id as consulting_udt_id
		    ,DATE_FORMAT(com.consulting_udt_dt, '%Y-%m-%d') as consulting_udt_dt
		    ,faq.fap_faq_gb_seq as fap_faq_gb_seq
		    ,faq.fap_faq_gb_cd as fap_faq_gb_cd
		from
			com_faq_tb com
		inner join
			fap_faq_gb_tb faq
		on
			com.consulting_seq = faq.consulting_seq
		where
			com.consulting_tp = 'A0504'
		order by
			consulting_seq desc
	</select>
	<!-- FAQ 리스트 조회 종료 -->
	
	<!-- FAQ 리스트(구분) 갯수 조회 시작 -->
	<select id="fap_faq_select_list_gb_count" resultType="int" parameterType="hashmap">
		select
			count(*)
		from
			com_faq_tb com
		inner join
			fap_faq_gb_tb faq
		on
			com.consulting_seq = faq.consulting_seq
		where
			com.consulting_tp = 'A0504'
		and
			faq.fap_faq_gb_cd = #{fap_faq_gb_cd}
		<if test="searchText != null">
		and
			com.consulting_title like CONCAT('%',#{searchText},'%')
		</if>
	</select>
	<!-- FAQ 리스트(구분) 갯수 조회 종료 -->
		
	<!-- FAQ 리스트(구분) 조회 시작 -->
	<select id="fap_faq_select_list_gb" resultType="hashmap" parameterType="hashmap">
		select
			com.consulting_seq as consulting_seq
		    ,com.consulting_tp as consulting_tp
		    ,com.consulting_title as consulting_title
		    ,com.consulting_ct as consulting_ct
		    ,com.consulting_ins_id as consulting_ins_id
		    ,DATE_FORMAT(com.consulting_ins_dt, '%Y-%m-%d') as consulting_ins_dt
		    ,com.consulting_udt_id as consulting_udt_id
		    ,DATE_FORMAT(com.consulting_udt_dt, '%Y-%m-%d') as consulting_udt_dt
		    ,faq.fap_faq_gb_seq as fap_faq_gb_seq
		    ,faq.fap_faq_gb_cd as fap_faq_gb_cd
		from
			com_faq_tb com
		inner join
			fap_faq_gb_tb faq
		on
			com.consulting_seq = faq.consulting_seq
		where
			com.consulting_tp = 'A0504'
		and
			faq.fap_faq_gb_cd = #{fap_faq_gb_cd}
		<if test="searchText != null">
		and
			com.consulting_title like CONCAT('%',#{searchText},'%')
		</if>
		order by
			consulting_seq desc
	</select>
	<!-- FAQ 리스트(구분) 조회 종료 -->
	
	<!-- FAQ 내용 등록 시작 -->
	<insert id="fap_faq_insert_content" parameterType="FaqConsultingContents" useGeneratedKeys="true" keyProperty="consulting_seq">
		insert into
			com_faq_tb(
				consulting_tp
				,consulting_title
				,consulting_ct
				,consulting_ins_id
				,consulting_udt_id
			)values(
				#{consulting_tp}
				,#{consulting_title}
				,#{consulting_ct}
				,#{consulting_ins_id}
				,#{consulting_udt_id}
			)
	</insert>
	<!-- FAQ 내용 등록 종료 -->
	
	<!-- FAQ 구분 등록 시작 -->
	<insert id="fap_faq_insert_gb" parameterType="FapAdminFaqGb">
		insert into
			fap_faq_gb_tb(
				consulting_seq
				,fap_faq_gb_cd
				,fap_faq_gb_ins_id
				,fap_faq_gb_udt_id
			)values(
				#{consulting_seq}
				,#{fap_faq_gb_cd}
				,#{fap_faq_gb_ins_id}
				,#{fap_faq_gb_udt_id}
			)
	</insert>
	<!-- FAQ 구분 등록 종료 -->
	
	<!-- FAQ 단일 조회 시작 -->
	<select id="fap_faq_select_one" resultType="hashmap" parameterType="int">
		select
			com.consulting_seq as consulting_seq
		    ,com.consulting_tp as consulting_tp
		    ,com.consulting_title as consulting_title
		    ,com.consulting_ct as consulting_ct
		    ,com.consulting_ins_id as consulting_ins_id
		    ,DATE_FORMAT(com.consulting_ins_dt, '%Y-%m-%d') as consulting_ins_dt
		    ,com.consulting_udt_id as consulting_udt_id
		    ,DATE_FORMAT(com.consulting_udt_dt, '%Y-%m-%d') as consulting_udt_dt
		    ,faq.fap_faq_gb_seq as fap_faq_gb_seq
		    ,faq.fap_faq_gb_cd as fap_faq_gb_cd
		from
			com_faq_tb com
		inner join
			fap_faq_gb_tb faq
		on
			com.consulting_seq = faq.consulting_seq
		where
			com.consulting_tp = 'A0504'
		and
			com.consulting_seq = #{consulting_seq}
	</select>
	<!-- FAQ 단일 조회 종료 -->
	
	<!-- FAQ 내용 수정 시작 -->
	<update id="fap_faq_update_content" parameterType="FaqConsultingContents">
		update
			com_faq_tb
		set
			consulting_title = #{consulting_title}
			,consulting_ct = #{consulting_ct}
			,consulting_udt_id = #{consulting_udt_id}
			,consulting_udt_dt = now()
		where
			consulting_seq = #{consulting_seq}
	</update>
	<!-- FAQ 내용 수정 종료 -->
	
	<!-- FAQ 구분 수정 시작 -->
	<update id="fap_faq_update_gb" parameterType="FapAdminFaqGb">
		update
			fap_faq_gb_tb
		set
			fap_faq_gb_cd = #{fap_faq_gb_cd}
			,fap_faq_gb_udt_id = #{fap_faq_gb_udt_id}
			,fap_faq_gb_udt_dt = now()
		where
			fap_faq_gb_seq = #{fap_faq_gb_seq}
	</update>
	<!-- FAQ 구분 수정 종료 -->
	
	<!-- FAQ 삭제 시작 -->
	<delete id="fap_faq_delete" parameterType="int">
		delete from
			com_faq_tb
		where
			consulting_seq = #{consulting_seq}
	</delete>
	<!-- FAQ 삭제 종료 -->
	
	<!-- 오픈잡페어 설명회 정보 등록 시작 -->
	<insert id="fap_open_pt_insert" parameterType="FAPOpenPt">
		insert into
			fap_open_pt_tb(
				fap_open_pt_title
				,fap_open_pt_ct
				,fap_open_pt_gb
				,fap_open_pt_ins_id
				,fap_open_pt_udt_id
			)values(
				#{fap_open_pt_title}
				,#{fap_open_pt_ct}
				,#{fap_open_pt_gb}
				,#{fap_open_pt_ins_id}
				,#{fap_open_pt_udt_id}
			)
	</insert>
	<!-- 오픈잡페어 설명회 정보 등록 종료 -->
	
	<!-- 오픈잡페어 설명회 정보 리스트 조회 시작 -->
	<select id="fap_open_pt_select_list" resultType="FAPOpenPt">
		select
			fap_open_pt_seq
			,fap_open_pt_title
			,fap_open_pt_ct
			,fap_open_pt_gb
			,fap_open_pt_show_gb
			,fap_open_pt_close_gb
			,fap_open_pt_ins_id
			,DATE_FORMAT(fap_open_pt_ins_dt, '%Y-%m-%d') as fap_open_pt_ins_dt
			,fap_open_pt_udt_id
			,DATE_FORMAT(fap_open_pt_udt_dt, '%Y-%m-%d') as fap_open_pt_udt_dt
		from
			fap_open_pt_tb
		order by
			fap_open_pt_seq desc
	</select>
	<!-- 오픈잡페어 설명회 정보 리스트 조회 종료 -->
	
	<!-- 오픈잡페어 설명회 정보 조회 시작 -->
	<select id="fap_open_pt_select_one" resultType="FAPOpenPt" parameterType="int">
		select
			fap_open_pt_seq
			,fap_open_pt_title
			,fap_open_pt_ct
			,fap_open_pt_gb
			,fap_open_pt_show_gb
			,fap_open_pt_close_gb
			,fap_open_pt_ins_id
			,DATE_FORMAT(fap_open_pt_ins_dt, '%Y-%m-%d') as fap_open_pt_ins_dt
			,fap_open_pt_udt_id
			,DATE_FORMAT(fap_open_pt_udt_dt, '%Y-%m-%d') as fap_open_pt_udt_dt
		from
			fap_open_pt_tb
		where
			fap_open_pt_seq = #{fap_open_pt_seq}
	</select>
	<!-- 오픈잡페어 설명회 정보 조회 종료 -->
	
	<!-- 오픈잡페어 설명회 같은종류 모두 비노출 처리 시작 -->
	<update id="fap_open_pt_update_show_gb" parameterType="FAPOpenPt">
		update
			fap_open_pt_tb
		set
			fap_open_pt_show_gb = 'D1100'
		where
			fap_open_pt_gb = #{fap_open_pt_gb}
	</update>
	<!-- 오픈잡페어 설명회 같은종류 모두 비노출 처리 종료 -->
	
	<!-- 오픈잡페어 설명회 구분 수정 시작 -->
	<update id="fap_open_pt_update_gb" parameterType="FAPOpenPt">
		update
			fap_open_pt_tb
		set
			fap_open_pt_show_gb = #{fap_open_pt_show_gb}
			,fap_open_pt_close_gb = #{fap_open_pt_close_gb}
			,fap_open_pt_udt_id = #{fap_open_pt_udt_id}
			,fap_open_pt_udt_dt = now()
		where
			fap_open_pt_seq = #{fap_open_pt_seq}
	</update>
	<!-- 오픈잡페어 설명회 구분 수정 종료 -->
	
	<!-- 오픈잡페어 설명회 정보 수정 시작 -->
	<update id="fap_open_pt_update" parameterType="FAPOpenPt">
		update
			fap_open_pt_tb
		set
			fap_open_pt_title = #{fap_open_pt_title}
			,fap_open_pt_ct = #{fap_open_pt_ct}
			,fap_open_pt_gb = #{fap_open_pt_gb}
			,fap_open_pt_show_gb = 'D1100'
			,fap_open_pt_udt_id = #{fap_open_pt_udt_id}
			,fap_open_pt_udt_dt = now()
		where
			fap_open_pt_seq = #{fap_open_pt_seq}
	</update>
	<!-- 오픈잡페어 설명회 정보 수정 종료 -->
	
	<!-- 오픈잡페어 설명회 정보 삭제 시작 -->
	<delete id="fap_open_pt_delete" parameterType="int">
		delete from
			fap_open_pt_tb
		where
			fap_open_pt_seq = #{fap_open_pt_seq}
	</delete>
	<!-- 오픈잡페어 설명회 정보 삭제 종료 -->
	
	<!-- 오픈잡페어(구분 별) 정보 리스트 조회 시작 -->
	<select id="fap_open_pt_only_list" resultType="FAPOpenPt" parameterType="string">
		select
			fap_open_pt_seq
			,fap_open_pt_title
			,fap_open_pt_ct
			,fap_open_pt_gb
			,fap_open_pt_show_gb
			,fap_open_pt_close_gb
			,fap_open_pt_ins_id
			,DATE_FORMAT(fap_open_pt_ins_dt, '%Y-%m-%d') as fap_open_pt_ins_dt
			,fap_open_pt_udt_id
			,DATE_FORMAT(fap_open_pt_udt_dt, '%Y-%m-%d') as fap_open_pt_udt_dt
		from
			fap_open_pt_tb
		where
			fap_open_pt_gb = #{fap_open_pt_gb}
		order by
			fap_open_pt_seq desc
	</select>
	<!-- 오픈잡페어(구분 별) 정보 리스트 조회 종료 -->
	
	<!-- 오픈잡페어 구직자 교육 총 지원자 수 (검색 포함) 조회 시작 -->
	<select id="fap_open_edu_applier_list_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			fap_open_pt_apply_tb apply
		left join
			fap_open_pt_tb open_pt
		on
			apply.fap_open_pt_seq = open_pt.fap_open_pt_seq
		left join
			fap_open_pt_resume_tb open_resume
		on
			apply.fap_open_pt_apply_seq = open_resume.fap_open_pt_apply_seq
		left join
			com_user_tb user
		on
			apply.user_id = user.user_id
		left join
			fap_personal_user_tb ps_user
		on
			ps_user.user_id = user.user_id
		left join
			fap_personal_highschool_tb high
		on
			ps_user.fap_personal_user_seq = high.fap_personal_user_seq
		left join
			fap_personal_university_tb uni
		on
			ps_user.fap_personal_user_seq = uni.fap_personal_user_seq
		left join
			fap_personal_graduate_tb grad
		on
			uni.fap_personal_univ_seq = grad.fap_personal_univ_seq
		where
			open_pt.fap_open_pt_seq = #{fap_open_pt_seq}
		and
			open_pt.fap_open_pt_gb = #{fap_open_pt_gb}
		<if test="searchNm != null">
		and
			user.user_nm like CONCAT('%',#{searchNm},'%')
		</if>
	</select>
	<!-- 오픈잡페어 구직자 교육 총 지원자 수 (검색 포함) 조회 종료 -->
	
	<!-- 오픈잡페어 설명회 총 지원자 수(검색 포함) 조회 시작 -->
	<select id="fap_open_pt_applier_list_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			fap_open_pt_apply_tb apply
		left join
			fap_open_pt_tb open_pt
		on
			apply.fap_open_pt_seq = open_pt.fap_open_pt_seq
		left join
			com_user_tb user
		on
			apply.user_id = user.user_id
		left join
			fap_personal_user_tb ps_user
		on
			ps_user.user_id = user.user_id
		left join
			fap_personal_highschool_tb high
		on
			ps_user.fap_personal_user_seq = high.fap_personal_user_seq
		left join
			fap_personal_university_tb uni
		on
			ps_user.fap_personal_user_seq = uni.fap_personal_user_seq
		left join
			fap_personal_graduate_tb grad
		on
			uni.fap_personal_univ_seq = grad.fap_personal_univ_seq
		where
			open_pt.fap_open_pt_seq = #{fap_open_pt_seq}
		and
			open_pt.fap_open_pt_gb = #{fap_open_pt_gb}
		<if test="searchNm != null">
		and
			user.user_nm like CONCAT('%',#{searchNm},'%')
		</if>
	</select>
	<!-- 오픈잡페어 설명회 총 지원자 수(검색 포함) 조회 종료 -->
	
	<!-- 오픈잡페어 구직자 교육 지원자 리스트 조회 시작 -->
	<select id="fap_open_edu_applier_list" parameterType="hashmap" resultType="hashmap">
		select
			apply.fap_open_pt_apply_seq as fap_open_pt_apply_seq
			,user.user_nm as user_nm
		    ,user.user_birth as user_birth
		    ,user.user_sex as user_sex
		    ,user.user_email as user_email
		    ,user.user_phone as user_phone
		    ,ps_user.fap_personal_user_edu_level as fap_personal_user_edu_level
		    ,DATE_FORMAT(apply.fap_open_pt_apply_ins_dt, '%Y-%m-%d') as fap_open_pt_apply_ins_dt
			,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then high.fap_personal_hs_nm
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_nm
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_nm
			end) as user_sc_nm
		    ,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then high.fap_personal_hs_field
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_major
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_major
			end) as user_sc_major
			,apply.user_id as user_id
            ,open_resume.fap_resume_seq as fap_resume_seq
            ,open_resume.fap_open_pt_resume_seq as fap_open_pt_resume_seq
            ,open_resume.fap_open_pt_resume_gb as fap_open_pt_resume_gb
		from
			fap_open_pt_apply_tb apply
		left join
			fap_open_pt_tb open_pt
		on
			apply.fap_open_pt_seq = open_pt.fap_open_pt_seq
		left join
			fap_open_pt_resume_tb open_resume
		on
			apply.fap_open_pt_apply_seq = open_resume.fap_open_pt_apply_seq
		left join
			com_user_tb user
		on
			apply.user_id = user.user_id
		left join
			fap_personal_user_tb ps_user
		on
			ps_user.user_id = user.user_id
		left join
			fap_personal_highschool_tb high
		on
			ps_user.fap_personal_user_seq = high.fap_personal_user_seq
		left join
			fap_personal_university_tb uni
		on
			ps_user.fap_personal_user_seq = uni.fap_personal_user_seq
		left join
			fap_personal_graduate_tb grad
		on
			uni.fap_personal_univ_seq = grad.fap_personal_univ_seq
		where
			open_pt.fap_open_pt_seq = #{fap_open_pt_seq}
		and
			open_pt.fap_open_pt_gb = #{fap_open_pt_gb}
		<if test="searchNm != null">
		and
			user.user_nm like CONCAT('%',#{searchNm},'%')
		</if>
	</select>
	<!-- 오픈잡페어 구직자 교육 지원자 리스트 조회 종료 -->
	
	<!-- 오픈잡페어 설명회 지원자 리스트 조회 시작 -->
	<select id="fap_open_pt_applier_list" parameterType="hashmap" resultType="hashmap">
		select
			apply.fap_open_pt_apply_seq as fap_open_pt_apply_seq
			,user.user_nm as user_nm
		    ,user.user_birth as user_birth
		    ,user.user_sex as user_sex
		    ,user.user_email as user_email
		    ,user.user_phone as user_phone
		    ,ps_user.fap_personal_user_edu_level as fap_personal_user_edu_level
		    ,ps_user.fap_personal_user_job_objective as fap_personal_user_job_objective   
		    ,DATE_FORMAT(apply.fap_open_pt_apply_ins_dt, '%Y-%m-%d') as fap_open_pt_apply_ins_dt
			,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then high.fap_personal_hs_nm
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_nm
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_nm
			end) as user_sc_nm
		    ,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then high.fap_personal_hs_field
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_major
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_major
			end) as user_sc_major
		from
			fap_open_pt_apply_tb apply
		left join
			fap_open_pt_tb open_pt
		on
			apply.fap_open_pt_seq = open_pt.fap_open_pt_seq
		left join
			com_user_tb user
		on
			apply.user_id = user.user_id
		left join
			fap_personal_user_tb ps_user
		on
			ps_user.user_id = user.user_id
		left join
			fap_personal_highschool_tb high
		on
			ps_user.fap_personal_user_seq = high.fap_personal_user_seq
		left join
			fap_personal_university_tb uni
		on
			ps_user.fap_personal_user_seq = uni.fap_personal_user_seq
		left join
			fap_personal_graduate_tb grad
		on
			uni.fap_personal_univ_seq = grad.fap_personal_univ_seq
		where
			open_pt.fap_open_pt_seq = #{fap_open_pt_seq}
		and
			open_pt.fap_open_pt_gb = #{fap_open_pt_gb}
		<if test="searchNm != null">
		and
			user.user_nm like CONCAT('%',#{searchNm},'%')
		</if>
	</select>
	<!-- 오픈잡페어 설명회 지원자 리스트 조회 종료 -->
	
	<!-- 오픈잡페어 설명회 지원자 리스트 엑셀 출력용 조회 시작 -->
	<select id="fap_open_pt_applier_list_excel" parameterType="hashmap" resultType="java.util.LinkedHashMap">
		select
			user.user_nm as user_nm
		    ,user.user_birth as user_birth
		    ,(select
						code_tb.code_nm
					from
						com_code_tb code_tb
					where
						code_tb.group_id = SUBSTR(user.user_sex,1,3)
					and
						code_tb.code = SUBSTR(user.user_sex,4,2)
			) as user_sex
		    ,user.user_email as user_email
		    ,user.user_phone as user_phone
			,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then high.fap_personal_hs_nm
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_nm
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_nm
			end) as user_sc_nm
		    ,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then (
					select
						code_tb.code_nm
					from
						com_code_tb code_tb
					where
						code_tb.group_id = SUBSTR(high.fap_personal_hs_field,1,3)
					and
						code_tb.code = SUBSTR(high.fap_personal_hs_field,4,2)
                )
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_major
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_major
			end) as user_sc_major
			 ,DATE_FORMAT(apply.fap_open_pt_apply_ins_dt, '%Y-%m-%d') as fap_open_pt_apply_ins_dt
		from
			fap_open_pt_apply_tb apply
		left join
			fap_open_pt_tb open_pt
		on
			apply.fap_open_pt_seq = open_pt.fap_open_pt_seq
		left join
			com_user_tb user
		on
			apply.user_id = user.user_id
		left join
			fap_personal_user_tb ps_user
		on
			ps_user.user_id = user.user_id
		left join
			fap_personal_highschool_tb high
		on
			ps_user.fap_personal_user_seq = high.fap_personal_user_seq
		left join
			fap_personal_university_tb uni
		on
			ps_user.fap_personal_user_seq = uni.fap_personal_user_seq
		left join
			fap_personal_graduate_tb grad
		on
			uni.fap_personal_univ_seq = grad.fap_personal_univ_seq
		where
			apply.fap_open_pt_apply_seq in
			<choose>
				<when test="seq_list.size != 0">
					<foreach collection="seq_list" item="item" index="index" separator="," open="(" close=")">
						#{item}
					</foreach>
				</when>
			</choose>
	</select>
	<!-- 오픈잡페어 설명회 지원자 리스트 엑셀 출력용 조회 종료 -->
	
	<!-- 오픈잡페어 구직자 교육 지원자 리스트 엑셀 출력용 조회 시작 -->
	<select id="fap_open_edu_applier_list_excel" parameterType="hashmap" resultType="java.util.LinkedHashMap">
		select
			user.user_nm as user_nm
		    ,user.user_birth as user_birth
		    ,(select
						code_tb.code_nm
					from
						com_code_tb code_tb
					where
						code_tb.group_id = SUBSTR(user.user_sex,1,3)
					and
						code_tb.code = SUBSTR(user.user_sex,4,2)
			) as user_sex
		    ,user.user_email as user_email
		    ,user.user_phone as user_phone
			,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then high.fap_personal_hs_nm
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_nm
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_nm
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_nm
			end) as user_sc_nm
		    ,(case 
				when ps_user.fap_personal_user_edu_level = 'B3300' then (
					select
						code_tb.code_nm
					from
						com_code_tb code_tb
					where
						code_tb.group_id = SUBSTR(high.fap_personal_hs_field,1,3)
					and
						code_tb.code = SUBSTR(high.fap_personal_hs_field,4,2)
                )
				when ps_user.fap_personal_user_edu_level = 'B3301' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3302' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3304' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3305' then uni.fap_personal_univ_major
				when ps_user.fap_personal_user_edu_level = 'B3303' then grad.fap_personal_grad_major
				when ps_user.fap_personal_user_edu_level = 'B3306' then grad.fap_personal_grad_major
			end) as user_sc_major
			,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(open_resume.fap_open_pt_resume_gb,1,3)
				and
					code_tb.code = SUBSTR(open_resume.fap_open_pt_resume_gb,4,2)
			) as fap_open_pt_resume_gb
			,DATE_FORMAT(apply.fap_open_pt_apply_ins_dt, '%Y-%m-%d') as fap_open_pt_apply_ins_dt
		from
			fap_open_pt_apply_tb apply
		left join
			fap_open_pt_tb open_pt
		on
			apply.fap_open_pt_seq = open_pt.fap_open_pt_seq
		left join
			fap_open_pt_resume_tb open_resume
		on
			apply.fap_open_pt_apply_seq = open_resume.fap_open_pt_apply_seq
		left join
			com_user_tb user
		on
			apply.user_id = user.user_id
		left join
			fap_personal_user_tb ps_user
		on
			ps_user.user_id = user.user_id
		left join
			fap_personal_highschool_tb high
		on
			ps_user.fap_personal_user_seq = high.fap_personal_user_seq
		left join
			fap_personal_university_tb uni
		on
			ps_user.fap_personal_user_seq = uni.fap_personal_user_seq
		left join
			fap_personal_graduate_tb grad
		on
			uni.fap_personal_univ_seq = grad.fap_personal_univ_seq
		where
			apply.fap_open_pt_apply_seq in
			<choose>
				<when test="seq_list.size != 0">
					<foreach collection="seq_list" item="item" index="index" separator="," open="(" close=")">
						#{item}
					</foreach>
				</when>
			</choose>
	</select>
	<!-- 오픈잡페어 구직자 교육 지원자 리스트 엑셀 출력용 조회 종료 -->
	
	<!-- 오픈잡페어 구직자 교육 지원자 합/불 처리 시작 -->
	<update id="fap_open_edu_applier_resume_update" parameterType="FAPOpenPtResume">	
		update
			fap_open_pt_resume_tb
		set
			fap_open_pt_resume_gb = #{fap_open_pt_resume_gb}
		where
			fap_open_pt_resume_seq = #{fap_open_pt_resume_seq}
	</update>
	<!-- 오픈잡페어 구직자 교육 지원자 합/불 처리 종료 -->
	
	<!-- 오픈잡페어 구직자 교육 마감처리 시 대기 지원자 불합격 처리 시작 -->
	<update id="fap_open_edu_close_fail_update" parameterType="FAPOpenPt">
		update
			fap_open_pt_resume_tb
		set
			fap_open_pt_resume_gb = 'D1402'
		where
			fap_open_pt_resume_seq = (
															select
																resume.fap_open_pt_resume_seq
															from
																fap_open_pt_tb open
															left join
																fap_open_pt_apply_tb apply
															on
																open.fap_open_pt_seq = apply.fap_open_pt_seq
															left join
																(
																	select
																		fap_open_pt_resume_seq
							                                            ,fap_open_pt_apply_seq
							                                            ,fap_open_pt_resume_gb
																	from
																		fap_open_pt_resume_tb
																) resume
															on
																apply.fap_open_pt_apply_seq = resume.fap_open_pt_apply_seq
															where
																open.fap_open_pt_seq = #{fap_open_pt_seq}
															and
																open.fap_open_pt_gb = 'D1001'
															and
																resume.fap_open_pt_resume_gb = 'D1400'
							                                )
	</update>
	<!-- 오픈잡페어 구직자 교육 마감처리 시 대기 지원자 불합격 처리 종료 -->
	
	<!-- FAP 팝업 정보 등록 시작 -->
	<insert id="fap_popup_insert" parameterType="FAPPopup">
		insert into
			fap_popup_tb(
				fap_popup_title
				,fap_popup_ct
				,fap_popup_img_origin
				,fap_popup_img_saved
				,fap_popup_gb
				,fap_popup_st
				,fap_popup_link
				,fap_popup_ins_id
				,fap_popup_udt_id
			)values(
				#{fap_popup_title}
				,#{fap_popup_ct}
				,#{fap_popup_img_origin}
				,#{fap_popup_img_saved}
				,#{fap_popup_gb}
				,#{fap_popup_st}
				,#{fap_popup_link}
				,#{fap_popup_ins_id}
				,#{fap_popup_udt_id}
			)
	</insert>
	<!-- FAP 팝업 정보 등록 종료 -->
	
	<!-- FAP 팝업 정보 리스트 조회 시작 -->
	<select id="fap_popup_select_list" resultType="FAPPopup">
		select
			fap_popup_seq
			,fap_popup_title
			,fap_popup_ct
			,fap_popup_img_origin
			,fap_popup_img_saved
			,fap_popup_gb
			,fap_popup_st
			,fap_popup_link
			,fap_popup_ins_id
			,DATE_FORMAT(fap_popup_ins_dt, '%Y-%m-%d') as fap_popup_ins_dt
			,fap_popup_udt_id
			,DATE_FORMAT(fap_popup_udt_dt, '%Y-%m-%d') as fap_popup_udt_dt
		from
			fap_popup_tb
		order by
			fap_popup_seq desc
	</select>
	<!-- FAP 팝업 정보 리스트 조회 종료 -->
	
	<!-- FAP 팝업 정보 단일 조회 시작 -->
	<select id="fap_popup_select_one" parameterType="int" resultType="FAPPopup">
		select
			fap_popup_seq
			,fap_popup_title
			,fap_popup_ct
			,fap_popup_img_origin
			,fap_popup_img_saved
			,fap_popup_gb
			,fap_popup_st
			,fap_popup_link
			,fap_popup_ins_id
			,DATE_FORMAT(fap_popup_ins_dt, '%Y-%m-%d') as fap_popup_ins_dt
			,fap_popup_udt_id
			,DATE_FORMAT(fap_popup_udt_dt, '%Y-%m-%d') as fap_popup_udt_dt
		from
			fap_popup_tb
		where
			fap_popup_seq = #{fap_popup_seq}
	</select>
	<!-- FAP 팝업 정보 단일 조회 종료 -->
	
	<!-- FAP 팝업 정보 삭제 시작 -->
	<delete id="fap_popup_delete" parameterType="int">
		delete from
			fap_popup_tb
		where
			fap_popup_seq = #{fap_popup_seq}
	</delete>
	<!-- FAP 팝업 정보 삭제 종료 -->
	
	<!-- FAP 이력서 수정여부 구분 변경 시작 -->
	<update id="fap_job_resume_update_gb" parameterType="String">
		update
			fap_job_apply_info_tb
		set
			fap_job_resume_update_gb = #{fap_job_resume_update_gb}
	</update>
	<!-- FAP 이력서 수정여부 구분 변경 종료 -->
	
	<!-- FAP 관리자 지원자별 지원현황 리스트 검색 시작 -->
	<resultMap type="java.util.LinkedHashMap" id="applierMap">
		<id property="user_id" column="user_id" />
		<result property="user_nm" column="user_nm" />
		<result property="user_flag" column="user_flag" />
		<result property="rt_count" column="rt_count" />
		<result property="reserve_count" column="reserve_count" />
		<result property="standby_count" column="standby_count" />
		<result property="final_fail_count" column="final_fail_count" />
		<result property="k_apply_count" column="k_apply_count" />
		<result property="k_process_count" column="k_process_count" />
		<result property="k_fail_count" column="k_fail_count" />
		<result property="k_success_count" column="k_success_count" />
		<result property="apply_count" column="apply_count" />
		<result property="process_count" column="process_count" />
		<result property="fail_count" column="fail_count" />
		<result property="success_count" column="success_count" />
		<collection property="kFair" javaType="java.util.ArrayList" resultMap="kFairList" />
		<collection property="jFair" javaType="java.util.ArrayList" resultMap="jFairList" />
	</resultMap>
	<resultMap type="java.util.LinkedHashMap" id="kFairList">
		<id property="k_info_rank" column="k_info_rank" />
		<result property="k_comp_nm" column="k_comp_nm" />
		<result property="k_rt_acp" column="k_rt_acp" />
		<result property="k_choice_gb" column="k_choice_gb" />
	</resultMap>
	<resultMap type="java.util.LinkedHashMap" id="jFairList">
		<id property="info_rank" column="info_rank" />
		<result property="j_comp_nm" column="j_comp_nm" />
		<result property="j_rt_acp" column="j_rt_acp" />
		<result property="j_choice_gb" column="j_choice_gb" />
		<result property="j_standby_rank" column="j_standby_rank" />
	</resultMap>
	<select id="applicant_status_per_applier_search" parameterType="hashmap" resultMap="applierMap">
		select
			sb.user_id as user_id
		    ,sb.user_nm as user_nm
		    ,sb.user_flag as user_flag
		    ,sb.rt_count as rt_count
		    ,sb.reserve_count as reserve_count
		    ,sb.standby_count as standby_count
		    ,sb.final_fail_count as final_fail_count
		    
		    ,sb.k_apply_count as k_apply_count
		    ,sb.k_process_count as k_process_count
		    ,sb.k_fail_count as k_fail_count
		    ,sb.k_success_count as k_success_count
		    
		    ,sb.apply_count as apply_count
		    ,sb.process_count as process_count
		    ,sb.fail_count as fail_count
		    ,sb.success_count as success_count
			
			,IF(divide2.fap_jobfair_divide_gb = 'C0100', company.fap_comp_en_nm , null) as k_comp_nm
			,IF(divide2.fap_jobfair_divide_gb = 'C0100', final2.fap_job_app_final_rt_acp_user , null) as k_rt_acp
			,IF(divide2.fap_jobfair_divide_gb = 'C0100', final2.fap_job_app_choice_comp_gb , null) as k_choice_gb
			,CASE WHEN IF(divide2.fap_jobfair_divide_gb = 'C0100', company.fap_comp_en_nm , null) IS NULL THEN NULL 
				ELSE fap_info.fap_job_app_info_rank
			 END as k_info_rank
			
			,IF(divide2.fap_jobfair_divide_gb = 'C0101', company.fap_comp_en_nm , null) as j_comp_nm
			,IF(divide2.fap_jobfair_divide_gb = 'C0101', final2.fap_job_app_final_rt_acp_user , null) as j_rt_acp
			,IF(divide2.fap_jobfair_divide_gb = 'C0101', final2.fap_job_app_choice_comp_gb , null) as j_choice_gb
			,IF(divide2.fap_jobfair_divide_gb = 'C0101', final2.fap_job_app_standby_rank_user , null) as j_standby_rank
			,CASE WHEN IF(divide2.fap_jobfair_divide_gb = 'C0101', company.fap_comp_en_nm , null) IS NULL THEN NULL 
				ELSE fap_info.fap_job_app_info_rank
			 END as info_rank
		from
			fap_job_apply_info_tb fap_info
		inner join
		(
			select
				job_apply.user_id as user_id
				,user.user_nm as user_nm
				,user.user_flag as user_flag
				,(
					select
						count(*)
					from
						fap_job_apply_final_result_tb final
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = final.fap_job_app_info_seq
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					where
						final.user_id = user.user_id
					and
						job_apply.fap_jobfair_seq = divide.fap_jobfair_seq
					and
						final.fap_job_app_final_rt_acp_user = 'D0001'
				) as rt_count
				,(
					select
						count(*)
					from
						fap_job_apply_final_result_tb final
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = final.fap_job_app_info_seq
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					where
						final.user_id = user.user_id
					and
						job_apply.fap_jobfair_seq = divide.fap_jobfair_seq
					and
						final.fap_job_app_final_rt_acp_user = 'D0004'
				) as reserve_count
				,(
					select
						count(*)
					from
						fap_job_apply_final_result_tb final
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = final.fap_job_app_info_seq
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					where
						final.user_id = user.user_id
					and
						job_apply.fap_jobfair_seq = divide.fap_jobfair_seq
					and
						final.fap_job_app_final_rt_acp_user = 'D0000'
				) as standby_count
				,(
					select
						count(*)
					from
						fap_job_apply_final_result_tb final
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = final.fap_job_app_info_seq
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					where
						final.user_id = user.user_id
					and
						job_apply.fap_jobfair_seq = divide.fap_jobfair_seq
					and
						final.fap_job_app_final_rt_acp_user = 'D0002'
				) as final_fail_count
				,IFNULL((
					select
						numbers.fap_user_apply_numbers_count
					from
						fap_user_apply_numbers_tb numbers
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					and
						numbers.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0101'
					where
						numbers.user_id = user.user_id
				),0) as apply_count
				,IFNULL((
					select
						numbers.fap_user_apply_numbers_count
					from
						fap_user_apply_numbers_tb numbers
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					and
						numbers.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0100'
					where
						numbers.user_id = user.user_id
				),0) as k_apply_count
				,(
					select
						count(*)
					from
						fap_job_apply_result_tb result
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = result.fap_job_app_info_seq
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0101'
					and
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					where
						result.user_id = user.user_id
					and
						result.fap_job_recruit_pcs_seq in (
															select
																t1.fap_job_recruit_pcs_seq
															from
																fap_job_recruit_pcs_tb t1,
																(
																	select
																		fap_job_ad_seq
																		,max(fap_job_recruit_pcs_od) as max_od
																	from
																		fap_job_recruit_pcs_tb
																	group by
																		fap_job_ad_seq
															   ) t2
															where
																t1.fap_job_recruit_pcs_od = t2.max_od
															and
																t1.fap_job_ad_seq = t2.fap_job_ad_seq
														)
					and
						result.fap_job_app_rt_acp = 'D0000'
				) as process_count
				,(
					select
						count(*)
					from
						fap_job_apply_result_tb result
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = result.fap_job_app_info_seq
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0100'
					and
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					where
						result.user_id = user.user_id
					and
						result.fap_job_recruit_pcs_seq in (
															select
																t1.fap_job_recruit_pcs_seq
															from
																fap_job_recruit_pcs_tb t1,
																(
																	select
																		fap_job_ad_seq
																		,max(fap_job_recruit_pcs_od) as max_od
																	from
																		fap_job_recruit_pcs_tb
																	group by
																		fap_job_ad_seq
															   ) t2
															where
																t1.fap_job_recruit_pcs_od = t2.max_od
															and
																t1.fap_job_ad_seq = t2.fap_job_ad_seq
														)
					and
						result.fap_job_app_rt_acp = 'D0000'
				) as k_process_count
				,(
					select
						count(*)
					from
						fap_job_apply_result_tb result
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = result.fap_job_app_info_seq
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0101'
					and
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					where
						result.user_id = user.user_id
					and
						result.fap_job_recruit_pcs_seq in (
															select
																t1.fap_job_recruit_pcs_seq
															from
																fap_job_recruit_pcs_tb t1,
																(
																	select
																		fap_job_ad_seq
																		,max(fap_job_recruit_pcs_od) as max_od
																	from
																		fap_job_recruit_pcs_tb
																	group by
																		fap_job_ad_seq
															   ) t2
															where
																t1.fap_job_recruit_pcs_od = t2.max_od
															and
																t1.fap_job_ad_seq = t2.fap_job_ad_seq
														)
					and
						result.fap_job_app_rt_acp in ('D0002' ,'D0003')
				) as fail_count
				,(
					select
						count(*)
					from
						fap_job_apply_result_tb result
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = result.fap_job_app_info_seq
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0100'
					and
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					where
						result.user_id = user.user_id
					and
						result.fap_job_recruit_pcs_seq in (
															select
																t1.fap_job_recruit_pcs_seq
															from
																fap_job_recruit_pcs_tb t1,
																(
																	select
																		fap_job_ad_seq
																		,max(fap_job_recruit_pcs_od) as max_od
																	from
																		fap_job_recruit_pcs_tb
																	group by
																		fap_job_ad_seq
															   ) t2
															where
																t1.fap_job_recruit_pcs_od = t2.max_od
															and
																t1.fap_job_ad_seq = t2.fap_job_ad_seq
														)
					and
						result.fap_job_app_rt_acp in ('D0002' ,'D0003')
				) as k_fail_count
				,(
					select
						count(*)
					from
						fap_job_apply_result_tb result
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = result.fap_job_app_info_seq
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0101'
					and
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					where
						result.user_id = user.user_id
					and
						result.fap_job_recruit_pcs_seq in (
															select
																t1.fap_job_recruit_pcs_seq
															from
																fap_job_recruit_pcs_tb t1,
																(
																	select
																		fap_job_ad_seq
																		,max(fap_job_recruit_pcs_od) as max_od
																	from
																		fap_job_recruit_pcs_tb
																	group by
																		fap_job_ad_seq
															   ) t2
															where
																t1.fap_job_recruit_pcs_od = t2.max_od
															and
																t1.fap_job_ad_seq = t2.fap_job_ad_seq
														)
					and
						result.fap_job_app_rt_acp = 'D0001'
				) as success_count
				,(
					select
						count(*)
					from
						fap_job_apply_result_tb result
					inner join
						fap_job_apply_info_tb info
					on
						info.fap_job_app_info_seq = result.fap_job_app_info_seq
					inner join
						fap_jobfair_tb jobfair
					on
						jobfair.fap_jobfair_seq = #{jobfairSelect}
					inner join
						fap_jobfair_divide_tb divide
					on
						divide.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
					and
						divide.fap_jobfair_divide_gb = 'C0100'
					and
						divide.fap_jobfair_seq = jobfair.fap_jobfair_seq
					where
						result.user_id = user.user_id
					and
						result.fap_job_recruit_pcs_seq in (
															select
																t1.fap_job_recruit_pcs_seq
															from
																fap_job_recruit_pcs_tb t1,
																(
																	select
																		fap_job_ad_seq
																		,max(fap_job_recruit_pcs_od) as max_od
																	from
																		fap_job_recruit_pcs_tb
																	group by
																		fap_job_ad_seq
															   ) t2
															where
																t1.fap_job_recruit_pcs_od = t2.max_od
															and
																t1.fap_job_ad_seq = t2.fap_job_ad_seq
														)
					and
						result.fap_job_app_rt_acp = 'D0001'
				) as k_success_count
			from
				fap_jobfair_apply_tb job_apply
			inner join
				com_user_tb user
			on
				job_apply.user_id = user.user_id
			where
				job_apply.fap_jobfair_seq = #{jobfairSelect}
			) as sb
		on
			sb.user_id = fap_info.user_id
		inner join
			fap_jobfair_divide_tb divide2
		on
			fap_info.fap_jobfair_divide_seq = divide2.fap_jobfair_divide_seq
		and
			divide2.fap_jobfair_seq = #{jobfairSelect}
		left outer join
			fap_job_apply_final_result_tb final2
		on
			fap_info.fap_job_app_info_seq = final2.fap_job_app_info_seq
		inner join
			fap_company_user_tb company
		on
			fap_info.fap_comp_id = company.fap_comp_id
		where
			1=1
		<if test="typeSelect != 'A0' ">
			and
				user_flag = #{typeSelect}
		</if>
		<if test="searchName != '' and  searchName != null">
			and
				user_nm like concat('%', #{searchName},'%')
		</if>
		order by
			fap_info.user_id, fap_info.fap_job_app_info_rank
	</select>
	<!-- FAP 관리자 지원자별 지원현황 리스트 검색 종료 -->	
	
	<!-- FAP 잡페어별 지원자가 최대 지원한 갯수 검색 시작 -->
	<select id="jobfair_apply_max_count" parameterType="hashmap" resultType="int">
		select
			IFNULL(max(fap_user_apply_numbers_count),0) as num
		from
			fap_user_apply_numbers_tb
		where
			fap_jobfair_divide_seq in (
														select
															fap_jobfair_divide_seq
														from
															fap_jobfair_divide_tb
														where
															fap_jobfair_seq = #{fap_jobfair_seq}
														and
															fap_jobfair_divide_gb = #{fap_jobfair_divide_gb}
														)
	</select>
	<!-- FAP 잡페어별 지원자가 최대 지원한 갯수 검색 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운1 시작 -->
	<select id="applicant_status_per_comp_excel_one" parameterType="int" resultType="java.util.LinkedHashMap">
		select
			company.fap_comp_id as fap_comp_id
		    ,'SES' as fap_agency
		    ,company.fap_comp_en_nm as fap_comp_en_nm
		    ,'O' as fap_track_two
		    ,CASE
				WHEN sub.k_join = 1
		        THEN 'O'
		        ELSE 'X'
			END as k_join
		    ,IFNULL(sub.k_recruit_num,0) as k_recruit_num
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0100'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as k_apply_num
		    ,'k_apply_nm' as k_apply_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0100' and final.fap_job_app_final_rt_acp_user = 'D0002'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as k_apply_fail_num
			,'k_apply_fail_nm' as k_apply_fail_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0100' and final.fap_job_app_final_rt_acp_user = 'D0001'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as k_apply_success_num
		    ,'k_apply_success_nm' as k_apply_success_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0100' and final.fap_job_app_final_rt_acp_user = 'D0001' and final.fap_job_app_choice_comp_gb = 'D0701'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as k_apply_final_num
		    ,'k_apply_final_nm' as k_apply_final_nm
		    ,CASE
				WHEN sub.j_join = 1
		        THEN 'O'
		        ELSE 'X'
			END as j_join
		    ,IFNULL(sub.j_recruit_num,0) as j_recruit_num
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0101'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as j_apply_num
		    ,'j_apply_nm' as j_apply_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0101' and final.fap_job_app_final_rt_acp_user = 'D0002'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as j_apply_fail_num
		    ,'j_apply_fail_nm' as j_apply_fail_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0101' and final.fap_job_app_final_rt_acp_user = 'D0001'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as j_apply_success_num
		    ,'j_apply_success_nm' as j_apply_success_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0101' and final.fap_job_app_final_rt_acp_user = 'D0004'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as j_apply_reserve_num
		    ,'j_apply_reserve_nm' as j_apply_reserve_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0101' and final.fap_job_app_final_rt_acp_user = 'D0001' and final.fap_job_app_choice_comp_gb = 'D0701'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as j_apply_final_num
		    ,'j_apply_final_nm' as j_apply_final_nm
		    ,CASE
				WHEN sub.post_join = 1
		        THEN 'O'
		        ELSE 'X'
			END as post_join
		    ,IFNULL(sub.post_recruit_num,0) as post_recruit_num
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0102'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as post_apply_num
		    ,'post_apply_nm' as post_apply_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0102' and final.fap_job_app_final_rt_acp_user = 'D0002'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as post_apply_fail_num
		    ,'post_apply_fail_nm' as post_apply_fail_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0102' and final.fap_job_app_final_rt_acp_user = 'D0001'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as post_apply_success_num
		    ,'post_apply_success_nm' as post_apply_success_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0102' and final.fap_job_app_final_rt_acp_user = 'D0004'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as post_apply_reserve_num
		    ,'post_apply_reserve_nm' as post_apply_reserve_nm
			,COUNT(
				CASE
					WHEN fd.fap_jobfair_divide_gb = 'C0102' and final.fap_job_app_final_rt_acp_user = 'D0001' and final.fap_job_app_choice_comp_gb = 'D0701'
					THEN apply.fap_job_app_info_seq
					ELSE null
				END
			) as post_apply_final_num
		    ,'post_apply_final_nm' as post_apply_final_nm
		    ,'final_num' as final_num
		    ,'final_nm' as final_nm
		    ,'join_dt' as join_dt
		    ,'join_dtl' as join_dtl
		from
			fap_jobfair_comp_tb job_comp
		inner join
			(
				select
					ad.fap_comp_id as fap_comp_id
					,MAX(
						CASE
							WHEN divide.fap_jobfair_divide_gb = 'C0100'
							THEN TRUE
							ELSE FALSE
						END
					) as k_join
					,SUM(
						CASE
							WHEN divide.fap_jobfair_divide_gb = 'C0100'
							THEN ad.fap_job_ad_recruit_num
							ELSE null
						END
					) as k_recruit_num
					,MAX(
						CASE
							WHEN divide.fap_jobfair_divide_gb = 'C0101'
							THEN TRUE
							ELSE FALSE
						END
					) as j_join
					,SUM(
						CASE
							WHEN divide.fap_jobfair_divide_gb = 'C0101'
							THEN ad.fap_job_ad_recruit_num
							ELSE null
						END
					) as j_recruit_num
					,MAX(
						CASE
							WHEN divide.fap_jobfair_divide_gb = 'C0102'
							THEN TRUE
							ELSE FALSE
						END
					) as post_join
					,SUM(
						CASE
							WHEN divide.fap_jobfair_divide_gb = 'C0102'
							THEN ad.fap_job_ad_recruit_num
							ELSE null
						END
					) as post_recruit_num
				from
					fap_job_ad_tb ad
				inner join
					fap_jobfair_divide_tb divide
				on
					ad.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
				where
					ad.fap_jobfair_seq = #{jobfair_seq}
				and
					ad.fap_job_ad_state in ('C2101','C2102')
				group by
					ad.fap_comp_id
			) sub
		on
			job_comp.fap_comp_id = sub.fap_comp_id
		left join
			fap_job_apply_info_tb apply
		on
			job_comp.fap_comp_id = apply.fap_comp_id
		and
			job_comp.fap_jobfair_divide_seq = apply.fap_jobfair_divide_seq
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		left join
			fap_jobfair_divide_tb fd
		on
			apply.fap_jobfair_divide_seq = fd.fap_jobfair_divide_seq
		inner join
			fap_company_user_tb company
		on
			company.fap_comp_id = job_comp.fap_comp_id
		where
			job_comp.fap_jobfair_seq = #{jobfair_seq}
		group by
			job_comp.fap_comp_id
		order by
			job_comp.fap_comp_id
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운1 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운2 시작 -->
	<select id="applicant_status_per_comp_excel_two" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0100'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운2 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운3 시작 -->
	<select id="applicant_status_per_comp_excel_three" parameterType="int" resultType="java.util.LinkedHashMap">
		select
			apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0100'
		and
			final.fap_job_app_final_rt_acp_user = 'D0002'
		order by
			apply.fap_comp_id, cuser.user_flag	
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운3 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운4 시작 -->
	<select id="applicant_status_per_comp_excel_four" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0100'
		and
			final.fap_job_app_final_rt_acp_user = 'D0001'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운4 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운5 시작 -->
	<select id="applicant_status_per_comp_excel_five" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0100'
		and
			final.fap_job_app_final_rt_acp_user = 'D0001'
		and 
			final.fap_job_app_choice_comp_gb = 'D0701'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운5 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운6 시작 -->
	<select id="applicant_status_per_comp_excel_six" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0101'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운6 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운7 시작 -->
	<select id="applicant_status_per_comp_excel_seven" parameterType="int" resultType="java.util.LinkedHashMap">
		select
			apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0101'
		and
			final.fap_job_app_final_rt_acp_user = 'D0002'
		order by
			apply.fap_comp_id, cuser.user_flag	
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운7 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운8 시작 -->
	<select id="applicant_status_per_comp_excel_eight" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0101'
		and
			final.fap_job_app_final_rt_acp_user = 'D0001'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운8 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운9 시작 -->
	<select id="applicant_status_per_comp_excel_nine" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0101'
		and
			final.fap_job_app_final_rt_acp_user = 'D0004'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운9 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운10 시작 -->
	<select id="applicant_status_per_comp_excel_ten" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0101'
		and
			final.fap_job_app_final_rt_acp_user = 'D0001'
		and 
			final.fap_job_app_choice_comp_gb = 'D0701'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운10 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운11 시작 -->
	<select id="applicant_status_per_comp_excel_eleven" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0102'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운11 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운12 시작 -->
	<select id="applicant_status_per_comp_excel_twelve" parameterType="int" resultType="java.util.LinkedHashMap">
		select
			apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0102'
		and
			final.fap_job_app_final_rt_acp_user = 'D0002'
		order by
			apply.fap_comp_id, cuser.user_flag	
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운12 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운13 시작 -->
	<select id="applicant_status_per_comp_excel_thirteen" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0102'
		and
			final.fap_job_app_final_rt_acp_user = 'D0001'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운13 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운14 시작 -->
	<select id="applicant_status_per_comp_excel_fourteen" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0102'
		and
			final.fap_job_app_final_rt_acp_user = 'D0004'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운14 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운15 시작 -->
	<select id="applicant_status_per_comp_excel_fifteen" parameterType="int" resultType="java.util.LinkedHashMap">
		select
		    apply.fap_comp_id as fap_comp_id
		    ,apply.user_id as user_id
		    ,cuser.user_nm as user_nm
		    ,cuser.user_birth as user_birth
		    ,(
				select
					code_tb.code_nm
				from
					com_code_tb code_tb
				where
					code_tb.group_id = SUBSTR(cuser.user_flag,1,3)
				and
					code_tb.code = SUBSTR(cuser.user_flag,4,2)
		    ) as user_flag
		from
			fap_job_apply_info_tb apply
		inner join
			fap_jobfair_divide_tb divide
		on
			apply.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		and
			divide.fap_jobfair_seq = #{jobfair_seq}
		inner join
			com_user_tb cuser
		on
			apply.user_id = cuser.user_id
		left join
			fap_job_apply_final_result_tb final
		on
			apply.fap_job_app_info_seq = final.fap_job_app_info_seq
		where
			apply.fap_comp_id in (
									select
										ad.fap_comp_id
									from
										fap_job_ad_tb ad
									where
										ad.fap_comp_id in (
															select
																fap_comp_id
															from
																fap_jobfair_comp_tb
															where
																fap_jobfair_seq = #{jobfair_seq}
															group by
																fap_comp_id
														)
									and
										ad.fap_job_ad_state in ('C2101','C2102')
									group by
										ad.fap_comp_id
								)
		and
			divide.fap_jobfair_divide_gb = 'C0102'
		and
			final.fap_job_app_final_rt_acp_user = 'D0001'
		and 
			final.fap_job_app_choice_comp_gb = 'D0701'
		order by
			apply.fap_comp_id, cuser.user_flag
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운15 종료 -->
	
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운16 시작 -->
	<select id="applicant_status_per_comp_excel_sixteen" parameterType="int" resultType="java.util.LinkedHashMap">
		select
			ad.fap_comp_id as fap_comp_id
		    ,GROUP_CONCAT(
				(
					select
						code_tb.code_nm
					from
						com_code_tb code_tb
					where
						code_tb.group_id = SUBSTR(job_join.fap_job_join_dt_gb,1,3)
					and
						code_tb.code = SUBSTR(job_join.fap_job_join_dt_gb,4,2)
				)
			SEPARATOR ' ') as fap_job_join_dt
		    ,GROUP_CONCAT(distinct job_join.fap_job_join_dt_dtl SEPARATOR ' ') as fap_job_join_dtl
		from
			fap_job_ad_tb ad
		left join
			fap_job_join_dt_tb job_join
		on
			ad.fap_job_ad_seq = job_join.fap_job_ad_seq
		where
			ad.fap_comp_id in (
								select
									fap_comp_id
								from
									fap_jobfair_comp_tb
								where
									fap_jobfair_seq = #{jobfair_seq}
								group by
									fap_comp_id
							)
		and
			ad.fap_job_ad_state in ('C2101','C2102')
		and
			ad.fap_jobfair_seq = #{jobfair_seq}
		group by
			ad.fap_comp_id
		order by
			ad.fap_comp_id
	</select>
	<!-- FAP 관리자 기업별 지원현황 엑셀 다운16 종료 -->
	
	<!-- FAP 관리자 잡페어별 그룹코드 셀렉트 시작; 2019. 7. 25. 김경아-->
	<select id="admin_select_company_group_code_list" parameterType="hashmap" resultType="hashmap"> 
		select 
			fap_comp_groupcode
			,fap_comp_stock
			,fap_comp_3years_avg_sales
			,fap_comp_employee_num
		from
			fap_comp_group_set_tb
		where
			fap_jobfair_seq = #{fap_jobfair_seq}
	</select>
	<!-- FAP 관리자 잡페어별 그룹코드 셀렉트 종료-->
	
	
	<!-- FAP 채용공고 상세검색 서비스 시작; 2019. 07. 26. 김경아 -->	 
	<resultMap type="hashmap" id="searchJobAdList">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_title" column="fap_job_ad_title"/>
		<result property="fap_job_ad_groupcode" column="fap_job_ad_groupcode"/>
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq"/>
		<result property="fap_jobfair_seq" column="fap_jobfair_seq"/>
		<result property="fap_comp_ja_nm" column="fap_comp_ja_nm"/>
		<result property="fap_job_ad_udt_dt" column="fap_job_ad_udt_dt"/>
		<result property="fap_jobfair_divide_st" column="fap_jobfair_divide_st"/>
		<result property="fap_jobfair_divide_et" column="fap_jobfair_divide_et"/>
		<collection property="workPlaceList" javaType="java.util.ArrayList" resultMap="searchJobAdWorkPlace" />	
		<collection property="categoryList" javaType="java.util.ArrayList" resultMap="searchJobAdCategory" />
	</resultMap>
	<resultMap type="hashmap" id="searchJobAdWorkPlace">
		<id property="fap_job_workplace_gb" column="fap_job_workplace_gb" />
	</resultMap>
	<resultMap type="hashmap" id="searchJobAdCategory">
		<id property="fap_job_category_gb" column="fap_job_category_gb" />
	</resultMap>	
	<select id="admin_search_job_advertisement_list" parameterType="hashmap" resultMap="searchJobAdList">
		select 
			ad.fap_job_ad_seq as fap_job_ad_seq
			,ad.fap_job_ad_title as fap_job_ad_title
			,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
            ,comp.fap_comp_ja_nm as fap_comp_ja_nm
            ,date_format(ad.fap_job_ad_udt_dt, '%y-%m-%d') as fap_job_ad_udt_dt
            ,date_format(divide.fap_jobfair_divide_st, '%y-%m-%d') as fap_jobfair_divide_st
            ,date_format(divide.fap_jobfair_divide_et, '%y-%m-%d') as fap_jobfair_divide_et
            ,place.fap_job_workplace_gb as fap_job_workplace_gb
            ,category.fap_job_category_gb as fap_job_category_gb
		from
			fap_job_ad_tb ad		 
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_jobfair_divide_tb divide
            on ad.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
            and ad.fap_jobfair_seq = divide.fap_jobfair_seq
		left outer join
			fap_job_workplace_tb place
            on ad.fap_job_ad_seq = place.fap_job_ad_seq
		left outer join
			fap_job_category_tb category
            on ad.fap_job_ad_seq = category.fap_job_ad_seq
		where
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
		    ad.fap_jobfair_seq = #{fap_jobfair_seq}
		  <if test="stateFlag ==null || stateFlag == 'progressing'">
				and	
					ad.fap_job_ad_state = 'C2101'
			</if>
			<if test="stateFlag == 'completed'">
				and	
					ad.fap_job_ad_state = 'C2102'
			</if>
		    <!-- 회사이름 검색 -->
		    <if test="searchedCompanyName != '' and searchedCompanyName != null">
		    and
		    comp.fap_comp_ja_nm like concat('%',#{searchedCompanyName},'%') 
		    </if>
		    <!-- 그룹별 검색 -->
		    <if test="selectedGroupCodeList != null and selectedGroupCodeList.size != 0">
		    	<foreach item ="fap_job_ad_groupcode" collection="selectedGroupCodeList" index="index" open="and ad.fap_job_ad_groupcode in (" separator=", " close=")">
		   	 		#{fap_job_ad_groupcode}
		    	</foreach>
		    </if>
		    <!-- 주요업무별 검색-->
		    <if test="selectedWorkGbList != null and selectedWorkGbList.size != 0">
		    and
		    ad.fap_job_ad_seq in (
		    						select 
										fap_job_ad_seq
									from
										fap_job_work_tb
									where
											<foreach item ="fap_job_work_gb" collection="selectedWorkGbList" index="index" open="fap_job_work_gb in (" separator=", " close=")">
												#{fap_job_work_gb}
											</foreach>
								  )
		    </if>
		  	<!-- 지역별 검색-->
		    <if test="selectedWorkplaceGbList != null and selectedWorkplaceGbList.size != 0">
		    and
		    ad.fap_job_ad_seq in (
		    						select 
										fap_job_ad_seq
									from
										fap_job_workplace_tb
									where
										    <foreach item ="fap_workplace_gb" collection="selectedWorkplaceGbList" index="index" open="fap_job_workplace_gb in (" separator=", " close=")">
										   		#{fap_workplace_gb}
										    </foreach>
								  )
		    </if>
		    <if test="selectedRecruitPcsGbList != null and selectedRecruitPcsGbList.size != 0">
		    and
		    <foreach item ="selectedRecruitPcsGb" collection="selectedRecruitPcsGbList" index="index" open=" (" separator="or" close=") ">  
			    <!-- 화상면접 검색 -->
			    <if test="selectedRecruitPcsGb == 'C3301'">
	            ad.fap_job_ad_seq in (
										select 
											pcs.fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb pcs
	                                    inner join
											fap_job_itv_tb itv
	                                    on
											pcs.fap_job_recruit_pcs_seq = itv.fap_job_recruit_pcs_seq
										where
											itv.fap_job_itv_gb = #{selectedRecruitPcsGb}
	            					  )
				</if>
			    <!-- 필기시험 검색 -->
			    <if test="selectedRecruitPcsGb == 'C2600'">
	            ad.fap_job_ad_seq in (
										select 
											pcs.fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb pcs
	                                    inner join
											fap_job_exam_tb exam
	                                    on
											pcs.fap_job_recruit_pcs_seq = exam.fap_job_recruit_pcs_seq
										where
											exam.fap_job_exam_gb = #{selectedRecruitPcsGb}
	            					  )
	            </if>
	            <!-- web시험 검색 -->
			    <if test="selectedRecruitPcsGb == 'C2601'">
	            ad.fap_job_ad_seq in (
										select 
											pcs.fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb pcs
	                                    inner join
											fap_job_exam_tb exam
	                                    on
											pcs.fap_job_recruit_pcs_seq = exam.fap_job_recruit_pcs_seq
										where
											exam.fap_job_exam_gb = #{selectedRecruitPcsGb}
	            					  )
	            </if>
				<!-- 기타전형 검색 -->
			    <if test="selectedRecruitPcsGb == 'C2503'">
	            ad.fap_job_ad_seq in (
										select 
											fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb
										where
											fap_job_recruit_pcs_gb = #{selectedRecruitPcsGb}
									  )
			    </if>
			</foreach>
			</if>       					  
		order by ad.fap_job_ad_udt_dt desc
	</select>
	<!-- FAP 채용공고 상세검색 서비스 종료 -->
	
 	<!-- 관리자 게시판 조회수 증가 시작 -->
	<update id="board_contents_hit_update" parameterType="int">
		update
			com_board_content_tb
		set
			board_content_hit = board_content_hit + 1
		where
			board_content_seq = #{board_content_seq}
	</update>	
	<!-- 관리자 게시판 조회수 증가 종료 -->
 
	<!-- 게시판 세부내용 검색 시작 -->
	<resultMap type="hashmap" id="boardContentMap">
		<id property="board_content_seq" column="board_content_seq" />
		<result property="board_seq" column="board_seq" />
		<result property="board_content_title" column="board_content_title" />
		<result property="board_content_ct" column="board_content_ct" />
		<result property="board_content_nm" column="board_content_nm" />
		<result property="board_content_hit" column="board_content_hit" />
		<result property="board_content_udt_dt" column="board_content_udt_dt" />
		<result property="board_content_imp" column="board_content_imp" />
		<association property="noticeContent" resultMap="fapNoticeContent"></association>
		<collection property="fileList" javaType="java.util.ArrayList" resultMap="boardContentFile" />
	</resultMap>
	<resultMap type="hashmap" id="boardContentFile">
		<id property="board_file_seq" column="board_file_seq" />
		<result property="board_file_saved" column="board_file_saved" />
		<result property="board_file_origin" column="board_file_origin" />
	</resultMap>
	<resultMap type="hashmap" id="fapNoticeContent">
		<id property="fap_notice_seq" column="fap_notice_seq"/>
		<result property="fap_notice_view_target_ck" column="fap_notice_view_target_ck"/>
		<result property="fap_notice_kind" column="fap_notice_kind"/>
	</resultMap>
	<select id="board_contents_detail" parameterType="int" resultMap="boardContentMap">
		select
			content.board_seq
			, content.board_content_seq
			, content.board_content_title
		    , content.board_content_ct
			, content.board_content_nm
			, content.board_content_hit
			, content.board_content_imp
			, DATE_FORMAT(content.board_content_udt_dt, '%Y-%m-%d') as board_content_udt_dt
		    , file.board_file_seq
		    , file.board_file_saved
		    , file.board_file_origin
		    , notice_content.fap_notice_seq
		    , notice_content.fap_notice_view_target_ck
		    , notice_content.fap_notice_kind
		from
			com_board_content_tb content
		left join
			com_board_file_tb file
		on
			content.board_content_seq = file.board_content_seq
		left join
			fap_notice_content_tb as notice_content
		on
			content.board_content_seq = notice_content.board_content_seq
		where
			content.board_content_seq = #{board_content_seq}
	</select>
	<!-- 게시판 세부내용 검색 시작 -->
	
	<!-- FAP 잡페어 참가신청시 관리자 알림테이블에 해당 정보 추가 시작 -->
	<insert id="insert_admin_notice_info" parameterType="hashmap" >
	     insert into
			fap_admin_notice_tb(
					fap_admin_notice_ins_id                 
			  	  , fap_admin_notice_ct  
			  	  <if test="fap_admin_notice_handle_need_gb != null">
			  	  , fap_admin_notice_handle_need_gb
			  	  </if>
			  	  , fap_admin_notice_handle_gb          
		  )values(
				   #{fap_admin_notice_ins_id}
				 , #{fap_admin_notice_ct}
				  <if test="fap_admin_notice_handle_need_gb != null">
				 , #{fap_admin_notice_handle_need_gb}
				 </if>
				 , #{fap_admin_notice_handle_gb}
		  )
	</insert>
	<!-- FAP 잡페어 참가신청시 관리자 알림테이블에 해당 정보 추가 종료 -->
	
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 등록 시작 -->
	<insert id="mainpage_ct_insert" parameterType="FAPMainpageCt">
		insert into
			fap_mainpage_ct_tb(
				fap_jobfair_divide_seq
				,fap_jobfair_seq
				,fap_mainpage_ct_top_ko
				,fap_mainpage_ct_top_ja
				,fap_mainpage_ct_quarter_ko
				,fap_mainpage_ct_quarter_ja
				,fap_mainpage_ct_imp_code
				,fap_mainpage_ct_ins_id
				,fap_mainpage_ct_udt_id
			) values (
				#{fap_jobfair_divide_seq}
				,#{fap_jobfair_seq}
				,#{fap_mainpage_ct_top_ko}
				,#{fap_mainpage_ct_top_ja}
				,#{fap_mainpage_ct_quarter_ko}
				,#{fap_mainpage_ct_quarter_ja}
				,#{fap_mainpage_ct_imp_code}
				,#{fap_mainpage_ct_ins_id}
				,#{fap_mainpage_ct_udt_id}
			)
	</insert>
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 등록 종료 -->
	
	<!-- FAP 관리자 알림 List 출력 시작-->
	<select id="select_admin_notice_alim_list" parameterType="hashmap" resultType="hashmap">
		select 	   
			  fap_admin_notice_seq  		 
			, DATE_FORMAT(fap_admin_notice_ins_dt, '%Y-%m-%d %H:%i:%s') as fap_admin_notice_ins_dt
			, fap_admin_notice_ct
			, fap_admin_notice_handle_need_gb
			, fap_admin_notice_handle_fin_gb
			, fap_admin_notice_handle_gb
        from
        	fap_admin_notice_tb       
        <if test ="selected_handle_gb != 'D2300' ">
         	 where  
         	 	 fap_admin_notice_handle_gb = #{selected_handle_gb}
        </if>
        order by
        	fap_admin_notice_ins_dt desc
	</select>
	<!-- FAP 관리자 알림 List 출력 종료-->
	
	<!-- FAP 관리자 알림 List 갯수 조회 시작-->
	<select id="select_admin_notice_alim_list_count" parameterType="String" resultType="int">
		select 	   
			count(*)
        from
        	fap_admin_notice_tb   
        <if test ="_parameter != 'D2300' ">
        where  
         	fap_admin_notice_handle_gb = #{_parameter}
        </if>      
	</select>
	<!-- FAP 관리자 알림 List 갯수 조회  종료-->
	
	<select id="select_job_ad_title" parameterType="long" resultType="String">
		select 
			fap_job_ad_title
		from
			fap_job_ad_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	
	<select id="select_job_qna_question_title" parameterType="long" resultType="String"> 
		select 
			fap_job_qna_question_title
		from
			fap_job_qna_question_tb
		where
			fap_job_qna_question_seq = #{fap_job_qna_question_seq}
	</select>
	
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 수정 시작 -->
	<update id="mainpage_ct_update" parameterType="FAPMainpageCt">
		update
			fap_mainpage_ct_tb
		set
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			,fap_jobfair_seq = #{fap_jobfair_seq}
			,fap_mainpage_ct_top_ko = #{fap_mainpage_ct_top_ko}
			,fap_mainpage_ct_top_ja = #{fap_mainpage_ct_top_ja}
			,fap_mainpage_ct_quarter_ko = #{fap_mainpage_ct_quarter_ko}
			,fap_mainpage_ct_quarter_ja = #{fap_mainpage_ct_quarter_ja}
			,fap_mainpage_ct_imp_code = #{fap_mainpage_ct_imp_code}
			,fap_mainpage_ct_udt_id = #{fap_mainpage_ct_udt_id}
			,fap_mainpage_ct_udt_dt = now()
		where
			fap_mainpage_ct_seq = #{fap_mainpage_ct_seq}
	</update>
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 수정 종료 -->
	
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 삭제 시작 -->
	<delete id="mainpage_ct_delete" parameterType="int">
		delete from
			fap_mainpage_ct_tb
		where
			fap_mainpage_ct_seq = #{fap_mainpage_ct_seq}
	</delete>
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 삭제 종료 -->
	
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 조회 시작 -->
	<select id="mainpage_ct_select" resultType="FAPMainpageCt">
		select
			fap_mainpage_ct_seq
			,fap_jobfair_divide_seq
			,fap_jobfair_seq
			,fap_mainpage_ct_top_ko
			,fap_mainpage_ct_top_ja
			,fap_mainpage_ct_quarter_ko
			,fap_mainpage_ct_quarter_ja
			,fap_mainpage_ct_imp_code
		from
			fap_mainpage_ct_tb	
	</select>
	<!-- FAP 관리자 - 지원자 메인페이지 기업컨텐츠 관리 조회 종료 -->
	
	<!-- FAP 관리자 - 알림내역 처리/취소하기 시작 -->
	<update id="admin_notice_update_handle_fin_gb" parameterType="hashmap">
		    update 
				fap_admin_notice_tb
            set
				fap_admin_notice_handle_fin_gb = #{fap_admin_notice_handle_fin_gb}
            where
				fap_admin_notice_seq = #{fap_admin_notice_seq}
	</update>
	<!-- FAP 관리자 - 알림내역 처리/취소하기 종료 -->
	
 
	<!-- FAP 관리자 - 알림내역 선택부분 모두 처리/취소하기 시작 -->
	<update id="admin_notice_update_handle_fin_gb_all_selected" parameterType="java.util.List"  >		
		  <foreach collection="list" item="list" open=" " separator=";" close=" ">
			update
					  fap_admin_notice_tb
	        set
					  fap_admin_notice_handle_fin_gb =  #{list.fap_admin_notice_handle_fin_gb}
	        where  
	        		 fap_admin_notice_seq = #{list.fap_admin_notice_seq}
		  </foreach>
	</update>
	<!-- FAP 관리자 - 알림내역  선택부분 모두 처리/취소하기 종료 -->
	
	<!-- FAP 관리자 - 알림 중 처리되지 않은 건 갯수 조회 시작 -->
	<select id="select_admin_notice_list_not_handled" resultType="int">
		select 
				count(fap_admin_notice_seq) 
		from 
				fap_admin_notice_tb
		where 
				fap_admin_notice_handle_need_gb = 'D2101'
		  and
		  		fap_admin_notice_handle_fin_gb = 'D2200'
	</select>
	<!-- FAP 관리자 - 알림 중 처리되지 않은 건 갯수 조회 종료-->
	
	<!-- FAP 관리자 도쿄페어 설정 등록 시작 -->
	<insert id="tokyofair_schedule_set_insert" parameterType="FAPAdminJobfairSet" useGeneratedKeys="true" keyProperty="fap_jobfair_set_seq">
		insert into
			fap_jobfair_set_tb(
				fap_jobfair_divide_seq
				,fap_jobfair_set_nm
				,fap_jobfair_set_addr
				,fap_jobfair_set_comp_sd
				,fap_jobfair_set_comp_ed 
				,fap_jobfair_set_comp_st 
				,fap_jobfair_set_comp_et 
				,fap_jobfair_set_st
				,fap_jobfair_set_et
				,fap_jobfair_set_room_st
				,fap_jobfair_set_room_et
				,fap_jobfair_set_room_cnt
				,fap_jobfair_set_itv_cnt
				,fap_jobfair_set_itv_stu_dt
				,fap_jobfair_set_itv_comp_dt
				,fap_jobfair_set_gb
				,fap_jobfair_set_ins_id
				,fap_jobfair_set_udt_id
			)values(
				#{fap_jobfair_divide_seq}
				,#{fap_jobfair_set_nm}
				,#{fap_jobfair_set_addr}
				,#{fap_jobfair_set_comp_sd}
				,#{fap_jobfair_set_comp_ed}
				,#{fap_jobfair_set_comp_st}
				,#{fap_jobfair_set_comp_et}
				,#{fap_jobfair_set_st}
				,#{fap_jobfair_set_et}
				,#{fap_jobfair_set_room_st}
				,#{fap_jobfair_set_room_et}
				,#{fap_jobfair_set_room_cnt}
				,#{fap_jobfair_set_itv_cnt}
				,#{fap_jobfair_set_itv_stu_dt}
				,#{fap_jobfair_set_itv_comp_dt}
				,'E0001'
				,#{fap_jobfair_set_ins_id}
				,#{fap_jobfair_set_udt_id}
			)
	</insert>
	<!-- FAP 관리자 도쿄페어 설정 등록 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설정 수정 시작 -->
	<update id="tokyofair_schedule_set_update" parameterType="FAPAdminJobfairSet">
		update
			fap_jobfair_set_tb
		set
			fap_jobfair_set_nm = #{fap_jobfair_set_nm}
			,fap_jobfair_set_addr = #{fap_jobfair_set_addr}
			,fap_jobfair_set_comp_sd = #{fap_jobfair_set_comp_sd}
			,fap_jobfair_set_comp_ed = #{fap_jobfair_set_comp_ed}
			,fap_jobfair_set_comp_st = #{fap_jobfair_set_comp_st}
			,fap_jobfair_set_comp_et = #{fap_jobfair_set_comp_et}
			,fap_jobfair_set_st = #{fap_jobfair_set_st}
			,fap_jobfair_set_et = #{fap_jobfair_set_et}
			,fap_jobfair_set_room_st = #{fap_jobfair_set_room_st}
			,fap_jobfair_set_room_et = #{fap_jobfair_set_room_et}
			,fap_jobfair_set_room_cnt = #{fap_jobfair_set_room_cnt}
			,fap_jobfair_set_itv_cnt = #{fap_jobfair_set_itv_cnt}
			,fap_jobfair_set_itv_stu_dt = #{fap_jobfair_set_itv_stu_dt}
			,fap_jobfair_set_itv_comp_dt = #{fap_jobfair_set_itv_comp_dt}
			,fap_jobfair_set_udt_id = #{fap_jobfair_set_udt_id}
			,fap_jobfair_set_udt_dt = now()
		where
			fap_jobfair_set_seq = #{fap_jobfair_set_seq}
	</update>
	<!-- FAP 관리자 도쿄페어 설정 수정 종료 -->
	
	<!-- FAP 관리자 도쿄페어 날짜 정보 등록 시작 -->
	<insert id="tokyofair_schedule_set_date_insert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="fap_jobfair_set_date_seq">	
		insert into
			fap_jobfair_set_date_tb
			(
				fap_jobfair_set_seq
				,fap_jobfair_set_date_dt
				,fap_jobfair_set_date_room_num
				,fap_jobfair_set_date_room_hid_gb
				,fap_jobfair_set_date_ins_id
				,fap_jobfair_set_date_udt_id
			) values	
			  <foreach item ="item" collection="list" index="index" open=" " separator="," close=" ">
			(	
				#{item.fap_jobfair_set_seq}
				,#{item.fap_jobfair_set_date_dt}
				,#{item.fap_jobfair_set_date_room_num}
				,#{item.fap_jobfair_set_date_room_hid_gb}
				,#{item.fap_jobfair_set_date_ins_id}
				,#{item.fap_jobfair_set_date_udt_id}
			)
			</foreach>
	</insert>
	<!-- FAP 관리자 도쿄페어 날짜 정보 등록 종료 -->
	
	<!-- FAP 관리자 도쿄페어 일정 정보 등록 시작 -->
	<insert id="tokyofair_schedule_set_time_insert" parameterType="java.util.List">
			insert into
				fap_jobfair_set_time_tb
				(
					fap_jobfair_set_date_seq
					,fap_jobfair_set_time
					,fap_jobfair_set_time_merge_num
					,fap_jobfair_set_time_ct
					,fap_jobfair_set_time_ins_id
					,fap_jobfair_set_time_udt_id
				) values
			<foreach item ="item" collection="list" index="index" open=" " separator="," close=" ">
				(
					#{item.fap_jobfair_set_date_seq}
					,#{item.fap_jobfair_set_time}
					,#{item.fap_jobfair_set_time_merge_num}
					,#{item.fap_jobfair_set_time_ct}
					,#{item.fap_jobfair_set_time_ins_id}
					,#{item.fap_jobfair_set_time_udt_id}
				)
			</foreach>
	</insert>
	<!-- FAP 관리자 도쿄페어 일정 정보 등록 종료 -->

	<!-- FAP 관리자 도쿄페어 날짜 정보 삭제 시작 -->
	<delete id="tokyofair_schedule_set_date_delete" parameterType="int">
		delete from
			fap_jobfair_set_date_tb
		where
			fap_jobfair_set_seq = #{fap_jobfair_set_seq}
	</delete>
	<!-- FAP 관리자 도쿄페어 날짜 정보 삭제 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설정 정보 리스트 조회 시작 -->
	<select id="tokyofair_schedule_set_search_list" parameterType="int" resultType="FAPAdminJobfairSet">
		select
			fap_jobfair_set_seq
			,fap_jobfair_divide_seq
			,fap_jobfair_set_nm
			,fap_jobfair_set_addr
			,fap_jobfair_set_gb
		from
			fap_jobfair_set_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 관리자 도쿄페어 설정 정보 리스트 조회 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설정 사용여부 초기화 시작 -->
	<update id="tokyofair_schedule_set_gb_init" parameterType="hashmap">
		update
			fap_jobfair_set_tb
		set
			fap_jobfair_set_gb = #{fap_jobfair_set_gb}
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</update>
	<!-- FAP 관리자 도쿄페어 설정 사용여부 초기화 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설정 사용여부 구분 변경 시작 -->
	<update id="tokyofair_schedule_set_gb_update" parameterType="hashmap">
		update
			fap_jobfair_set_tb
		set
			fap_jobfair_set_gb = #{fap_jobfair_set_gb}
			,fap_jobfair_set_udt_id = #{user_id}
			,fap_jobfair_set_udt_dt = now()
		where
			fap_jobfair_set_seq = #{fap_jobfair_set_seq}
	</update>
	<!-- FAP 관리자 도쿄페어 설정 사용여부 구분 변경 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설정 삭제 시작 -->
	<delete id="tokyofair_schedule_set_delete" parameterType="int">
		delete from
			fap_jobfair_set_tb
		where
			fap_jobfair_set_seq = #{fap_jobfair_set_seq}
	</delete>
	<!-- FAP 관리자 도쿄페어 설정 삭제 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설정 정보 조회 시작 -->
	<select id="tokyofair_schedule_set_search" parameterType="int" resultType="FAPAdminJobfairSet">
		select
			fap_jobfair_set_seq
			,fap_jobfair_divide_seq
			,fap_jobfair_set_nm
			,fap_jobfair_set_addr
			,fap_jobfair_set_comp_sd
			,fap_jobfair_set_comp_ed
			,fap_jobfair_set_comp_st
			,fap_jobfair_set_comp_et
			,fap_jobfair_set_st
			,fap_jobfair_set_et
			,fap_jobfair_set_room_st
			,fap_jobfair_set_room_et
			,fap_jobfair_set_room_cnt
			,fap_jobfair_set_itv_cnt
			,fap_jobfair_set_itv_stu_dt
			,fap_jobfair_set_itv_comp_dt
		from
			fap_jobfair_set_tb
		where
			fap_jobfair_set_seq = #{fap_jobfair_set_seq}
	</select>
	<!-- FAP 관리자 도쿄페어 설정 정보 조회 종료 -->
	
	<!-- FAP 관리자 도쿄페어 날짜 및 일정 정보 조회 시작 -->
	<resultMap type="hashmap" id="tokyofairScheduleDateMap">
		<id property="fap_jobfair_set_seq" column="fap_jobfair_set_seq" />
		<collection property="tokyofairScheduleDateList" javaType="java.util.ArrayList" resultMap="tokyofairScheduleDate" />
	</resultMap>
	<resultMap type="java.util.LinkedHashMap" id="tokyofairScheduleDate">
		<id property="fap_jobfair_set_date_seq" column="fap_jobfair_set_date_seq" />
		<result property="fap_jobfair_set_date_dt" column="fap_jobfair_set_date_dt" />
		<result property="fap_jobfair_set_date_room_num" column="fap_jobfair_set_date_room_num" />
		<result property="fap_jobfair_set_date_room_hid_gb" column="fap_jobfair_set_date_room_hid_gb" />
		<collection property="tokyofairScheduleTimeList" javaType="java.util.ArrayList" resultMap="tokyofairScheduleTime" />
	</resultMap>
	<resultMap type="java.util.LinkedHashMap" id="tokyofairScheduleTime">
		<id property="fap_jobfair_set_time_seq" column="fap_jobfair_set_time_seq" />
		<result property="fap_jobfair_set_time" column="fap_jobfair_set_time"  />
		<result property="fap_jobfair_set_time_merge_num" column="fap_jobfair_set_time_merge_num"  />
		<result property="fap_jobfair_set_time_ct" column="fap_jobfair_set_time_ct"  />
	</resultMap>
	<select id="tokyofair_schedule_set_date_search" parameterType="int" resultMap="tokyofairScheduleDateMap">
		select
			setDate.fap_jobfair_set_date_seq as fap_jobfair_set_date_seq
		    ,setDate.fap_jobfair_set_seq as fap_jobfair_set_seq
		    ,DATE_FORMAT(setDate.fap_jobfair_set_date_dt, '%Y-%m-%d') as fap_jobfair_set_date_dt
		    ,setDate.fap_jobfair_set_date_room_num as fap_jobfair_set_date_room_num
		    ,setDate.fap_jobfair_set_date_room_hid_gb as fap_jobfair_set_date_room_hid_gb
		    ,setTime.fap_jobfair_set_time_seq as fap_jobfair_set_time_seq
		    ,setTime.fap_jobfair_set_time as fap_jobfair_set_time
		    ,setTime.fap_jobfair_set_time_merge_num as fap_jobfair_set_time_merge_num
		    ,setTime.fap_jobfair_set_time_ct as fap_jobfair_set_time_ct
		from
			fap_jobfair_set_date_tb setDate
		left join
			fap_jobfair_set_time_tb setTime
		on
			setDate.fap_jobfair_set_date_seq = setTime.fap_jobfair_set_date_seq
		where
			setDate.fap_jobfair_set_seq = #{fap_jobfair_set_seq}
		order by
			fap_jobfair_set_date_dt , fap_jobfair_set_date_room_num
	</select>
	<!-- FAP 관리자 도쿄페어 날짜 및 일정 정보 조회 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설명회,시험 등록가능 조회 시작 -->
	<select id="tokyofair_screening_search_bookable" parameterType="int" resultType="hashmap">
		select
			comp.fap_comp_en_nm as fap_comp_en_nm
		    ,tokyoSch.fap_job_ad_seq as fap_job_ad_seq
		    ,tokyoSch.fap_comp_id as fap_comp_id
		    ,jobfair.fap_jobfair_set_seq as fap_jobfair_set_seq
		    ,ad.fap_job_ad_title as fap_job_ad_title
		    ,ad.fap_job_ad_category_type as fap_job_ad_category_type
		from
			fap_jobfair_set_tb jobfair
		inner join
			fap_tokyofair_date_tb tokyoDate
		on
			jobfair.fap_jobfair_set_seq = tokyoDate.fap_jobfair_set_seq
		inner join
			fap_tokyofair_schedule_tb tokyoSch
		on
			tokyoDate.fap_tokyofair_date_seq = tokyoSch.fap_tokyofair_date_seq
		inner join
			fap_company_user_tb comp
		on
			tokyoSch.fap_comp_id = comp.fap_comp_id
		inner join
			fap_job_ad_tb ad
		on
			tokyoSch.fap_job_ad_seq = ad.fap_job_ad_seq
		where
			jobfair.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			jobfair.fap_jobfair_set_gb = 'E0000'
		group by
			fap_job_ad_seq
	</select>
	<!-- FAP 관리자 도쿄페어 설명회,시험 등록가능 조회 종료 -->
	
	<!-- FAP 관리자 도쿄페어 일정 및 인원 정보 조회 시작 -->
	<resultMap type="hashmap" id="tokyoSchMap">
		<id property="fap_tokyofair_schedule_seq" column="fap_tokyofair_schedule_seq"/>
		<result property="fap_tokyofair_date_seq" column="fap_tokyofair_date_seq"/>
		<result property="fap_tokyofair_date_dt" column="fap_tokyofair_date_dt"/>
		<result property="fap_tokyofair_date_room_num" column="fap_tokyofair_date_room_num"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_comp_id" column="fap_comp_id"/>
		<result property="fap_comp_en_nm" column="fap_comp_en_nm"/>
		<result property="fap_tokyofair_schedule_st" column="fap_tokyofair_schedule_st"/>
		<result property="fap_tokyofair_schedule_et" column="fap_tokyofair_schedule_et"/>
		<result property="fap_tokyofair_schedule_merge" column="fap_tokyofair_schedule_merge"/>
		<result property="fap_tokyofair_screening_seq" column="fap_tokyofair_screening_seq"/>
		<result property="fap_tokyofair_screening_nm" column="fap_tokyofair_screening_nm"/>
		<result property="fap_tokyofair_screening_gb" column="fap_tokyofair_screening_gb"/>
		<result property="fap_tokyofair_screening_user_num" column="fap_tokyofair_screening_user_num"/>
		<result property="fap_tokyofair_screening_admin_req" column="fap_tokyofair_screening_admin_req"/>
		<result property="fap_tokyofair_screening_user_req" column="fap_tokyofair_screening_user_req"/>
		<collection property="tokyoMemberList" javaType="java.util.ArrayList" resultMap="tokyoMemberMap" />
	</resultMap>
	<resultMap type="hashmap" id="tokyoMemberMap">
		<id property="fap_tokyofair_member_seq" column="fap_tokyofair_member_seq"/>
		<result property="user_nm" column="user_nm"/>		
		<result property="user_birth" column="user_birth"/>		
		<result property="fap_tokyofair_member_st" column="fap_tokyofair_member_st"/>		
		<result property="fap_tokyofair_member_et" column="fap_tokyofair_member_et"/>		
	</resultMap>
	<select id="tokyfair_schedule_booked_search" parameterType="hashmap" resultMap="tokyoSchMap">
		select
			tokyoDate.fap_tokyofair_date_seq as fap_tokyofair_date_seq
			,tokyoDate.fap_jobfair_set_seq as fap_jobfair_set_seq
			,DATE_FORMAT(tokyoDate.fap_tokyofair_date_dt, '%Y-%m-%d') as fap_tokyofair_date_dt
			,tokyoDate.fap_tokyofair_date_room_num as fap_tokyofair_date_room_num
			,tokyoSch.fap_tokyofair_schedule_seq as fap_tokyofair_schedule_seq
			,tokyoSch.fap_job_ad_seq as fap_job_ad_seq
			,tokyoSch.fap_comp_id as fap_comp_id
			,company.fap_comp_en_nm as fap_comp_en_nm
			,tokyoSch.fap_tokyofair_schedule_st as fap_tokyofair_schedule_st
			,tokyoSch.fap_tokyofair_schedule_et as fap_tokyofair_schedule_et
			,tokyoSch.fap_tokyofair_schedule_merge as fap_tokyofair_schedule_merge
			,tokyoScreen.fap_tokyofair_screening_seq as fap_tokyofair_screening_seq
			,tokyoScreen.fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
			,tokyoScreen.fap_tokyofair_screening_gb as fap_tokyofair_screening_gb
			,tokyoScreen.fap_tokyofair_screening_user_num as fap_tokyofair_screening_user_num
			,tokyoScreen.fap_tokyofair_screening_admin_req as fap_tokyofair_screening_admin_req
			,tokyoScreen.fap_tokyofair_screening_user_req as fap_tokyofair_screening_user_req
		    ,com.user_nm as user_nm
		    ,DATE_FORMAT(com.user_birth, '%Y-%m-%d') as user_birth
		    ,tokyoMember.fap_tokyofair_member_seq as fap_tokyofair_member_seq
		    ,tokyoMember.fap_tokyofair_member_st as fap_tokyofair_member_st
		    ,tokyoMember.fap_tokyofair_member_et as fap_tokyofair_member_et
		from
			fap_tokyofair_date_tb tokyoDate
		inner join
			fap_tokyofair_schedule_tb tokyoSch
		on
			tokyoDate.fap_tokyofair_date_seq = tokyoSch.fap_tokyofair_date_seq
		inner join
			fap_tokyofair_screening_tb tokyoScreen
		on
			tokyoSch.fap_tokyofair_screening_seq = tokyoScreen.fap_tokyofair_screening_seq
		inner join
			fap_tokyofair_member_tb tokyoMember
		on
			tokyoSch.fap_tokyofair_schedule_seq = tokyoMember.fap_tokyofair_schedule_seq
		inner join
			com_user_tb com
		on
			com.user_id = tokyoMember.fap_tokyofair_member_id
		inner join
			fap_company_user_tb company
		on
			tokyoSch.fap_comp_id = company.fap_comp_id
		where
			tokyoDate.fap_jobfair_set_seq = #{fap_jobfair_set_seq}
		and
			tokyoDate.fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		order by
			fap_tokyofair_date_dt , fap_tokyofair_date_room_num , fap_tokyofair_schedule_seq , fap_tokyofair_member_st
	</select>
	<!-- FAP 관리자 도쿄페어 일정 및 인원 정보 조회 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설명회, 시험 전형 등록 시작 -->
	<insert id="tokyofair_screening_insert_admin" parameterType="hashmap">
		insert into
			fap_tokyofair_screening_tb(
				fap_job_ad_seq
				,fap_comp_id
				,fap_tokyofair_screening_gb
				,fap_tokyofair_screening_nm
				,fap_tokyofair_screening_type
				,fap_tokyofair_screening_time
				,fap_tokyofair_screening_admin_req
				,fap_tokyofair_screening_user_req
				,fap_tokyofair_screening_sch_gb
				,fap_tokyofair_screening_ins_id
				,fap_tokyofair_screening_udt_id
			)values(
				#{fap_job_ad_seq}
				,#{comp_id}
				,#{fap_tokyofair_screening_gb}
				,#{fap_tokyofair_screening_nm}
				,'E0600'
				,#{fap_tokyofair_screening_time}
				,#{fap_tokyofair_screening_admin_req}
				,#{fap_tokyofair_screening_user_req}
				,'E0701'
				,#{comp_id}
				,#{comp_id}
			)
		<selectKey keyProperty="fap_tokyofair_screening_seq" resultType="int" order="AFTER">
			select last_insert_id() as fap_tokyofair_screening_seq
		</selectKey>
	</insert>
	<!-- FAP 관리자 도쿄페어 설명회, 시험 전형 등록 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설명회, 시험 전형 인원 등록 시작 -->
	<insert id="tokyofair_scr_user_insert_admin" parameterType="java.util.ArrayList">
		insert into
			fap_tokyofair_scr_user_tb
			(
				fap_tokyofair_screening_seq
				,fap_tokyofair_scr_resume_seq
			)values
		<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_tokyofair_screening_seq}
				,#{element.fap_resume_seq}
			)
		</foreach>
	</insert>
	<!-- FAP 관리자 도쿄페어 설명회, 시험 전형 인원 등록 종료 -->
	
	<!-- 도쿄페어 날짜 정보 등록여부 확인 시작 -->
	<select id="tokyofair_schedule_date_check_admin" parameterType="hashmap" resultType="int">
		select
			fap_tokyofair_date_seq
		from
			fap_tokyofair_date_tb
		where
			fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		and
			fap_tokyofair_date_room_num = #{fap_tokyofair_date_room_num}
	</select>
	<!-- 도쿄페어 날짜 정보 등록여부 확인 종료 -->
	
	<!-- 도쿄페어 날짜 정보 등록 시작 -->
	<insert id="tokyofair_schedule_date_insert_admin" parameterType="hashmap">
		insert into
			fap_tokyofair_date_tb
			(
				fap_jobfair_set_seq
				,fap_tokyofair_date_dt
				,fap_tokyofair_date_room_num
				,fap_tokyofair_date_ins_id
				,fap_tokyofair_date_udt_id
			)values(
				#{fap_jobfair_set_seq}
				,#{fap_tokyofair_date_dt}
				,#{fap_tokyofair_date_room_num}
				,#{comp_id}
				,#{comp_id}
			)
		<selectKey keyProperty="fap_tokyofair_date_seq" resultType="Integer" order="AFTER">
			select last_insert_id() as fap_tokyofair_date_seq
		</selectKey>
	</insert>
	<!-- 도쿄페어 날짜 정보 등록 종료 -->
	
	<!-- 도쿄페어 일정 정보 등록 시작 -->
	<insert id="tokyofair_schedule_info_insert_admin" parameterType="hashmap">
		insert into
			fap_tokyofair_schedule_tb
			(
				fap_tokyofair_date_seq
				,fap_tokyofair_screening_seq
				,fap_job_ad_seq
				,fap_comp_id
				,fap_tokyofair_schedule_st
				,fap_tokyofair_schedule_et
				,fap_tokyofair_schedule_merge
				,fap_tokyofair_schedule_ins_id
				,fap_tokyofair_schedule_udt_id
			)values(
				#{fap_tokyofair_date_seq}
				,#{fap_tokyofair_screening_seq}
				,#{fap_job_ad_seq}
				,#{comp_id}
				,#{fap_tokyofair_schedule_st}
				,#{fap_tokyofair_schedule_et}
				,#{fap_tokyofair_schedule_merge}
				,#{comp_id}
				,#{comp_id}
			)
		<selectKey keyProperty="fap_tokyofair_schedule_seq" resultType="Long" order="AFTER">
			select last_insert_id() as fap_tokyofair_schedule_seq
		</selectKey>
	</insert>
	<!-- 도쿄페어 일정 정보 등록 종료 -->
	
	<!-- FAP 관리자 도쿄페어 설명회, 시험 일정 인원 등록 시작 -->
	<insert id="tokyofair_member_insert_admin" parameterType="java.util.ArrayList">
		insert into
			fap_tokyofair_member_tb
			(
				fap_tokyofair_schedule_seq
				,fap_tokyofair_member_resume_seq
				,fap_tokyofair_member_id
				,fap_tokyofair_member_st
				,fap_tokyofair_member_et
			)values
		<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_tokyofair_schedule_seq}
				,#{element.fap_resume_seq}
				,#{element.user_id}
				,#{element.fap_tokyofair_member_st}
				,#{element.fap_tokyofair_member_et}
			)
		</foreach>
	</insert>
	<!-- FAP 관리자 도쿄페어 설명회, 시험 일정 인원 등록 종료 -->
</mapper>