<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SEGroup 통합잡페어 취업지원자 SQL -->
<mapper namespace="global.segroup.society.fap.user.dao.SocietyFapUserMapper">
	
	<!-- 회원 아이디 중복 체크  시작; 2018. 12. 12. 김준영-->
	<select id="user_id_check" parameterType="String" resultType="String">
		select
			user_id
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 회원 아이디 중복 체크  종료 -->
	
	<!-- 회원 공통 등록 시작; 2018. 12. 11. 김준영 -->
	<insert id="insert_com_user" parameterType="User">
		insert into
			com_user_tb
			(
				user_id
				, user_pw
				, user_nm
				, user_phone
				, user_email
				, user_birth
				, user_sex
				, user_flag
				, user_state
				, user_ins_id
				, user_ins_dt
				, user_udt_id
				, user_udt_dt
				, user_terms_ck
			) values (
				#{user_id}
				, #{user_pw}
				, #{user_nm}
				, #{user_phone}
				, #{user_email}
				, #{user_birth}
				, #{user_sex}
				, #{user_flag}
				, #{user_state}
				, #{user_id}
				, #{user_ins_dt}
				, #{user_id}
				, #{user_udt_dt}
				, #{user_terms_ck}
			)
	</insert>
	<!-- 회원 공통 등록 종료 -->

	<!-- 공통 회원 정보 가져오기 시작; 2019. 2. 27. 김준영 -->
	<select id="select_com_user" parameterType="String" resultType="User">
		select
			user_id
			, user_pw
			, user_nm
			, user_phone
			, user_email
			, user_birth
			, user_sex
			, user_flag
			, user_state
			, user_terms_ck
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 공통 회원 정보 가져오기 종료; 2019. 2. 27. 김준영 -->

	<!-- 개인회원 등록 시작; 2018. 12. 13. 김준영 -->
	<insert id="insert_personal_user" parameterType="FapPersonalUser" useGeneratedKeys="true" keyProperty="fap_personal_user_seq">
		insert into
			fap_personal_user_tb
			(
				user_id
				, fap_personal_user_edu_level
				, fap_personal_user_edu_ct_nm
				, fap_personal_user_job_objective
				, fap_personal_user_edu_course_nm
				, fap_personal_user_ins_id
				, fap_personal_user_ins_dt
				, fap_personal_user_udt_id
				, fap_personal_user_udt_dt
			) values (
				#{user_id}
				, #{fap_personal_user_edu_level}
				, #{fap_personal_user_edu_ct_nm}
				, #{fap_personal_user_job_objective}
				, #{fap_personal_user_edu_course_nm}
				, #{user_id}
				, #{fap_personal_user_ins_dt}
				, #{user_id}
				, #{fap_personal_user_udt_dt}
			)
	</insert>
	<!-- 개인회원 등록 종료 -->
	
	<!-- 개인회원 고등학교 등록 시작; 2018. 12. 13. 김준영 -->
	<insert id="insert_personal_hs" parameterType="FapPersonalHighschool">
		insert into
			fap_personal_highschool_tb
			(
				fap_personal_user_seq
				, fap_personal_hs_nm
				, fap_personal_hs_field
				, fap_personal_hs_ins_id
				, fap_personal_hs_ins_dt
				, fap_personal_hs_udt_id
				, fap_personal_hs_udt_dt
			) values (
				#{fap_personal_user_seq}
				, #{fap_personal_hs_nm}
				, #{fap_personal_hs_field}
				, #{fap_personal_hs_ins_id}
				, #{fap_personal_hs_ins_dt}
				, #{fap_personal_hs_udt_id}
				, #{fap_personal_hs_udt_dt}
			)
	</insert>
	<!-- 개인회원 고등학교 등록 종료 -->
	
	<!-- 개인회원 대학교 등록 시작; 2018. 12. 13. 김준영 -->
	<insert id="insert_personal_univ" parameterType="FapPersonalUniversity" useGeneratedKeys="true" keyProperty="fap_personal_univ_seq">
		insert into
			fap_personal_university_tb
			(
				fap_personal_user_seq
				, fap_personal_univ_nm
				, fap_personal_univ_abroad_ck
				, fap_personal_univ_coll
				, fap_personal_univ_major
				, fap_personal_univ_ins_id
				, fap_personal_univ_ins_dt
				, fap_personal_univ_udt_id
				, fap_personal_univ_udt_dt
			) values (
				#{fap_personal_user_seq}
				, #{fap_personal_univ_nm}
				, #{fap_personal_univ_abroad_ck}
				, #{fap_personal_univ_coll}
				, #{fap_personal_univ_major}
				, #{fap_personal_univ_ins_id}
				, #{fap_personal_univ_ins_dt}
				, #{fap_personal_univ_udt_id}
				, #{fap_personal_univ_udt_dt}
			)
	</insert>
	<!-- 개인회원 대학교 등록 종료 -->
	
	<!-- 개인회원 대학원 등록 시작; 2018. 12. 13. 김준영 -->
	<insert id="insert_personal_grad" parameterType="FapPersonalGraduate">
		insert into
			fap_personal_graduate_tb
			(
				fap_personal_univ_seq
				, fap_personal_grad_nm
				, fap_personal_grad_ck
				, fap_personal_grad_major
				, fap_personal_grad_ins_id
				, fap_personal_grad_ins_dt
				, fap_personal_grad_udt_id
				, fap_personal_grad_udt_dt
			) values (
				#{fap_personal_univ_seq}
				, #{fap_personal_grad_nm}
				, #{fap_personal_grad_ck}
				, #{fap_personal_grad_major}
				, #{fap_personal_grad_ins_id}
				, #{fap_personal_grad_ins_dt}
				, #{fap_personal_grad_udt_id}
				, #{fap_personal_grad_udt_dt}
			)
	</insert>
	<!-- 개인회원 대학원 등록 종료 -->
	
	<!-- 이력서 저장 시작 -->
	<!-- 이력서 기본 정보 입력  12.12 남유송 -->
	<insert id ="insert_resume_basic" parameterType="ResumeForm" useGeneratedKeys="true" keyProperty="fap_resume_seq">
		insert into fap_resume_tb(
			user_id
			,fap_resume_title
			,fap_resume_gender
			,fap_resume_marital
			,fap_resume_nationality
			,fap_resume_pic_saved
			,fap_resume_pic_origin
			,fap_resume_birth
			,fap_resume_dependents
			,fap_resume_url
			,fap_resume_ins_dt
			,fap_resume_ins_id
			,fap_resume_udt_dt
			,fap_resume_udt_id
		)
		values(
			#{user_id}
			,#{fap_resume_title}
			,#{fap_resume_gender}
			,#{fap_resume_marital}
			,#{fap_resume_nationality}
			,#{fap_resume_pic_saved}
			,#{fap_resume_pic_origin}
			,#{fap_resume_birth}
			,#{fap_resume_dependents}
			,#{fap_resume_url}
			,now()
			,#{fap_resume_ins_id}
			,now()
			,#{fap_resume_udt_id} 
		)
		
	</insert>
	<!-- 이력서 기본 정보 입력 --> 
	<!-- 이력서 학력 관련 정보 입력 시작  12.13 남유송 --> 
	<insert id="insert_resume_eduHistory" parameterType="ResumeEduhistory">
		insert into fap_resume_eduhistory_tb(
			fap_resume_seq
			,fap_resume_edu_sc_nm
			,fap_resume_edu_coll
			,fap_resume_edu_major
			,fap_resume_edu_gd_ck
			,fap_resume_edu_er_dt
			,fap_resume_edu_gd_dt
			,fap_resume_edu_pd_summary
			,fap_resume_edu_note
			,fap_resume_edu_field
			,fap_resume_edu_ins_dt
			,fap_resume_edu_ins_id
			,fap_resume_edu_udt_id
			,fap_resume_edu_udt_dt
			
		)
		values
		<foreach item="eduHistory" collection="resumeEduList" index="index" open=" " separator="," close=" ">
		(
			#{eduHistory.fap_resume_seq}
			,#{eduHistory.fap_resume_edu_sc_nm}
			,#{eduHistory.fap_resume_edu_coll}
			,#{eduHistory.fap_resume_edu_major}
			,#{eduHistory.fap_resume_edu_gd_ck}
			,#{eduHistory.fap_resume_edu_er_dt}
			,#{eduHistory.fap_resume_edu_gd_dt}
			,#{eduHistory.fap_resume_edu_pd_summary}
			,#{eduHistory.fap_resume_edu_note}
			,#{eduHistory.fap_resume_edu_field}
			,now()
			,#{eduHistory.fap_resume_edu_ins_id}
			,#{eduHistory.fap_resume_edu_udt_id}
			,now()
			
		)
		</foreach>	
	</insert>
	<!-- 이력서 학력 관련 정보 입력 끝 --> 	
	<!-- 이력서 자격증 정보 입력 시작 12.14 남유송-->
	<insert id ="insert_resume_license" parameterType="ResumeLicense">
		insert into fap_resume_license_tb(
			fap_resume_seq
			,fap_resume_license_get_year
			,fap_resume_license_get_month
			,fap_resume_license_nm
			,fap_resume_license_score
			,fap_resume_license_issuing_organization
			,fap_resume_license_note
			,fap_resume_license_ins_id
			,fap_resume_license_ins_dt
			,fap_resume_license_udt_id
			,fap_resume_license_udt_dt
		)
		values
		<foreach item ="resumeLicense" collection="resumeLicenseList" index="index" open=" " separator="," close=" ">
		(	
			#{resumeLicense.fap_resume_seq}
			,#{resumeLicense.fap_resume_license_get_year}
			,#{resumeLicense.fap_resume_license_get_month}
			,#{resumeLicense.fap_resume_license_nm}
			,#{resumeLicense.fap_resume_license_score}
			,#{resumeLicense.fap_resume_license_issuing_organization}
			,#{resumeLicense.fap_resume_license_note}
			,#{resumeLicense.fap_resume_license_ins_id}
			,now()
			,#{resumeLicense.fap_resume_license_udt_id}
			,now()
		)
		</foreach>
	</insert>
	<!-- 이력서 자격증 정보 입력 완료 -->
	<!-- 이력서 사회경력 정보 입력시작 12.14 남유송 -->
	<insert id ="insert_resume_career" parameterType="ResumeCareer">
		insert into fap_resume_career_tb(
			fap_resume_seq
			,fap_resume_crr_st
			,fap_resume_crr_et
			,fap_resume_crr_gb
			,fap_resume_crr_pd_summary
			,fap_resume_crr_comp_nm
			,fap_resume_crr_major_bussiness
			,fap_resume_crr_job_function
			,fap_resume_crr_job_position
			,fap_resume_crr_ins_id
			,fap_resume_crr_ins_dt
			,fap_resume_crr_udt_id
			,fap_resume_crr_udt_dt
		)
		values
		<foreach item ="resumeCareer" collection="resumeCareerList" index="index" open=" " separator="," close=" ">
		(	
			#{resumeCareer.fap_resume_seq}
			,#{resumeCareer.fap_resume_crr_st}
			,#{resumeCareer.fap_resume_crr_et}
			,#{resumeCareer.fap_resume_crr_gb}
			,#{resumeCareer.fap_resume_crr_pd_summary}
			,#{resumeCareer.fap_resume_crr_comp_nm}
			,#{resumeCareer.fap_resume_crr_major_bussiness}
			,#{resumeCareer.fap_resume_crr_job_function}
			,#{resumeCareer.fap_resume_crr_job_position}
			,#{resumeCareer.fap_resume_crr_ins_id}
			,now()
			,#{resumeCareer.fap_resume_crr_udt_id}
			,now()
		)
		</foreach>
	 </insert>
	 <!-- 이력서 사회경력 정보 입력 완료 --> 
	 <!-- 이력서 프로젝트 정보 입력 시작 12.14 남유송  -->
	 <insert id ="insert_resume_project" parameterType="ResumeProject">
		insert into fap_resume_project_tb(
			fap_resume_seq
			,fap_resume_project_nm
			,fap_resume_project_service
			,fap_resume_project_st
			,fap_resume_project_et
			,fap_resume_project_pd_summary
			,fap_resume_project_responsibility
			,fap_resume_project_technique
			,fap_resume_project_peoples_num
			,fap_resume_project_ins_id
			,fap_resume_project_ins_dt
			,fap_resume_project_udt_id
			,fap_resume_project_udt_dt
		)
		values
		<foreach item ="resumeProject" collection="resumeProjectList" index="index" open=" " separator="," close=" ">
		(	
			#{resumeProject.fap_resume_seq}
			,#{resumeProject.fap_resume_project_nm}
			,#{resumeProject.fap_resume_project_service}
			,#{resumeProject.fap_resume_project_st}
			,#{resumeProject.fap_resume_project_et}
			,#{resumeProject.fap_resume_project_pd_summary}
			,#{resumeProject.fap_resume_project_responsibility}
			,#{resumeProject.fap_resume_project_technique}
			,#{resumeProject.fap_resume_project_peoples_num}
			,#{resumeProject.fap_resume_project_ins_id}
			,now()
			,#{resumeProject.fap_resume_project_udt_id}
			,now()
		)
		</foreach>
	 </insert>
	 <!-- 이력서 프로젝트 정보 입력 완료  --> 
	 <!-- 이력서 역량 재능 정보 입력시작 12.14 남유송  -->
	 <insert id ="insert_resume_talent" parameterType="ResumeTalent">
		insert into fap_resume_talent_tb(
			fap_resume_seq
			,fap_resume_talent_content
			,fap_resume_talent_ins_id
			,fap_resume_talent_ins_dt
			,fap_resume_talent_udt_id
			,fap_resume_talent_udt_dt
		)
		values
		<foreach item ="resumeTalent" collection="resumeTalentList" index="index" open=" " separator="," close=" ">
		(	
			#{resumeTalent.fap_resume_seq}
			,#{resumeTalent.fap_resume_talent_content}
			,#{resumeTalent.fap_resume_talent_ins_id}
			,now()
			,#{resumeTalent.fap_resume_talent_udt_id}
			,now()
		)
		</foreach>
	</insert>
	<!-- 이력서 역량 재능 정보 입력 완료  -->
	<!-- 이력서 PR 정보 입력 시작 12.16 남유송  -->
	 <insert id ="insert_resume_profile" parameterType="ResumeProfile">
		insert into fap_resume_profile_tb(
			fap_resume_seq
			,fap_resume_pr_gb
			,fap_resume_pr_content
			,fap_resume_pr_ins_id
			,fap_resume_pr_ins_dt
			,fap_resume_pr_udt_id
			,fap_resume_pr_udt_dt
		)
		values
		<foreach item ="resumeProfile" collection="resumeProfileList" index="index" open=" " separator="," close=" ">
		(	
			#{resumeProfile.fap_resume_seq}
			,#{resumeProfile.fap_resume_pr_gb}
			,#{resumeProfile.fap_resume_pr_content}
			,#{resumeProfile.fap_resume_pr_ins_id}
			,now()
			,#{resumeProfile.fap_resume_pr_udt_id}
			,now()
		)
		</foreach>
	</insert>
	<!-- 이력서 역량 재능 정보 입력 완료  -->
	<!-- 이력서 주소 정보 입력 시작 12.16 남유송  -->
	 <insert id ="insert_resume_addr" parameterType="ResumeAddr">
		insert into fap_resume_address_tb(
			fap_resume_seq
			,fap_resume_address
			,fap_resume_address_ins_id
			,fap_resume_address_ins_dt
			,fap_resume_address_udt_id
			,fap_resume_address_udt_dt
		)
		values
		<foreach item ="resumeAddr" collection="resumeAddrList" index="index" open=" " separator="," close=" ">
		(	
			#{resumeAddr.fap_resume_seq}
			,#{resumeAddr.fap_resume_address}
			,#{resumeAddr.fap_resume_address_ins_id}
			,now()
			,#{resumeAddr.fap_resume_address_udt_id}
			,now()
		)
		</foreach>
	</insert>
	<!-- 이력서 주소 정보 입력 완료  -->
	<!-- 이력서 이름 정보 입력 시작 12.16 남유송 -->
	<insert id="insert_resume_name" parameterType="ResumeName">
		insert into fap_resume_name_tb(
			fap_resume_seq
			,fap_resume_lang_gb
			,fap_resume_nm
			,fap_resume_nm_ins_id
			,fap_resume_nm_ins_dt
			,fap_resume_nm_udt_id
			,fap_resume_nm_udt_dt
		)
		values 
		<foreach item ="resumeName" collection="resumeNameList" index="index" open=" " separator="," close=" ">
		(
			#{resumeName.fap_resume_seq}
			,#{resumeName.fap_resume_lang_gb}
			,#{resumeName.fap_resume_nm}
			,#{resumeName.fap_resume_nm_ins_id}
			,now()
			,#{resumeName.fap_resume_nm_udt_id}
			,now()
		)
		</foreach>
	</insert>
	<!-- 이력서 이름 정보 입력 완료 -->
	<!-- 이력서 파일 정보 입력 시작 12.18 남유송 -->
	<insert id="insert_resume_file" parameterType="ResumeFile">
		insert into fap_resume_file_tb(
			fap_resume_seq
			,fap_resume_file_saved
			,fap_resume_file_origin
			,fap_resume_file_gb
			,fap_resume_file_ins_id
			,fap_resume_file_ins_dt
			,fap_resume_file_udt_id
			,fap_resume_file_udt_dt
		)
		values 
		<foreach item ="resumeFile" collection="resumeFileList" index="index" open=" " separator="," close=" ">
		(
			#{resumeFile.fap_resume_seq}
			,#{resumeFile.fap_resume_file_saved}
			,#{resumeFile.fap_resume_file_origin}
			,#{resumeFile.fap_resume_file_gb}
			,#{resumeFile.fap_resume_file_ins_id}
			,now()
			,#{resumeFile.fap_resume_file_udt_id}
			,now()
		)
		</foreach>
	</insert>
	 <!-- 이력서 파일 정보 입력 완료 -->
	<!-- 이력서 저장 완료 -->
	
	<!-- 일반 회원 정보 가져오기 시작; 2018. 12. 14. 김준영 -->
	<select id="select_personal_user" resultType="FapPersonalUser" parameterType="String">
		select
			fap_personal_user_seq
			, fap_personal_user_edu_level
			, fap_personal_user_edu_ct_nm
			, fap_personal_user_job_objective
			, fap_personal_user_edu_course_nm
			, fap_personal_user_ins_id
			, fap_personal_user_ins_dt
			, fap_personal_user_udt_id
			, fap_personal_user_udt_dt
		from
			fap_personal_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 일반 회원 정보 가져오기 종료 -->
	
	<!-- 일반 회원의 학교 정보 가져오기 시작; 2018. 12. 14. 김준영 -->
	<select id="select_personal_school" parameterType="FapPersonalUser" resultType="hashmap">
		select
			<if test="fap_personal_user_edu_level == 'B3300'">
				personal_highschool.fap_personal_hs_seq as fap_personal_hs_seq
				, personal_highschool.fap_personal_hs_nm as fap_personal_hs_nm
				, personal_highschool.fap_personal_hs_field as fap_personal_hs_field
				, personal_highschool.fap_personal_hs_ins_id as fap_personal_hs_ins_id
				, personal_highschool.fap_personal_hs_ins_dt as fap_personal_hs_ins_dt
				, personal_highschool.fap_personal_hs_udt_id as fap_personal_hs_udt_id
				, personal_highschool.fap_personal_hs_udt_dt as fap_personal_hs_udt_dt
			</if>
			<if test="fap_personal_user_edu_level == 'B3301' 
						|| fap_personal_user_edu_level == 'B3302'
						|| fap_personal_user_edu_level == 'B3304'
						|| fap_personal_user_edu_level == 'B3305'">
				personal_university.fap_personal_univ_seq as fap_personal_univ_seq
				, personal_university.fap_personal_univ_nm as fap_personal_univ_nm
				, personal_university.fap_personal_univ_abroad_ck as fap_personal_univ_abroad_ck
				, personal_university.fap_personal_univ_coll as fap_personal_univ_coll
				, personal_university.fap_personal_univ_major as fap_personal_univ_major
				, personal_university.fap_personal_univ_ins_id as fap_personal_univ_ins_id
				, personal_university.fap_personal_univ_ins_dt as fap_personal_univ_ins_dt
				, personal_university.fap_personal_univ_udt_id as fap_personal_univ_udt_id
				, personal_university.fap_personal_univ_udt_dt as fap_personal_univ_udt_dt
			</if>
			<if test="fap_personal_user_edu_level == 'B3303'
						|| fap_personal_user_edu_level == 'B3306'">
				personal_university.fap_personal_univ_seq as fap_personal_univ_seq
				, personal_university.fap_personal_univ_nm as fap_personal_univ_nm
				, personal_university.fap_personal_univ_abroad_ck as fap_personal_univ_abroad_ck
				, personal_university.fap_personal_univ_coll as fap_personal_univ_coll
				, personal_university.fap_personal_univ_major as fap_personal_univ_major
				, personal_university.fap_personal_univ_ins_id as fap_personal_univ_ins_id
				, personal_university.fap_personal_univ_ins_dt as fap_personal_univ_ins_dt
				, personal_university.fap_personal_univ_udt_id as fap_personal_univ_udt_id
				, personal_university.fap_personal_univ_udt_dt as fap_personal_univ_udt_dt
				, personal_graduate.fap_personal_grad_seq as fap_personal_grad_seq
				, personal_graduate.fap_personal_grad_nm as fap_personal_grad_nm
				, personal_graduate.fap_personal_grad_ck as fap_personal_grad_ck
				, personal_graduate.fap_personal_grad_major as fap_personal_grad_major
				, personal_graduate.fap_personal_grad_ins_id as fap_personal_grad_ins_id
				, personal_graduate.fap_personal_grad_ins_dt as fap_personal_grad_ins_dt
				, personal_graduate.fap_personal_grad_udt_id as fap_personal_grad_udt_id
				, personal_graduate.fap_personal_grad_udt_dt as fap_personal_grad_udt_dt
			</if>
		from
			<if test="fap_personal_user_edu_level == 'B3300'">
				fap_personal_highschool_tb as personal_highschool
			</if>
			<if test="fap_personal_user_edu_level == 'B3301' 
						|| fap_personal_user_edu_level == 'B3302'
						|| fap_personal_user_edu_level == 'B3304'
						|| fap_personal_user_edu_level == 'B3305'">
				fap_personal_university_tb as personal_university
			</if>
			<if test="fap_personal_user_edu_level == 'B3303'
						|| fap_personal_user_edu_level == 'B3306'">
				fap_personal_university_tb as personal_university
				, fap_personal_graduate_tb as personal_graduate
			</if>
		where
			<if test="fap_personal_user_edu_level == 'B3300'">
				#{fap_personal_user_seq} = personal_highschool.fap_personal_user_seq
			</if>
			<if test="fap_personal_user_edu_level == 'B3301' 
						|| fap_personal_user_edu_level == 'B3302'
						|| fap_personal_user_edu_level == 'B3304'
						|| fap_personal_user_edu_level == 'B3305'">
				#{fap_personal_user_seq} = personal_university.fap_personal_user_seq
			</if>
			<if test="fap_personal_user_edu_level == 'B3303'
						|| fap_personal_user_edu_level == 'B3306'">
				#{fap_personal_user_seq} = personal_university.fap_personal_user_seq
				and personal_university.fap_personal_univ_seq = personal_graduate.fap_personal_univ_seq
			</if>
	</select>
	<!-- 일반 회원의 학교 정보 가져오기 종료 -->
	
	<!-- FAP 통합잡페어 정보 리스트 불러오기 시작; 2018. 12. 6. 정대영 -->
	<select id="select_fap_user_jobfair_info_list" resultType="hashmap">
		select
			fap_jobfair_seq as fap_jobfair_seq 
		    ,fap_jobfair_title as fap_jobfair_title
		    ,date_format(fap_jobfair_st, '%Y-%m-%d') as fap_jobfair_st
		    ,date_format(fap_jobfair_et, '%Y-%m-%d') as fap_jobfair_et
		    ,fap_jobfair_log_saved as fap_jobfair_log_saved
		    ,fap_jobfair_log_origin as fap_jobfair_log_origin
		    ,fap_jobfair_eps as fap_jobfair_eps
		from
			fap_jobfair_tb
		where
			fap_jobfair_eps = 'C1201'
		order by
			fap_jobfair_ins_dt desc
	</select>
	<!-- FAP 통합잡페어 정보 리스트 불러오기 종료-->
	
	<!-- FAP 통합잡페어 개최지 리스트 불러오기 시작; 2018. 12. 6. 정대영 -->
	<select id="select_fap_user_jobfair_location_list" parameterType="hashmap" resultType="hashmap">
		select
			fap_jobfair_seq 
			,fap_jobfair_lo
		from
			fap_jobfair_lo_tb
		where
			fap_jobfair_seq in
			(
				<foreach item ="fap_jobfair_seq" collection="jobfairSeqList" index="index" open="" separator=" ," close="">
					#{fap_jobfair_seq}
				</foreach>
			)
		order by
			fap_jobfair_seq asc
	</select>
	<!-- FAP 통합잡페어 개최지 리스트 불러오기 종료-->
	
	<!-- FAP 통합잡페어 승인요청 시작; 2018. 12. 6. 정대영 -->
	<insert id="user_jobfair_entry_request" parameterType="hashmap">
		insert into fap_jobfair_apply_tb(
			user_id
			,fap_jobfair_seq
			,fap_jobfair_user_per
		)
		values(
			#{user_id}
			,#{fap_jobfair_seq}
			,'C1001'
		)
	</insert>
	<!-- FAP 통합잡페어 승인요청 종료-->
	
	<!-- FAP 취업지원자 채용공고 셀렉트(채용공고 읽기) 시작; 2018. 12. 13. 정대영-->
	<select id="select_jobfair_job_advertisement" parameterType="hashmap" resultType="hashmap">
		select 
			ad.fap_job_ad_seq as fap_job_ad_seq
		    ,ad.fap_job_ad_major_business as fap_job_ad_major_business
		    ,ad.fap_job_ad_homepage as fap_job_ad_homepage
		    ,ad.fap_job_ad_est_dt as fap_job_ad_est_dt
			,ad.fap_job_ad_stock as fap_job_ad_stock
		    ,ad.fap_job_ad_3years_avg_sales as fap_job_ad_3years_avg_sales
			,ad.fap_job_ad_employee_num as fap_job_ad_employee_num
			,ad.fap_job_ad_foreigner_num as fap_job_ad_foreigner_num
		    ,ad.fap_job_ad_korean_num as fap_job_ad_korean_num
			,ad.fap_job_ad_postcode as fap_job_ad_postcode
			,ad.fap_job_ad_address as fap_job_ad_address
			,ad.fap_job_ad_address_dtl as fap_job_ad_address_dtl
			,ad.fap_job_ad_title as fap_job_ad_title
			,ad.fap_job_ad_worktime as fap_job_ad_worktime
			,ad.fap_job_ad_overtime as fap_job_ad_overtime
			,ad.fap_job_ad_hire_type as fap_job_ad_hire_type
			,ad.fap_job_ad_intern as fap_job_ad_intern
			,ad.fap_job_ad_recruit_num as fap_job_ad_recruit_num
			,ad.fap_job_ad_ideal_person as fap_job_ad_ideal_person
			,ad.fap_job_ad_age as fap_job_ad_age
			,ad.fap_job_ad_gender as fap_job_ad_gender
			,ad.fap_job_ad_isdorm as fap_job_ad_isdorm
			,ad.fap_job_ad_promotion as fap_job_ad_promotion
			,ad.fap_job_ad_vacation as fap_job_ad_vacation
			,ad.fap_job_ad_welfare as fap_job_ad_welfare
		    ,ad.fap_job_ad_open_grade as fap_job_ad_open_grade
			,ad.fap_job_ad_qual_dpe as fap_job_ad_qual_dpe
			,ad.fap_job_ad_terms_dpe as fap_job_ad_terms_dpe
			,ad.fap_job_ad_coc_agree as fap_job_ad_coc_agree
			,ad.fap_job_ad_overlap as fap_job_ad_overlap
			,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
			,ad.fap_job_ad_state as fap_job_ad_state
			,ad.fap_job_ad_ins_id as fap_job_ad_ins_id
			,ad.fap_job_ad_ins_dt as fap_job_ad_ins_dt
		    ,ad.fap_job_ad_udt_id as fap_job_ad_udt_id
			,ad.fap_job_ad_udt_dt as fap_job_ad_udt_dt
		    ,ad.fap_comp_id as fap_comp_id
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
            ,comp.fap_comp_en_nm as fap_comp_en_nm
            ,comp.fap_comp_ja_nm as fap_comp_ja_nm
            ,divide.fap_jobfair_divide_st as fap_jobfair_divide_st
            ,divide.fap_jobfair_divide_et as fap_jobfair_divide_et
		from
			fap_job_ad_tb ad
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_jobfair_divide_tb divide
            on ad.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
            and ad.fap_jobfair_seq = divide.fap_jobfair_seq
		where
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
		    ad.fap_jobfair_seq = #{fap_jobfair_seq}
		    and
		    ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 취업지원자 채용공고 셀렉트(채용공고 읽기) 종료 -->
	
	<!-- FAP 내가담은기업 목록 인서트 시작; 2018. 12. 14. 정대영 -->
	<insert id="insert_my_favorite_company" parameterType="hashmap">
		insert into fap_favorite_company_tb(
			fap_job_ad_seq
			,fap_jobfair_divide_seq
			,fap_jobfair_seq
			,user_id
			,fap_fav_comp_ins_id
		)
		values(
			#{fap_job_ad_seq}
			,#{fap_jobfair_divide_seq}
			,#{fap_jobfair_seq}
			,#{user_id}
			,#{user_id}
		)
	</insert>
	<!-- FAP 내가담은기업 목록 인서트 종료-->
	
	<!-- FAP 내가담은기업 중복체크 시작; 2018. 12. 14. 정대영 -->
	<select id="my_favorite_company_check" parameterType="hashmap" resultType="String">
		select 
			user_id
		from
			fap_favorite_company_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
			and
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
			fap_jobfair_seq = #{fap_jobfair_seq}
			and  
			user_id = #{user_id}
	</select>
	<!-- FAP 내가담은기업 중복체크 종료 -->
	
	<!-- FAP 공통 회원 정보 수정 시작; 2018. 12. 17. 김준영 -->
	<update id="update_com_user" parameterType="User">
		update
			com_user_tb
		set
			user_nm = #{user_nm}
			<if test="user_pw != ''">
				, user_pw = #{user_pw}			
			</if>
			, user_phone = #{user_phone}
			, user_email = #{user_email}
			, user_birth = #{user_birth}
			, user_sex = #{user_sex}
			, user_flag = #{user_flag}
			, user_state = #{user_state}
			, user_udt_id = #{user_id}
			, user_udt_dt = #{user_udt_dt}
		where
			user_id = #{user_id}
	</update>
	<!-- FAP 공통 회원 정보 수정 종료 -->
	
	<!-- FAP 개인 회원 정보 수정 시작; 2018. 12. 17. 김준영 -->
	<update id="update_personal_user" parameterType="FapPersonalUser">
		update
			fap_personal_user_tb
		set
			fap_personal_user_edu_level = #{fap_personal_user_edu_level}
			, fap_personal_user_edu_ct_nm = #{fap_personal_user_edu_ct_nm}
			, fap_personal_user_job_objective = #{fap_personal_user_job_objective}
			, fap_personal_user_edu_course_nm = #{fap_personal_user_edu_course_nm}
			, fap_personal_user_udt_id = #{fap_personal_user_udt_id}
			, fap_personal_user_udt_dt = #{fap_personal_user_udt_dt}
		where
			fap_personal_user_seq = #{fap_personal_user_seq}
	</update>
	<!-- FAP 개인 회원 정보 수정 종료 -->

	<!-- 개인 회원 고등학교 정보 수정 시작; 2018. 12. 17. 김준영 -->
	<update id="update_user_hs" parameterType="FapPersonalHighschool">
		update
			fap_personal_highschool_tb
		set
			fap_personal_hs_nm = #{fap_personal_hs_nm}
			, fap_personal_hs_field = #{fap_personal_hs_field}
			, fap_personal_hs_udt_id = #{fap_personal_hs_udt_id}
			, fap_personal_hs_udt_dt = #{fap_personal_hs_udt_dt}
		where
			fap_personal_hs_seq = #{fap_personal_hs_seq}
	</update>
	<!-- 개인 회원 고등학교 정보 수정 종료-->
	
	<!-- 개인 회원 대학교 정보 수정 시작; 2018. 12. 17. 김준영 -->
	<update id="update_user_univ" parameterType="FapPersonalUniversity">
		update
			fap_personal_university_tb
		set
			fap_personal_univ_nm = #{fap_personal_univ_nm}
			, fap_personal_univ_abroad_ck = #{fap_personal_univ_abroad_ck}
			, fap_personal_univ_coll = #{fap_personal_univ_coll}
			, fap_personal_univ_major = #{fap_personal_univ_major}
			, fap_personal_univ_udt_id = #{fap_personal_univ_udt_id}
			, fap_personal_univ_udt_dt = #{fap_personal_univ_udt_dt}
		where
			fap_personal_univ_seq = #{fap_personal_univ_seq}
	</update>
	<!-- 개인 회원 대학교 정보 수정 종료 -->
	
	<!-- 개인 회원 대학원 정보 수정 시작; 2018. 12. 17. 김준영 -->
	<update id="update_user_grad" parameterType="FapPersonalGraduate">
		update
			fap_personal_graduate_tb
		 set
			fap_personal_grad_nm = #{fap_personal_grad_nm}
			, fap_personal_grad_ck = #{fap_personal_grad_ck}
			, fap_personal_grad_major = #{fap_personal_grad_major}
			, fap_personal_grad_udt_id = #{fap_personal_grad_udt_id}
			, fap_personal_grad_udt_dt = #{fap_personal_grad_udt_dt}
		where
			fap_personal_grad_seq = #{fap_personal_grad_seq}
	</update>
	<!-- 개인 회원 대학원 정보 수정 종료 -->
	
	<!-- 개인 회원 고등학교 정보 삭제 시작; 2018. 12. 17. 김준영 -->
	<delete id="delete_user_hs" parameterType="int">
		delete
		from
			fap_personal_highschool_tb
		where
			fap_personal_user_seq = #{fap_personal_user_seq}
	</delete>
	<!-- 개인 회원 고등학교 정보 삭제 종료 -->
	
	<!-- 개인 회원 대학교 정보 삭제 시작; 2018. 12. 17. 김준영 -->
	<delete id="delete_user_univ" parameterType="int">
		delete
		from
			fap_personal_university_tb
		where
			fap_personal_user_seq = #{fap_personal_user_seq}
	</delete>
	<!-- 개인 회원 대학교 정보 삭제 종료 -->
	
	<!-- 개인 회원 대학원 정보 삭제 시작; 2018. 12. 17. 김준영 -->
	<delete id="delete_user_grad" parameterType="int">
		delete
		from
			fap_personal_graduate_tb
		where
			fap_personal_grad_seq = #{fap_personal_grad_seq}
	</delete>
	<!-- 개인 회원 대학원 정보 삭제 종료 -->
	
	<!-- FAP 내가담은기업 삭제 시작; 2018. 12. 17. 정대영 -->
	<delete id="delete_my_favorite_company_list" parameterType="hashmap">
		delete
		from
			fap_favorite_company_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
			fap_jobfair_seq = #{fap_jobfair_seq}
		<if test="fap_fav_comp_seq == 0">
			and
			user_id = #{user_id}
		</if>
		<if test="fap_fav_comp_seq != 0">
			and
			user_id = #{user_id}
			and
			fap_fav_comp_seq = #{fap_fav_comp_seq}
		</if>	
	</delete>
	<!-- FAP 내가담은기업 삭제 종료 -->
	
	<!-- FAP 이력서 관리 리스트 출력 시작; 2018.12.18. 남유송-->
	<select id="select_my_resume_list" resultType="hashmap" parameterType="String">
		select
			basic.fap_resume_seq as fap_resume_seq
		    ,basic.user_id as user_id
		    ,basic.fap_resume_title as fap_resume_title
		    ,IF(isnull(apply.fap_resume_seq),TRUE,FALSE) as fap_resume_flag
            ,IF(isnull(open_resume.fap_resume_seq),TRUE,FALSE) as fap_open_resume_flag
		    ,DATE_FORMAT(basic.fap_resume_ins_dt, '%Y-%m-%d') as fap_resume_ins_dt
		    ,DATE_FORMAT(basic.fap_resume_udt_dt, '%Y-%m-%d') as fap_resume_udt_dt
            ,IFNULL((
				select
					cuser.fap_comp_ja_nm as fap_comp_ja_nm
				from
					fap_company_user_tb cuser
				where
					cuser.fap_comp_id = apply.FAP_COMP_ID
			),open_pt.fap_open_pt_title) as fap_comp_ja_nm
            ,apply.fap_job_app_info_rank as fap_job_app_info_rank
            ,IFNULL(
				DATE_FORMAT(apply.fap_job_app_info_ins_dt, '%Y-%m-%d'),
                DATE_FORMAT(open_apply.fap_open_pt_apply_ins_dt, '%Y-%m-%d')
                ) as fap_job_app_info_ins_dt
           ,apply.fap_job_resume_update_gb as fap_job_resume_update_gb
		from
			fap_resume_tb basic
		left join
		    fap_job_apply_info_tb apply
		on
			basic.fap_resume_seq = apply.fap_resume_seq
		left join
			fap_open_pt_resume_tb open_resume
		on
			basic.fap_resume_seq = open_resume.fap_resume_seq
		left join
			fap_open_pt_apply_tb open_apply
		on
			open_apply.fap_open_pt_apply_seq = open_resume.fap_open_pt_apply_seq
        left join
			fap_open_pt_tb open_pt
		on
			open_pt.fap_open_pt_seq = open_apply.fap_open_pt_seq
		where
			basic.user_id = #{user_id}
		order by
			basic.fap_resume_udt_dt desc
	</select>
	<!-- FAP 이력서 관리 리스트 출력 종료 -->
	
	<!-- FAP 지원가능한 이력서 리스트 출력 시작-->
	<select id="select_my_resume_available_list" resultType="hashmap" parameterType="hashmap">
		select
			basic.fap_resume_seq as fap_resume_seq
		    ,basic.user_id as user_id
		    ,basic.fap_resume_title as fap_resume_title
		    ,DATE_FORMAT(basic.fap_resume_ins_dt, '%Y-%m-%d') as fap_resume_ins_dt
		    ,DATE_FORMAT(basic.fap_resume_udt_dt, '%Y-%m-%d') as fap_resume_udt_dt
		from
			fap_resume_tb basic
		where
			basic.user_id = #{user_id}
		order by
			basic.fap_resume_udt_dt desc
	</select>
	<!-- FAP 지원가능한 이력서 리스트 출력 종료 -->
	
	<!-- FAP 이력서 저장 파일 이름 리스트 출력 시작; 2018.12.26. 남유송-->
	<select id="select_files" resultType="hashmap" parameterType="hashmap">
		select
			resumetb.fap_resume_pic_saved as pic_saved, 
			filetb.fap_resume_file_saved as file_saved
		from
			fap_resume_tb as resumetb
		inner join
		 	fap_resume_file_tb as filetb
		on
			resumetb.fap_resume_seq = filetb.fap_resume_seq
		and
			resumetb.user_id = #{user_id}
			
	</select>
	<!-- FAP 이력서 저장 파일 이름 리스트 출력 종료-->
	
	<!-- FAP 이력서 기본정보 업데이트 시작; 2019.01.07. 남유송-->
	<update id="update_resume_form" parameterType="ResumeForm">
		update 
			fap_resume_tb
		set
			fap_resume_title = #{fap_resume_title}
			,fap_resume_gender = #{fap_resume_gender}
			,fap_resume_marital = #{fap_resume_marital}
			,fap_resume_nationality = #{fap_resume_nationality}
			,fap_resume_pic_saved = #{fap_resume_pic_saved}
			,fap_resume_pic_origin = #{fap_resume_pic_origin}
			,fap_resume_birth = #{fap_resume_birth}
			,fap_resume_dependents = #{fap_resume_dependents}
			,fap_resume_url = #{fap_resume_url}
			,fap_resume_udt_dt = now()
			,fap_resume_udt_id = #{fap_resume_udt_id} 
		where 
			fap_resume_seq = #{fap_resume_seq}
		and
			user_id = #{user_id}
	</update>
	<!-- FAP 이력서기본정보 업데이트 종료 -->
	
	<!-- FAP 이력서 삭제 시작; 2018.12.18. 남유송-->
	<delete id="delete_my_resume" parameterType="hashmap">
		delete
		from 
			fap_resume_tb
		where 
			fap_resume_seq = #{fap_resume_seq} 
		and 
			user_id = #{user_id}
	</delete>
	<!-- FAP 이력서 삭제 종료 -->
	
	<!-- FAP 이력서 학력/관련 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_eduHistory" parameterType="long">
		delete 
		from 
			fap_resume_eduhistory_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 학력/관련 정보 삭제 시작 -->
	
	<!-- FAP 이력서 자격증 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_license" parameterType="long">
		delete 
		from 
			fap_resume_license_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 자격증 정보 삭제 종료 -->
	
	<!-- FAP 이력서 사회/경력 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_career" parameterType="long">
		delete 
		from 
			fap_resume_career_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 자격증 정보 삭제 종료-->
	
	<!-- FAP 이력서 프로젝트 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_project" parameterType="long">
		delete 
		from 
			fap_resume_project_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 프로젝트 정보 삭제 종료 -->
	
	<!-- FAP 이력서 재능/역량 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_talent" parameterType="long">
		delete 
		from 
			fap_resume_talent_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 재능/역량 정보 삭제 종료 -->
	
	<!-- FAP 이력서 PR 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_profile" parameterType="long">
		delete 
		from 
			fap_resume_profile_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 PR 정보 삭제 종료 -->
	
	<!-- FAP 이력서 주소  정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_addr" parameterType="long">
		delete 
		from 
			fap_resume_address_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 주소 정보 삭제 종료 -->
	
	<!-- FAP 이력서 이름 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_name" parameterType="long">
		delete 
		from 
			fap_resume_name_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 이름 정보 삭제 종료 -->
	
	<!-- FAP 이력서 파일 정보 삭제 시작; 2019.01.07. 남유송-->
	<delete id="delete_resume_file" parameterType="long">
		delete 
		from 
			fap_resume_file_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</delete>
	<!-- FAP 이력서 파일 정보 삭제 종료 -->

	<!-- FAP 모든 이력서 정보; 2018.12.18. 남유송 -->
	<select id="selectResumeApplyBasic" parameterType="hashmap" resultType="hashmap">
		select
		   parent.fap_resume_seq as fap_resume_seq
		    ,parent.fap_resume_title as fap_resume_title
		    ,parent.fap_resume_gender as fap_resume_gender
		    ,parent.fap_resume_marital as fap_resume_marital
		    ,parent.fap_resume_nationality as fap_resume_nationality
		    ,parent.fap_resume_pic_saved as fap_resume_pic_saved
		    ,parent.fap_resume_pic_origin as fap_resume_pic_origin
		    ,DATE_FORMAT(parent.fap_resume_birth, '%Y-%m-%d') as fap_resume_birth
		    ,parent.fap_resume_dependents as fap_resume_dependents
		    ,parent.fap_resume_url as fap_resume_url
		    ,cuser.user_phone as user_phone
            ,cuser.user_email as user_email
			,parent.fap_resume_ins_dt as fap_resume_ins_dt
			,parent.fap_resume_ins_id as fap_resume_ins_id
			,parent.fap_resume_udt_dt as fap_resume_udt_dt
			,parent.fap_resume_udt_id as fap_resume_udt_id
		from
				fap_resume_tb as parent
		inner join
				com_user_tb cuser
		on
				parent.user_id = cuser.user_id
		where
				parent.fap_resume_seq = #{fap_resume_seq}
	</select>
	
	<select id="selectResumeApplyEduhistory" parameterType="hashmap" resultType="hashmap">
		select
				    eduhistory.fap_resume_edu_seq as fap_resume_edu_seq
				    ,eduhistory.fap_resume_edu_sc_nm as fap_resume_edu_sc_nm
				    ,eduhistory.fap_resume_edu_coll as fap_resume_edu_coll
					,eduhistory.fap_resume_edu_major as fap_resume_edu_major
					,eduhistory.fap_resume_edu_gd_ck as fap_resume_edu_gd_ck
				    ,DATE_FORMAT(eduhistory.fap_resume_edu_er_dt, '%Y-%m-%d') as fap_resume_edu_er_dt
				    ,DATE_FORMAT(eduhistory.fap_resume_edu_gd_dt, '%Y-%m-%d') as fap_resume_edu_gd_dt
				    ,eduhistory.fap_resume_edu_pd_summary as fap_resume_edu_pd_summary
					,eduhistory.fap_resume_edu_note as fap_resume_edu_note
					,eduhistory.fap_resume_edu_field as fap_resume_edu_field
					,eduhistory.fap_resume_edu_ins_dt as fap_resume_edu_ins_dt
					,eduhistory.fap_resume_edu_ins_id as fap_resume_edu_ins_id
					,eduhistory.fap_resume_edu_udt_id as fap_resume_edu_udt_id
					,eduhistory.fap_resume_edu_udt_dt as fap_resume_edu_udt_dt
		from
						fap_resume_tb as parent
		inner join
						fap_resume_eduhistory_tb as eduhistory
				on
						parent.fap_resume_seq = eduhistory.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				eduhistory.fap_resume_edu_seq
	</select>
	
	<select id="selectResumeApplyLicense" parameterType="hashmap" resultType="hashmap">
		select
			license.fap_resume_license_seq as fap_resume_license_seq
			,license.fap_resume_license_get_year as fap_resume_license_get_year
		    ,license.fap_resume_license_get_month as fap_resume_license_get_month
		    ,license.fap_resume_license_nm as fap_resume_license_nm
		    ,license.fap_resume_license_score as fap_resume_license_score
			,license.fap_resume_license_issuing_organization as fap_resume_license_issuing_organization
			,license.fap_resume_license_note as fap_resume_license_note
			,license.fap_resume_license_ins_id as fap_resume_license_ins_id
			,license.fap_resume_license_ins_dt as fap_resume_license_ins_dt
			,license.fap_resume_license_udt_id as fap_resume_license_udt_id
			,license.fap_resume_license_udt_dt as fap_resume_license_udt_dt
		from
					fap_resume_tb as parent
		inner join
						fap_resume_license_tb as license
				on
						parent.fap_resume_seq = license.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				license.fap_resume_license_seq
	</select>
	
	<select id="selectResumeApplyCareer" parameterType="hashmap" resultType="hashmap">
		select
					career.fap_resume_crr_seq as fap_resume_crr_seq
				    ,date_format(career.fap_resume_crr_st, '%Y-%m-%d') as fap_resume_crr_st
				    ,date_format(career.fap_resume_crr_et, '%Y-%m-%d') as fap_resume_crr_et
				    ,career.fap_resume_crr_gb as fap_resume_crr_gb
				    ,career.fap_resume_crr_pd_summary as fap_resume_crr_pd_summary
				    ,career.fap_resume_crr_comp_nm as fap_resume_crr_comp_nm
				    ,career.fap_resume_crr_major_bussiness as fap_resume_crr_major_bussiness
				    ,career.fap_resume_crr_job_function as fap_resume_crr_job_function
					,career.fap_resume_crr_job_position as fap_resume_crr_job_position
					,career.fap_resume_crr_ins_id as fap_resume_crr_ins_id
					,career.fap_resume_crr_ins_dt as fap_resume_crr_ins_dt
					,career.fap_resume_crr_udt_id as fap_resume_crr_udt_id
					,career.fap_resume_crr_udt_dt as fap_resume_crr_udt_dt
		from
					fap_resume_tb as parent
		inner join
						fap_resume_career_tb as career
				on
						parent.fap_resume_seq = career.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				career.fap_resume_crr_seq
	</select>
	
	<select id="selectResumeApplyProject" parameterType="hashmap" resultType="hashmap">
		select
					project.fap_resume_project_seq as fap_resume_project_seq
				    ,project.fap_resume_project_nm as fap_resume_project_nm
					,project.fap_resume_project_service as fap_resume_project_service
				    ,date_format(project.fap_resume_project_st, '%Y-%m-%d') as fap_resume_project_st
				    ,date_format(project.fap_resume_project_et, '%Y-%m-%d') as fap_resume_project_et
				    ,project.fap_resume_project_pd_summary as fap_resume_project_pd_summary
					,project.fap_resume_project_responsibility as fap_resume_project_responsibility
					,project.fap_resume_project_technique as fap_resume_project_technique
					,project.fap_resume_project_peoples_num as fap_resume_project_peoples_num
					,project.fap_resume_project_ins_id as fap_resume_project_ins_id
					,project.fap_resume_project_ins_dt as fap_resume_project_ins_dt
					,project.fap_resume_project_udt_id as fap_resume_project_udt_id
					,project.fap_resume_project_udt_dt as fap_resume_project_udt_dt
		from
					fap_resume_tb as parent
		inner join
						fap_resume_project_tb as project
				on 
						parent.fap_resume_seq = project.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				project.fap_resume_project_seq
	</select>
	
	<select id="selectResumeApplyTalent" parameterType="hashmap" resultType="hashmap">
		select
			talent.fap_resume_talent_seq as fap_resume_talent_seq
		    ,talent.fap_resume_talent_content as fap_resume_talent_content
			,talent.fap_resume_talent_ins_id as fap_resume_talent_ins_id
			,talent.fap_resume_talent_ins_dt as fap_resume_talent_ins_dt
			,talent.fap_resume_talent_udt_id as fap_resume_talent_udt_id
			,talent.fap_resume_talent_udt_dt as fap_resume_talent_udt_dt
		from
					fap_resume_tb as parent
		inner join
						fap_resume_talent_tb as talent
				on
						parent.fap_resume_seq = talent.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				talent.fap_resume_talent_seq
	</select>

	<select id="selectResumeApplyProfile" parameterType="hashmap" resultType="hashmap">
		select
					profiletb.fap_resume_pr_seq as fap_resume_pr_seq
				    ,profiletb.fap_resume_pr_gb as fap_resume_pr_gb
					,profiletb.fap_resume_pr_content as fap_resume_pr_content
					,profiletb.fap_resume_pr_ins_id as fap_resume_pr_ins_id
					,profiletb.fap_resume_pr_ins_dt as fap_resume_pr_ins_dt
					,profiletb.fap_resume_pr_udt_id as fap_resume_pr_udt_id
					,profiletb.fap_resume_pr_udt_dt as fap_resume_pr_udt_dt
		from
			fap_resume_tb as parent
		inner join
						fap_resume_profile_tb as profiletb
				on
						parent.fap_resume_seq = profiletb.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				profiletb.fap_resume_pr_seq
	</select>
	
	<select id="selectResumeApplyAddress" parameterType="hashmap" resultType="hashmap">
		select
					address.fap_resume_address_seq as fap_resume_address_seq
				    ,address.fap_resume_address as fap_resume_address
					,address.fap_resume_address_ins_id as fap_resume_address_ins_id
					,address.fap_resume_address_ins_dt as fap_resume_address_ins_dt
					,address.fap_resume_address_udt_id as fap_resume_address_udt_id
					,address.fap_resume_address_udt_dt as fap_resume_address_udt_dt
		from
			fap_resume_tb as parent
		inner join
						fap_resume_address_tb as address
				on
						parent.fap_resume_seq = address.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				address.fap_resume_address_seq
	</select>
	
	<select id="selectResumeApplyName" parameterType="hashmap" resultType="hashmap">
		select
					nametb.fap_resume_nm_seq as fap_resume_nm_seq
				    ,nametb.fap_resume_lang_gb as fap_resume_lang_gb
					,nametb.fap_resume_nm as fap_resume_nm
					,nametb.fap_resume_nm_ins_id as fap_resume_nm_ins_id
					,nametb.fap_resume_nm_ins_dt as fap_resume_nm_ins_dt
					,nametb.fap_resume_nm_udt_id as fap_resume_nm_udt_id
					,nametb.fap_resume_nm_udt_dt as fap_resume_nm_udt_dt
		from
			fap_resume_tb as parent
		inner join
						fap_resume_name_tb as nametb
				on
						parent.fap_resume_seq = nametb.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
				nametb.fap_resume_nm_seq
	</select>
	
	<select id="selectResumeApplyFile" parameterType="hashmap" resultType="hashmap">
		select
					filetb.fap_resume_file_seq as fap_resume_file_seq
				    ,filetb.fap_resume_file_saved as fap_resume_file_saved
					,filetb.fap_resume_file_origin as fap_resume_file_origin
					,filetb.fap_resume_file_gb as fap_resume_file_gb
					,filetb.fap_resume_file_ins_id as fap_resume_file_ins_id
					,filetb.fap_resume_file_ins_dt as fap_resume_file_ins_dt
					,filetb.fap_resume_file_udt_id as fap_resume_file_udt_id
					,filetb.fap_resume_file_udt_dt as fap_resume_file_udt_dt
		from
			fap_resume_tb as parent
		inner join
						fap_resume_file_tb as filetb
				on
						parent.fap_resume_seq = filetb.fap_resume_seq
		where
						parent.fap_resume_seq = #{fap_resume_seq}
		order by
			filetb.fap_resume_file_seq
	</select>

	<!-- FAP 취업지원자 잡페어별 그룹코드 셀렉트 시작; 2019. 1. 14. 정대영-->
	<select id="select_company_group_code_list" parameterType="hashmap" resultType="hashmap">
		select
			fap_comp_groupcode
			,fap_comp_stock
			,fap_comp_3years_avg_sales
			,fap_comp_employee_num
		from
			fap_comp_group_set_tb
		where
			fap_jobfair_seq = #{fap_jobfair_seq}
	</select>
	<!-- FAP 취업지원자 잡페어별 그룹코드 셀렉트 종료 -->
	
	<!-- FAP 채용공고 상세검색 시작; 2018. 12. 22. 정대영-->
	<resultMap type="hashmap" id="searchJobAdList">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_title" column="fap_job_ad_title"/>
		<result property="fap_job_ad_rule_type" column="fap_job_ad_rule_type"/>
		<result property="fap_job_ad_groupcode" column="fap_job_ad_groupcode"/>
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq"/>
		<result property="fap_jobfair_seq" column="fap_jobfair_seq"/>
		<result property="fap_comp_ja_nm" column="fap_comp_ja_nm"/>
		<result property="fap_job_ad_udt_dt" column="fap_job_ad_udt_dt"/>
		<result property="fap_jobfair_divide_st" column="fap_jobfair_divide_st"/>
		<result property="fap_jobfair_divide_et" column="fap_jobfair_divide_et"/>
		<collection property="workPlaceList" javaType="java.util.ArrayList" resultMap="searchJobAdWorkPlace" />	
		<collection property="categoryList" javaType="java.util.ArrayList" resultMap="searchJobAdCategory" />
	</resultMap>
	<resultMap type="hashmap" id="searchJobAdWorkPlace">
		<id property="fap_job_workplace_gb" column="fap_job_workplace_gb" />
	</resultMap>
	<resultMap type="hashmap" id="searchJobAdCategory">
		<id property="fap_job_category_gb" column="fap_job_category_gb" />
	</resultMap>	
	<select id="search_job_advertisement_list" parameterType="hashmap" resultMap="searchJobAdList">
		select 
			ad.fap_job_ad_seq as fap_job_ad_seq
			,ad.fap_job_ad_title as fap_job_ad_title
			,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
		    ,ad.fap_job_ad_rule_type as fap_job_ad_rule_type
            ,comp.fap_comp_ja_nm as fap_comp_ja_nm
            ,date_format(ad.fap_job_ad_udt_dt, '%y-%m-%d') as fap_job_ad_udt_dt
            ,date_format(divide.fap_jobfair_divide_st, '%y-%m-%d') as fap_jobfair_divide_st
            ,date_format(divide.fap_jobfair_divide_et, '%y-%m-%d') as fap_jobfair_divide_et
            ,place.fap_job_workplace_gb as fap_job_workplace_gb
            ,category.fap_job_category_gb as fap_job_category_gb
		from
			fap_job_ad_tb ad
		inner join
			fap_job_ad_show_tb ad_show
			on ad.fap_job_ad_seq = ad_show.fap_job_ad_seq
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_jobfair_divide_tb divide
            on ad.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
            and ad.fap_jobfair_seq = divide.fap_jobfair_seq
		left outer join
			fap_job_workplace_tb place
            on ad.fap_job_ad_seq = place.fap_job_ad_seq
		left outer join
			fap_job_category_tb category
            on ad.fap_job_ad_seq = category.fap_job_ad_seq
		where
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
		    ad.fap_jobfair_seq = #{fap_jobfair_seq}
		    and
		    ad.fap_job_ad_state = 'C2101'
		    and
		    ad_show.fap_job_ad_show_gb = (
		    														select
		    															user_flag
		    														from
		    															com_user_tb
		    														where
		    															user_id = #{user_id}
		    														)
		    <!-- 회사이름 검색 -->
		    <if test="searchedCompanyName != '' and searchedCompanyName != null">
		    and
		    comp.fap_comp_ja_nm like concat('%',#{searchedCompanyName},'%') 
		    </if>
		    <!-- 그룹별 검색 -->
		    <if test="selectedGroupCodeList != null and selectedGroupCodeList.size != 0">
		    	<foreach item ="fap_job_ad_groupcode" collection="selectedGroupCodeList" index="index" open="and ad.fap_job_ad_groupcode in (" separator=", " close=")">
		   	 		#{fap_job_ad_groupcode}
		    	</foreach>
		    </if>
		    <!-- 주요업무별 검색-->
		    <if test="selectedWorkGbList != null and selectedWorkGbList.size != 0">
		    and
		    ad.fap_job_ad_seq in (
		    						select 
										fap_job_ad_seq
									from
										fap_job_work_tb
									where
											<foreach item ="fap_job_work_gb" collection="selectedWorkGbList" index="index" open="fap_job_work_gb in (" separator=", " close=")">
												#{fap_job_work_gb}
											</foreach>
								  )
		    </if>
		  	<!-- 지역별 검색-->
		    <if test="selectedWorkplaceGbList != null and selectedWorkplaceGbList.size != 0">
		    and
		    ad.fap_job_ad_seq in (
		    						select 
										fap_job_ad_seq
									from
										fap_job_workplace_tb
									where
										    <foreach item ="fap_workplace_gb" collection="selectedWorkplaceGbList" index="index" open="fap_job_workplace_gb in (" separator=", " close=")">
										   		#{fap_workplace_gb}
										    </foreach>
								  )
		    </if>
		    <if test="selectedRecruitPcsGbList != null and selectedRecruitPcsGbList.size != 0">
		    and
		    <foreach item ="selectedRecruitPcsGb" collection="selectedRecruitPcsGbList" index="index" open=" (" separator="or" close=") ">  
			    <!-- 화상면접 검색 -->
			    <if test="selectedRecruitPcsGb == 'C3301'">
	            ad.fap_job_ad_seq in (
										select 
											pcs.fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb pcs
	                                    inner join
											fap_job_itv_tb itv
	                                    on
											pcs.fap_job_recruit_pcs_seq = itv.fap_job_recruit_pcs_seq
										where
											itv.fap_job_itv_gb = #{selectedRecruitPcsGb}
	            					  )
				</if>
			    <!-- 필기시험 검색 -->
			    <if test="selectedRecruitPcsGb == 'C2600'">
	            ad.fap_job_ad_seq in (
										select 
											pcs.fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb pcs
	                                    inner join
											fap_job_exam_tb exam
	                                    on
											pcs.fap_job_recruit_pcs_seq = exam.fap_job_recruit_pcs_seq
										where
											exam.fap_job_exam_gb = #{selectedRecruitPcsGb}
	            					  )
	            </if>
	            <!-- web시험 검색 -->
			    <if test="selectedRecruitPcsGb == 'C2601'">
	            ad.fap_job_ad_seq in (
										select 
											pcs.fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb pcs
	                                    inner join
											fap_job_exam_tb exam
	                                    on
											pcs.fap_job_recruit_pcs_seq = exam.fap_job_recruit_pcs_seq
										where
											exam.fap_job_exam_gb = #{selectedRecruitPcsGb}
	            					  )
	            </if>
				<!-- 기타전형 검색 -->
			    <if test="selectedRecruitPcsGb == 'C2503'">
	            ad.fap_job_ad_seq in (
										select 
											fap_job_ad_seq
										from
											fap_job_recruit_pcs_tb
										where
											fap_job_recruit_pcs_gb = #{selectedRecruitPcsGb}
									  )
			    </if>
			</foreach>
			</if>       					  
		order by ad.fap_job_ad_udt_dt desc
	</select>
	<!-- FAP 채용공고 상세검색 종료 -->
	
	<!-- FAP 채용공고 기업규모별 상세통계 시작; 2018. 12. 24. 정대영-->
	<select id="company_scale_statistics" parameterType="hashmap" resultType="hashmap">
		select 
			fap_job_ad_stock as selected_stock
		    ,fap_job_ad_3years_avg_sales as selected_3years_avg_sales
		    ,fap_job_ad_employee_num as selected_employee_num
		    ,(
				select
					round(avg(fap_job_ad_stock), 0)
				from
					fap_job_ad_tb
				where
					fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		            and
		            fap_jobfair_seq = #{fap_jobfair_seq}
			 
		      ) as total_stock_avg
			,(
				select
					round(avg(fap_job_ad_3years_avg_sales), 0)
				from
					fap_job_ad_tb
				where
					fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		            and
		            fap_jobfair_seq = #{fap_jobfair_seq}
			 
		      ) as total_3years_avg_sales_avg
			,(
				select
					round(avg(fap_job_ad_employee_num), 0)
				from
					fap_job_ad_tb
				where
					fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		            and
		            fap_jobfair_seq = #{fap_jobfair_seq}
			 
		      ) as total_employee_num_avg
		from
			fap_job_ad_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		    and
		    fap_jobfair_seq = #{fap_jobfair_seq}
		    and
		    fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 채용공고 기업규모별 상세통계 종료 -->
	
	<!-- FAP 취업지업자 회사명 및 지원가능 지망 셀렉트 시작; 2018. 12. 27. 정대영-->
	<select id="select_company_name_and_apply_count" parameterType="hashmap" resultType="hashmap">
		select 
			comp.fap_comp_ja_nm as fap_comp_ja_nm
		    ,ad.fap_comp_id as fap_comp_id
		    ,ad.fap_job_ad_seq as fap_job_ad_seq
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
		    ,ad.fap_job_ad_rule_type as fap_job_ad_rule_type
		    ,(
				select 
					count(*)
				from
					fap_job_apply_info_tb
				where
					user_id = #{user_id}
			  ) as apply_count
		from
			fap_job_ad_tb ad
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		where
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		    and
		    ad.fap_jobfair_seq = #{fap_jobfair_seq}
		    and
		    ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 취업지업자 회사명 및 지원가능 지망 셀렉트 종료 -->
	
	<!-- FAP 취업지업자 지망순위 셀렉트 시작; 2018. 12. 27. 정대영-->
	<select id="select_company_apply_info_rank" parameterType="hashmap" resultType="Integer">
		select
			fap_job_app_info_rank
		from
			fap_job_apply_info_tb
		where
			user_id = #{user_id}
			and
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 취업지업자 지망순위 셀렉트 종료 -->

	<!-- FAP 유저 정보 삭제 시작; 2018. 12. 26. 김준영 -->
	<update id="delete_user_info" parameterType="hashmap">
        update
           	com_user_tb
        set
            user_id = #{user_delete_id}
            , user_pw = ''
            , user_phone = ''
            , user_email = ''
            , user_birth = now()
            , user_sex = ''
            , user_state = #{user_state}
            , user_ins_id = #{user_delete_id}
            , user_ins_dt = now()
            , user_udt_id = #{user_delete_id}
            , user_udt_dt = now()
        where
            user_id = #{user_id}
    </update>
	<!-- FAP 유저 정보 삭제 종료 -->
	
	<!-- FAP 취업지업자 채용공고지원정보 테이블에 해당 유저아이디가 있는지 여부 셀렉트 시작; 2018. 12. 28. 정대영-->
	<select id="select_user_apply_count" parameterType="hashmap" resultType="Int">
		select
			count(*)
		from
			fap_user_apply_numbers_tb
		where
			user_id = #{user_id}
			and
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 취업지업자 채용공고지원정보 테이블에 해당 유저아이디가 있는지 여부 셀렉트 종료 -->
	
	<!-- FAP 취업지원자 잡페어 세부테이블에 설정된 디폴트 지망 개수 셀렉트 시작; 2018. 12. 28. 정대영-->
	<select id="select_current_jobfair_count" parameterType="hashmap" resultType="Int">
		select
			fap_jobfair_divide_app_num
		from
			fap_jobfair_divide_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 취업지원자 잡페어 세부테이블에 설정된 디폴트 지망 개수 셀렉트 종료 -->
	
	<!-- FAP 취업지원자 잡페어 지망개수 설정테이블에 입력된 유저의 지망 개수 셀렉트 시작; 2018. 12. 28. 정대영-->
	<select id="select_user_apply_fixed_count" parameterType="hashmap" resultType="Int">
		select
			fap_user_apply_numbers_fixed
		from
			fap_user_apply_numbers_tb
		where
			user_id = #{user_id}
			and
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 취업지원자 잡페어 지망개수 설정테이블에 입력된 유저의 지망 개수 셀렉트 종료 -->
	
	<!-- FAP 취업지원자 해당 채용공고에 지원하기(최초지원 시) 시작; 2018. 12. 31. 정대영-->
	<insert id="apply_insert_this_job_advertisement" parameterType="hashmap">
		insert into fap_user_apply_numbers_tb( 
			user_id
			,fap_jobfair_divide_seq
			,fap_user_apply_numbers_fixed
			,fap_user_apply_numbers_count
			,fap_user_apply_numbers_auto_gb
			,fap_user_apply_numbers_ins_id
			,fap_user_apply_numbers_ins_dt
	    )
		values (
			#{user_id}
			,#{fap_jobfair_divide_seq}
			,(
				select
					fap_jobfair_divide_app_num
				from
					fap_jobfair_divide_tb
				where
					fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
					and
					fap_jobfair_seq = #{fap_jobfair_seq}
			  )
			,1
			,'D0100'
			,#{user_id}
			,now()
		)	
	</insert>
	<!-- FAP 취업지원자 해당 채용공고에 지원하기(최초지원 시) 종료 -->
	
	<!-- FAP 취업지원자 해당 채용공고에 지원하기(추가지원 시) 시작; 2018. 12. 31. 정대영-->
	<update id="apply_update_this_job_advertisement" parameterType="hashmap">
		update
			fap_user_apply_numbers_tb
		set
			fap_user_apply_numbers_count = (
												select
													fap_user_apply_numbers_count
												from
													(
														select
															fap_user_apply_numbers_count
														from
															fap_user_apply_numbers_tb
														where
															fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
															and
															user_id = #{user_id}
													) for_subquery_tb				
											 ) + 1 
			,fap_user_apply_numbers_udt_id = #{user_id} 
			,fap_user_apply_numbers_udt_dt = now()
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
			user_id = #{user_id}
	</update>
	<!-- FAP 취업지원자 해당 채용공고에 지원하기(추가지원 시) 종료 -->
	
	<!-- FAP 취업지원자 해당 채용공고 지원 최종완료 시작; 2018. 12. 31. 정대영-->
	<insert id="apply_second_this_job_advertisement" parameterType="hashmap">
		insert into fap_job_apply_info_tb( 
			fap_jobfair_divide_seq
			,fap_job_ad_seq
			,fap_comp_id
			,fap_resume_seq
			,user_id
			,fap_job_app_info_rank
			,fap_job_app_info_ins_id
			,fap_job_app_info_ins_dt
			,fap_job_app_info_cancel_gb
			,fap_job_ad_is_mismatching
			,fap_job_exp_agree_gb
	    )
		values (
			#{fap_jobfair_divide_seq}
			,#{fap_job_ad_seq}
			,(
				select
					fap_comp_id
				from
					fap_job_ad_tb
				where
					fap_job_ad_seq = #{fap_job_ad_seq}
					and
					fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
					and
					fap_jobfair_seq = #{fap_jobfair_seq}
			  )
			,#{fap_resume_seq}
			,#{user_id}
			,#{fap_job_app_info_rank}
			,#{user_id}
			,now()
			,'D0200'
			,(
				select 
					fap_job_ad_is_mismatching
				from
					fap_job_ad_tb
				where
					fap_job_ad_seq = #{fap_job_ad_seq}
			  )
			  ,#{fap_job_exp_agree_gb}
		)
	</insert>
	<!-- FAP 취업지원자 해당 채용공고 지원 최종완료 종료 -->
	
	<!-- FAP 채용공고 중복지원 여부 체크 시작; 2018. 12. 31. 정대영-->
	<select id="apply_job_advertisement_duplicate_check" parameterType="hashmap" resultType="Int">
		select
			count(*)
		from
			fap_job_apply_info_tb apply
		inner join
			fap_job_ad_tb ad
		on
			apply.fap_job_ad_seq = ad.fap_job_ad_seq
		where
			apply.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			apply.fap_job_ad_seq = #{fap_job_ad_seq}
		and
			apply.user_id = #{user_id}
		and
			ad.fap_job_ad_overlap = 'C2001'
	</select>
	<!-- FAP 채용공고 중복지원 여부 체크 종료 -->
	
	<!-- FAP 취업지원자 채용공고 지원가능한지 여부 판단 시작; 2019. 1. 3. 정대영-->
	<select id="select_fap_jobfair_applicable_time" parameterType="hashmap" resultType="String">
		<![CDATA[
			select
				fap_jobfair_applicable_time_first
			from
				fap_jobfair_applicable_time_tb
			where
				fap_jobfair_divide_seq  = #{fap_jobfair_divide_seq}
				and
	            fap_jobfair_applicable_time_st < current_timestamp()
	            and
	            fap_jobfair_applicable_time_et > current_timestamp()
		]]>
	</select>
	<!-- FAP 취업지원자 채용공고 지원가능한지 여부 판단 종료 -->
	
	<!-- FAP 취업지원자 채용공고 지원 가능 여부 판단 2 시작 -->
	<select id="select_jobfair_apply_rule_gb" parameterType="hashmap" resultType="string">
		select
			rule.fap_jobfair_apply_rule_gb
		from
			fap_jobfair_apply_rule_tb rule
		inner join
			fap_jobfair_applicable_time_tb app
		on
			app.fap_jobfair_applicable_time_seq = rule.fap_jobfair_applicable_time_seq
		where
			rule.fap_job_ad_seq = #{fap_job_ad_seq}
		and
			app.fap_jobfair_applicable_time_deadline_gb = 'D0400'	
	</select>
	<!-- FAP 취업지원자 채용공고 지원 가능 여부 판단 2 종료 -->
	
	<!-- FAP 취업지원자 채용공고 지원허가의 최초여부를 판단 시작; 2019. 1. 3. 정대영-->
	<select id="select_fap_jobfair_applicable_is_first" parameterType="hashmap" resultType="Long">
		select
			fap_job_ad_seq
		from
			fap_comp_add_apply_info_tb
		where
			fap_jobfair_divide_seq  = #{fap_jobfair_divide_seq}
            and
            fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 취업지원자 채용공고 지원허가의 최초여부를 판단 종료 -->
	
	<!-- FAP 취업지원자 채용공고 지원할 지망개수 보유하고 있는지 여부 판단 시작; 2019. 1. 4. 정대영-->
	<select id="apply_job_advertisement_quarter_check" parameterType="hashmap" resultType="Int">
		select
			(fap_user_apply_numbers_fixed - fap_user_apply_numbers_count) as quartercount
		from
			fap_user_apply_numbers_tb
		where
			user_id = #{user_id}
	   		and
	   		fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 취업지원자 채용공고 지원할 지망개수 보유하고 있는지 여부 판단 종료 -->
	
	<!-- FAP 취업지원자 채용공고 지원가능한 시간여부 판단 시작; 2019. 1. 4. 정대영-->
	<select id="apply_job_advertisement_time_check" parameterType="hashmap" resultType="Int">
		<![CDATA[
			select
				count(*) as current_applicable_time
			from
				fap_jobfair_applicable_time_tb
			where
				fap_jobfair_divide_seq  = #{fap_jobfair_divide_seq}
				and
	            fap_jobfair_applicable_time_st < current_timestamp()
	            and
	            fap_jobfair_applicable_time_et > current_timestamp()
		]]>
	</select>
	<!-- FAP 취업지원자 채용공고 지원가능한 시간여부 판단 종료 -->
	
	<!-- FAP 취업지원자 내정기업 리스트 검색 시작; 2019. 1. 8. 신동철-->
	<select id="search_nominated_company_list" parameterType="String" resultType="hashmap">
		select
			nominee.fap_comp_id as fap_comp_id
			, nominee.fap_job_ad_seq as fap_job_ad_seq
			, nominee.fap_nominee_seq as fap_nominee_seq
			, company.fap_comp_en_nm as fap_comp_en_nm
		from
			fap_nominee_tb nominee
			inner join fap_company_user_tb company
				on nominee.fap_comp_id = company.fap_comp_id
		where
			nominee.user_id  = #{user_id}
	</select>
	<!-- FAP 취업지원자 내정기업 리스트 검색 종료 -->
	
	<!-- FAP 내정자 내정서류 등록 시작; 2019.1.8. 신동철 -->
	<insert id="insert_user_required_doc" parameterType="FAPPersonalRequiredDoc" >
		insert into
			fap_personal_required_doc_tb
			(
				fap_nominee_seq
				, fap_personal_required_doc_title		
				, fap_personal_required_doc_detail
				, fap_personal_required_doc_origin
				, fap_personal_required_doc_saved
				, fap_personal_required_doc_uploader_gb				
				, fap_personal_required_doc_ins_id
				, fap_personal_required_doc_ins_dt
				, fap_personal_required_doc_udt_id
				, fap_personal_required_doc_udt_dt				
			) values(
				#{fap_nominee_seq}		
				, #{fap_personal_required_doc_title}		
				, #{fap_personal_required_doc_detail}
				, #{fap_personal_required_doc_origin}
				, #{fap_personal_required_doc_saved}
				, #{fap_personal_required_doc_uploader_gb}				
				, #{fap_personal_required_doc_ins_id}
				, #{fap_personal_required_doc_ins_dt}
				, #{fap_personal_required_doc_udt_id}
				, #{fap_personal_required_doc_udt_dt}				
			)			
	</insert>
	<!-- FAP 내정자 내정서류 등록 종료 -->
	
	<!-- 회원 권한 검색 시작; 2019. 1. 8. 신동철-->
	<select id="select_user_flag" parameterType="String" resultType="String">
		select
			user_flag
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 회원 권한 검색 종료 -->
	
	<!-- 지원된 이력서 개수 검색 시작; 2019. 1. 9. 남유송-->
	<select id="select_undeletable_resume" resultType="int">
		select 
			count(*) 
		from 
			fap_job_apply_info_tb
		where 
			fap_resume_seq = #{fap_resume_seq}
	</select>
	<!-- 지원된 이력서 개수 검색 종료-->
	
	<!-- FAP 취업지원자 승인된 개인지원현황 리스트 출력 시작; 2019. 1. 15. 정대영 > 2019. 09. 04.김경아 컬럼 추가-->
	<select id="select_approval_after_personal_apply_status_list" parameterType="hashmap" resultType="hashmap">
		select
			info.fap_job_app_info_seq as fap_job_app_info_seq
		    ,info.fap_resume_seq as fap_resume_seq
		    ,info.fap_job_app_info_rank
		    ,date_format(info.fap_job_app_info_ins_dt, '%Y-%m-%d') as fap_job_app_info_ins_dt
		    ,info.fap_job_app_info_cancel_gb as fap_job_app_info_cancel_gb
		    ,ad.fap_job_ad_title as fap_job_ad_title
		    ,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
		    ,ad.fap_job_ad_rule_type as fap_job_ad_rule_type
		    ,ad.fap_job_ad_seq as fap_job_ad_seq
			,comp.fap_comp_ja_nm as fap_comp_ja_nm
			,comp.fap_comp_en_nm as fap_comp_en_nm
            ,res.fap_job_app_rt_acp as fap_job_app_rt_acp
            ,result.fap_job_app_final_rt_seq as fap_job_app_final_rt_seq
            ,result.fap_job_app_choice_comp_gb as fap_job_app_choice_comp_gb
            ,result.fap_job_app_final_rt_acp_user as fap_job_app_final_rt_acp_user
            ,result.fap_job_app_final_btn_gb as fap_job_app_final_btn_gb
		from
			fap_job_apply_info_tb info
		inner join
			fap_job_ad_tb ad
		    on info.fap_job_ad_seq = ad.fap_job_ad_seq
		    and info.fap_comp_id = ad.fap_comp_id
		inner join
			fap_company_user_tb comp
		    on info.fap_comp_id = comp.fap_comp_id
		inner join
			fap_job_apply_result_tb res
            on info.fap_job_app_info_seq = res.fap_job_app_info_seq
            and info.user_id = res.user_id
        inner join
	    	fap_job_apply_final_result_tb result
	    	on info.fap_job_app_info_seq = result.fap_job_app_info_seq
		where
			info.user_id = #{user_id}
		    and
		    info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
            and
            res.fap_job_recruit_pcs_seq in
											(
												select
													t1.fap_job_recruit_pcs_seq
												from
													fap_job_recruit_pcs_tb t1,
													(
														select
															fap_job_ad_seq
															,max(fap_job_recruit_pcs_od) as max_od
														from
															fap_job_recruit_pcs_tb
														group by
															fap_job_ad_seq
												   ) t2
												where
													t1.fap_job_recruit_pcs_od = t2.max_od
												and
													t1.fap_job_ad_seq = t2.fap_job_ad_seq
                                            )
		order by
			info.fap_job_app_info_rank asc
	</select>
	<!-- FAP 취업지원자 승인된 개인지원현황 리스트 출력 종료-->
	
	<!-- FAP 취업지원자 최종확정 개수 검색 시작 -->
	<select id="personal_apply_final_decision_select_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			fap_job_apply_final_result_tb final
		inner join
			fap_job_apply_info_tb info
		on
			final.fap_job_app_info_seq = info.fap_job_app_info_seq
		where
			final.user_id = #{user_id}
		and
			final.fap_job_app_choice_comp_gb = 'D0701'
		and
			info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 취업지원자 최종확정 개수 검색 종료 -->
	
	<!-- FAP 취업지원자 최종확정 결정 저장 시작 -->
	<update id="personal_apply_final_decision_update" parameterType="hashmap">
		update
			fap_job_apply_final_result_tb
		set
			fap_job_app_choice_comp_gb = #{fap_job_app_choice_comp_gb}
		where
			fap_job_app_final_rt_seq = #{fap_job_app_final_rt_seq}
	</update>
	<!-- FAP 취업지원자 최종확정 결정 저장 종료 -->
	
	<!-- FAP 취업지원자 전형일정 스케줄 검색 시작; 2019. 1. 16 신동철 -->
	<select id="select_user_recruit_pcs_sch" parameterType="String" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
			, sch.fap_job_recruit_pcs_sch_seq
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
			, sch.fap_job_recruit_pcs_sch_color
			, exam.fap_job_exam_gb
			, itv.fap_job_itv_gb
			, comp.fap_comp_en_nm
		from
			fap_job_ad_tb ad
			inner join fap_company_user_tb comp
				on comp.fap_comp_id = ad.fap_comp_id				
			inner join fap_job_recruit_pcs_tb pcs
				on pcs.fap_job_ad_seq = ad.fap_job_ad_seq				
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join 	fap_job_apply_result_tb result
				on result.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq				
			left join fap_job_exam_tb exam
				on exam.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			left join fap_job_itv_tb itv
				on itv.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
		where
			sch.fap_job_recruit_pcs_sch_ck = 'C5001'
			and result.user_id = #{user_id}
			and result.fap_job_app_rt_acp != 'D0002'
			and result.fap_job_app_rt_acp != 'D0003'
	</select>
	<!-- FAP 취업지원자 전형일정 스케줄 검색 종료 -->
	
	<!-- FAP 취업지원자 서류전형 검색 시작; 2019. 1. 16. 신동철 -->
	<select id="select_user_review_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on pcs.fap_job_recruit_pcs_seq = sch.fap_job_recruit_pcs_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- FAP 취업지원자 서류전형 검색 종료-->
	
	<!-- FAP 취업지원자 시험전형 검색 시작; 2019. 1. 16. 신동철 -->
	<resultMap type="hashmap" id="fapRecruitMap">
		<id property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq" />
		<result property="fap_job_recruit_pcs_gb" column="fap_job_recruit_pcs_gb" />
		<result property="fap_job_recruit_pcs_sch_st" column="fap_job_recruit_pcs_sch_st" />
		<result property="fap_job_recruit_pcs_sch_et" column="fap_job_recruit_pcs_sch_et" />
		<result property="fap_job_recruit_pcs_sch_lo" column="fap_job_recruit_pcs_sch_lo" />
		<result property="fap_job_recruit_pcs_sch_detail" column="fap_job_recruit_pcs_sch_detail" />
		<result property="fap_job_exam_gb" column="fap_job_exam_gb" />
		<result property="fap_job_exam_obj" column="fap_job_exam_obj" />
		<result property="fap_job_exam_tm" column="fap_job_exam_tm" />
		<result property="fap_job_exam_need" column="fap_job_exam_need" />
		<result property="fap_job_exam_obj_etc_dtl" column="fap_job_exam_obj_etc_dtl" />
		<result property="fap_job_exam_sv_etc_dtl" column="fap_job_exam_sv_etc_dtl" />
		<result property="fap_job_exam_need_etc_dtl" column="fap_job_exam_need_etc_dtl" />
		<collection property="fapRecruitExamList" javaType="java.util.ArrayList" resultMap="fapRecruitExamMap" />
	</resultMap>
	<resultMap type="hashmap" id="fapRecruitExamMap">
		<id property="fap_job_exam_type_seq" column="fap_job_exam_type_seq" />
		<result property="fap_job_exam_type_gb" column="fap_job_exam_type_gb" />
	</resultMap>
	<select id="select_user_exam_pcs" parameterType="Long" resultMap="fapRecruitMap">
		select
			pcs.fap_job_recruit_pcs_seq as fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb as fap_job_recruit_pcs_gb
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo as fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_detail as fap_job_recruit_pcs_sch_detail
		    , exam.fap_job_exam_gb as fap_job_exam_gb
		    , exam.fap_job_exam_obj as fap_job_exam_obj
		    , exam.fap_job_exam_tm as fap_job_exam_tm
		    , exam.fap_job_exam_need as fap_job_exam_need
		    , exam_obj.fap_job_exam_obj_etc_dtl as fap_job_exam_obj_etc_dtl
		    , exam_sv.fap_job_exam_sv_etc_dtl as fap_job_exam_sv_etc_dtl
		    , exam_need.fap_job_exam_need_etc_dtl as fap_job_exam_need_etc_dtl
		    , exam_type.fap_job_exam_type_seq as fap_job_exam_type_seq
		    , exam_type.fap_job_exam_type_gb as fap_job_exam_type_gb
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_exam_tb exam
				on pcs.fap_job_recruit_pcs_seq = exam.fap_job_recruit_pcs_seq
			left join fap_job_exam_file_tb exam_file
				on exam_file.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_obj_etc_tb exam_obj
				on exam_obj.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_sv_etc_tb exam_sv
				on exam_sv.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_need_etc_tb exam_need
				on exam_need.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_type_tb exam_type
				on exam_type.fap_job_exam_seq = exam.fap_job_exam_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- FAP 취업지원자 시험전형 검색 종료-->
	
	<!-- FAP 취업지원자 면접전형 검색 시작; 2019. 1. 16. 신동철 -->
	<select id="select_user_itv_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_waitingroom
		    , sch.fap_job_recruit_pcs_sch_detail
		    , itv.fap_job_itv_gb
		    , itv.fap_job_itv_obj
		    , itv.fap_job_itv_tp
		    , itv.fap_job_itv_tm
		    , itv_tp.fap_job_itv_tp_etc_dtl
		    , itv_obj.fap_job_itv_obj_etc_dtl		    
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_itv_tb itv
				on pcs.fap_job_recruit_pcs_seq = itv.fap_job_recruit_pcs_seq
			left join fap_job_itv_tp_etc_tb itv_tp
				on itv_tp.fap_job_itv_seq = itv.fap_job_itv_seq
			left join fap_job_itv_obj_etc_tb itv_obj
				on itv_obj.fap_job_itv_seq = itv.fap_job_itv_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- FAP 취업지원자 면접전형 검색 종료-->
	
	<!-- FAP 취업지원자 기타전형 검색 시작; 2019. 1. 16. 신동철 -->
	<select id="select_user_test_etc_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_detail
			, test_etc.fap_job_test_etc_obj
			, test_etc.fap_job_test_etc_dtl
			, test_etc_obj.fap_job_test_etc_obj_dtl		       
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_test_etc_tb test_etc
				on pcs.fap_job_recruit_pcs_seq = test_etc.fap_job_recruit_pcs_seq
			left join fap_job_test_etc_obj_tb test_etc_obj
				on test_etc_obj.fap_job_test_etc_seq = test_etc.fap_job_test_etc_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- FAP 취업지원자 기타전형 검색 종료-->
	
	<!-- FAP 취업지원자 승인 전 개인지원현황 리스트 출력 시작; 2019. 1. 16. 정대영 > 2019.09.04 김경아 컬럼추가-->
	<select id="select_approval_before_personal_apply_status_list" parameterType="hashmap" resultType="hashmap">
		select
			info1.fap_job_app_info_seq as fap_job_app_info_seq
		    ,info1.fap_resume_seq as fap_resume_seq
		    ,date_format(info1.fap_job_app_info_ins_dt, '%Y-%m-%d') as fap_job_app_info_ins_dt
		    ,info1.fap_job_app_info_cancel_gb as fap_job_app_info_cancel_gb
		    ,info1.fap_job_ad_seq as fap_job_ad_seq
		    ,info1.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_job_ad_title as fap_job_ad_title
		    ,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
		    ,ad.fap_job_ad_rule_type as fap_job_ad_rule_type
			,comp.fap_comp_ja_nm as fap_comp_ja_nm
			,comp.fap_comp_en_nm as fap_comp_en_nm
            ,per.fap_job_app_per_settled_num as fap_job_app_per_settled_num
            ,info1.fap_job_app_info_rank as fap_job_app_info_rank
            ,info1.user_id as user_id
            ,count(info2.fap_job_ad_seq) as now_apply_nums
		from
			fap_job_apply_info_tb info1
		inner join
			fap_job_ad_tb ad
		    on info1.fap_job_ad_seq = ad.fap_job_ad_seq
		    and info1.fap_comp_id = ad.fap_comp_id
		inner join
			fap_company_user_tb comp
		    on info1.fap_comp_id = comp.fap_comp_id
		inner join
			fap_job_apply_per_tb per
            on info1.fap_job_ad_seq = per.fap_job_ad_seq
		inner join
			fap_job_apply_info_tb info2
	        on info1.fap_job_ad_seq = info2.fap_job_ad_seq
		where
			info1.user_id = #{user_id}
		    and
		    info1.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
            and
            info1.fap_job_app_info_cancel_gb = 'D0200'
		group by
	        fap_job_app_info_seq
		order by
			fap_job_app_info_rank asc
	</select>	
	<!-- FAP 취업지원자 승인 전 개인지원현황 리스트 출력 종료 -->
	
	<!-- FAP 취업지원자 승인전 해당 지원자가 지원한 채용공고 쿼터현황 셀렉트 시작; 2019. 1. 18. 정대영-->
	<select id="select_per_ad_apply_info" parameterType="hashmap" resultType="java.util.LinkedHashMap">
		select
			info.fap_job_ad_seq as fap_job_ad_seq
			,info.fap_job_app_info_seq as fap_job_app_info_seq
            ,info.fap_job_app_info_rank as fap_job_app_info_rank
            ,per.fap_job_app_per_settled_num as fap_job_app_per_settled_num
            ,info.user_id as user_id
            ,per.fap_job_app_per_settled_num - count(sub.fap_job_ad_seq) as applicable_num
		from
			fap_job_apply_info_tb info
		inner join
			fap_job_apply_per_tb per
            on info.fap_job_ad_seq = per.fap_job_ad_seq
        left join
			(
				select
					info2.fap_job_ad_seq
				from
					fap_job_apply_info_tb info2
				where
					info2.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
				and
					info2.fap_job_app_info_cancel_gb = 'D0201'
            ) sub
			on
            info.fap_job_ad_seq = sub.fap_job_ad_seq
		where
			info.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			info.fap_job_app_info_cancel_gb = 'D0200'
		<if test="adListInMap != null and adListInMap.size != 0">
			and info.fap_job_ad_seq in 
									<foreach item ="fap_job_ad_seq" collection="adListInMap" index="index" open="(" separator=", " close=")">
										#{fap_job_ad_seq}				
									</foreach>
		</if>
		group by
			info.fap_job_app_info_seq
		order by
			fap_job_ad_seq asc
			,fap_job_app_info_rank asc
	</select>
	<!-- FAP 취업지원자 승인전 해당 지원자가 지원한 채용공고 쿼터현황 셀렉트 종료-->
	
	<!-- FAP 취업지원자 승인 전 지원정보 삭제 시작; 2019. 1. 18. 정대영 -->
	<delete id="delete_current_apply_info" parameterType="hashmap">
		delete
		from
			fap_job_apply_info_tb
		where
			fap_job_app_info_seq = #{fap_job_app_info_seq}
			and
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
			user_id = #{user_id}
			and
			fap_job_app_info_cancel_gb = 'D0200'
	</delete>
	<!-- FAP 취업지원자 승인 전 지원정보 삭제 종료 -->
	
	<!-- FAP 취업지원자 승인 전 지원정보 삭제 후 쿼터 회복 시작; 2019. 1. 21. 정대영-->
	<update id="minus_quarter_after_apply_cancel" parameterType="hashmap">
		update
			fap_user_apply_numbers_tb
		set
			fap_user_apply_numbers_count = fap_user_apply_numbers_count - 1
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
			user_id = #{user_id}
	</update>
	<!-- FAP 취업지원자 승인 전 지원정보 삭제 후 쿼터 회복 종료 -->
	
	<!-- FAP 통합잡페어 정보 리스트 불러오기 시작; 2019. 2. 13. 정대영 -->
	<select id="select_fap_user_jobfair_per_user_info_list" parameterType="String" resultType="hashmap">
		select
			jobfair.fap_jobfair_seq as fap_jobfair_seq 
		    ,jobfair.fap_jobfair_title as fap_jobfair_title
		    ,date_format(jobfair.fap_jobfair_st, '%Y-%m-%d') as fap_jobfair_st
		    ,date_format(jobfair.fap_jobfair_et, '%Y-%m-%d') as fap_jobfair_et
		    ,jobfair.fap_jobfair_log_saved as fap_jobfair_log_saved
		    ,jobfair.fap_jobfair_log_origin as fap_jobfair_log_origin
		    ,jobfair.fap_jobfair_eps as fap_jobfair_eps
            ,apply.fap_jobfair_user_per as fap_jobfair_user_per
		from
			fap_jobfair_tb jobfair
		left outer join
			fap_jobfair_apply_tb apply
            on jobfair.fap_jobfair_seq = apply.fap_jobfair_seq
            and apply.user_id = #{user_id}
		where
			jobfair.fap_jobfair_eps = 'C1201'
		order by
			fap_jobfair_ins_dt desc
	</select>
	<!-- FAP 통합잡페어 정보 리스트 불러오기 종료-->
	
	<!-- FAP 취업지원자 해당잡페어 승인된 취업지원자 잡페어 세부선택 셀렉트 시작; 2019. 2. 14. 정대영 -->
	<select id="select_fap_user_jobfair_divide_info_list" parameterType="hashmap" resultType="hashmap">
		select
			divide.fap_jobfair_divide_seq
            ,divide.fap_jobfair_seq
            ,divide.fap_jobfair_divide_st
            ,divide.fap_jobfair_divide_et
            ,divide.fap_jobfair_divide_detail
            ,divide.fap_jobfair_divide_gb
            ,divide.fap_jobfair_divide_gb_eps
            ,divide.fap_jobfair_divide_app_st
            ,divide.fap_jobfair_divide_app_et
            ,divide.fap_jobfair_divide_app_num
            ,rc.fap_jobfair_divide_rc
            ,curdate() as to_day
		from
			fap_jobfair_divide_tb divide
		inner join
			fap_jobfair_divide_rc_tb rc
			on divide.fap_jobfair_divide_seq = rc.fap_jobfair_divide_seq
            and rc.fap_jobfair_divide_rc = (
												select
													user_flag
												from
													com_user_tb
												where
													user_id = #{user_id}
											)
		where
			divide.fap_jobfair_seq = #{fap_jobfair_seq}
			and
			divide.fap_jobfair_divide_gb_eps = 'C1301'
	</select>
	<!-- FAP 취업지원자 해당잡페어 승인된 취업지원자 잡페어 세부선택 셀렉트 종료-->
	
	<!-- FAP 취업지원자 잡페어 선택 모달 눌렀을 때 해당아이디 잡페어 목록 요청 셀렉트 시작; 2019. 2. 15. 정대영 -->
	<select id="select_user_current_participation_jobfair_list" parameterType="String" resultType="hashmap">
		select
			jobfair.fap_jobfair_seq as fap_jobfair_seq
            ,jobfair.fap_jobfair_title as fap_jobfair_title
		from
			fap_jobfair_tb jobfair
		inner join
			fap_jobfair_apply_tb apply
            on jobfair.fap_jobfair_seq = apply.fap_jobfair_seq
		where
			apply.user_id = #{user_id}
			and
            apply.fap_jobfair_user_per = 'C1001'
	</select>
	<!-- FAP 취업지원자 잡페어 선택 모달 눌렀을 때 해당아이디 잡페어 목록 요청 셀렉트 종료-->
	
	<!-- FAP 취업지원자 잡페어 선택 모달 눌렀을 때 해당아이디 잡페어 목록 요청 셀렉트 시작; 2019. 2. 15. 정대영 -->
	<select id="select_user_current_participation_jobfair_divide" parameterType="hashmap" resultType="hashmap">
		select
			divide.fap_jobfair_divide_seq
            ,divide.fap_jobfair_seq
            ,divide.fap_jobfair_divide_st
            ,divide.fap_jobfair_divide_et
            ,divide.fap_jobfair_divide_detail
            ,divide.fap_jobfair_divide_gb
            ,divide.fap_jobfair_divide_gb_eps
            ,divide.fap_jobfair_divide_app_st
            ,divide.fap_jobfair_divide_app_et
            ,curdate() as to_day
		from
			fap_jobfair_divide_tb divide
		inner join
			fap_jobfair_divide_rc_tb rc
			on divide.fap_jobfair_divide_seq = rc.fap_jobfair_divide_seq
            and rc.fap_jobfair_divide_rc = (
												select
													user_flag
												from
													com_user_tb
												where
													user_id = #{user_id}
											)
		where
			divide.fap_jobfair_divide_gb_eps = 'C1301'
		<if test="jobfairInfoList != null and jobfairInfoList.size != 0">
			and
			divide.fap_jobfair_seq in
				<foreach item ="jobfairInfo" collection="jobfairInfoList" index="index" open="(" separator=" ," close=")">
					#{jobfairInfo.fap_jobfair_seq}
				</foreach>
		</if>
	</select>
	<!-- FAP 취업지원자 잡페어 선택 모달 눌렀을 때 해당아이디 잡페어 목록 요청 셀렉트 종료-->
	
	<!-- FAP 취업지원자 개인지원현황 지망순위 변경 요청 시작; 2019. 2. 20. 정대영 -->
	<update id="request_apply_info_rank_change" parameterType="java.util.ArrayList">
		<foreach item="appInfo" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_job_apply_info_tb
			set
				fap_job_app_info_rank = #{appInfo.fap_job_app_info_rank}
			where
				fap_job_app_info_seq = #{appInfo.fap_job_app_info_seq}
		</foreach>
	</update>
	<!-- FAP 취업지원자 개인지원현황 지망순위 변경 요청 종료-->
	
	<!-- FAP 취업지원자 개인별 지원전 상세정보 요청 시작; 2019. 2. 21. 정대영 -->
	<select id="select_per_user_before_apply_detail_info" parameterType="long" resultType="hashmap">
		select
			fap_job_recruit_pcs_seq
		    ,fap_job_recruit_pcs_gb
		    ,fap_job_recruit_pcs_od
		from
			fap_job_recruit_pcs_tb
		where
			fap_job_ad_seq = (
								select
									fap_job_ad_seq
								from
									fap_job_apply_info_tb
								where
									fap_job_app_info_seq = #{fap_job_app_info_seq}
							  )
		order by fap_job_recruit_pcs_od asc
	</select>
	<!-- FAP 취업지원자 개인별 지원전 상세정보 요청 종료-->
	
	<!-- FAP 취업지원자 개인별 지원후 상세정보 요청 시작; 2019. 2. 21. 정대영 -->
	<select id="select_per_user_after_apply_detail_info" parameterType="long" resultType="hashmap">
		select
			fap_job_recruit_pcs_seq
			,fap_job_recruit_pcs_gb
			,fap_job_recruit_pcs_od
			,fap_job_app_rt_acp
		from
		(
			select
				pcs.fap_job_recruit_pcs_seq as fap_job_recruit_pcs_seq
			    ,pcs.fap_job_recruit_pcs_gb as fap_job_recruit_pcs_gb
			    ,pcs.fap_job_recruit_pcs_od as fap_job_recruit_pcs_od
			    ,res.fap_job_app_rt_acp as fap_job_app_rt_acp
			from
				fap_job_apply_info_tb info
			inner join
				fap_job_apply_result_tb res
			    on info.fap_job_app_info_seq = res.fap_job_app_info_seq
			inner join
				fap_job_recruit_pcs_tb pcs
			    on res.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			where
				info.fap_job_app_info_seq = #{fap_job_app_info_seq}
			union
			select
				fap_job_app_final_rt_seq as fap_job_recruit_pcs_seq
				,'D0600' as fap_job_recruit_pcs_gb
				,(
					select
						count(*)
					from
						fap_job_apply_result_tb
					where
						fap_job_app_info_seq = #{fap_job_app_info_seq}
						
				  ) + 1 as fap_job_recruit_pcs_od
				,if (
						strcmp(fap_job_app_final_rt_acp_user, 'D0004') = 0
                        ,concat(fap_job_app_final_rt_acp_user, '+', fap_job_app_standby_rank_user)
                        ,fap_job_app_final_rt_acp_user
					 ) as fap_job_app_rt_acp
		    from
				fap_job_apply_final_result_tb
			where
				fap_job_app_info_seq = #{fap_job_app_info_seq}
		) fap_job_apply_total_tb
		order by fap_job_recruit_pcs_od asc
	</select>
	<!-- FAP 취업지원자 개인별 지원후 상세정보 요청 종료-->
	
	<!-- FAP 취업지원자 기업별 지망순위 별 셀렉트 시작; 2019. 2. 26. 정대영 -->
	<select id="select_current_company_rank_info" parameterType="long" resultType="hashmap">
		select 
			fap_job_app_info_rank
			,user_id
		from
			fap_job_apply_info_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
		and 
			fap_job_app_info_cancel_gb = 'D0200'
		order by
			fap_job_app_info_rank asc
	</select>
	<!-- FAP 취업지원자 기업별 지망순위 별 셀렉트 종료-->
	
	<!-- FAP 취업지원자 기업별 상세정보 요청 시작; 2019. 2. 26. 정대영 -->
	<select id="select_total_apply_status_detail_info" parameterType="long" resultType="hashmap">
		select 
			ad.fap_job_ad_seq as fap_job_ad_seq
			,ad.fap_job_ad_title as fap_job_ad_title
			,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
			,ad.fap_job_ad_state as fap_job_ad_state
            ,comp.fap_comp_ja_nm as fap_comp_ja_nm
            ,per.fap_job_app_per_settled_num as fap_job_app_per_settled_num
            ,ad.fap_job_ad_recruit_num as fap_job_ad_recruit_num
            ,count(info.fap_job_ad_seq) as now_apply_nums
		from
			fap_job_ad_tb ad
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_job_apply_per_tb per
            on ad.fap_job_ad_seq = per.fap_job_ad_seq
		left outer join
            fap_job_apply_info_tb info
            on ad.fap_job_ad_seq = info.fap_job_ad_seq
            and info.fap_job_app_info_cancel_gb = 'D0201'
		where
			ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 취업지원자 기업별 상세정보 요청 종료-->
	
	<!-- FAP 회원 가입시 교육기관 불러오기 시작; 2019. 2. 22. 김준영 -->
	<select id="select_komve" resultType="hashmap">
		select
			code.group_id
			, code.code
			, code.code_nm
		from
			com_code_tb as code
		inner join visible_check_tb as visible
			on code.code_seq = visible.code_seq
		where
			code.group_id = 'A15'
		and
			visible.visible_ck = 'A1600'
	</select>
	<!-- FAP 회원 가입시 교육기관 불러오기 종료 -->

	<!-- FAP 회원 메뉴 체크 시작; 2019. 2. 22. 김준영 -->
	<select id="check_user_personal" parameterType="String" resultType="int">
		select
			count(fap_personal_user_seq)
		from
			fap_personal_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- FAP 회원 메뉴 체크 종료 -->

	<!-- FAP 통합잡페어 취업지원자 잡페어 세부별 전체지원현황 시작; 2019. 2. 22. 정대영-->
	<select id="select_job_ad_total_application_status" parameterType="Int" resultType="hashmap">
		select 
			ad.fap_job_ad_seq as fap_job_ad_seq
			,ad.fap_job_ad_title as fap_job_ad_title
			,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
			,ad.fap_job_ad_state as fap_job_ad_state
			,ad.fap_job_ad_rule_type as fap_job_ad_rule_type
            ,comp.fap_comp_ja_nm as fap_comp_ja_nm
            ,per.fap_job_app_per_settled_num as fap_job_app_per_settled_num
            ,ad.fap_job_ad_recruit_num as fap_job_ad_recruit_num
            ,count(info.fap_job_ad_seq) as now_apply_nums
		from
			fap_job_ad_tb ad
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_job_apply_per_tb per
            on ad.fap_job_ad_seq = per.fap_job_ad_seq
		left outer join
			fap_job_apply_info_tb info
            on ad.fap_job_ad_seq = info.fap_job_ad_seq
			and ad.fap_jobfair_divide_seq = info.fap_jobfair_divide_seq
		where
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and ad.fap_job_ad_state = 'C2101'
		group by 
			ad.fap_job_ad_seq
		order by
			now_apply_nums desc
	</select>
	<!-- FAP 통합잡페어 취업지원자 잡페어 세부별 전체지원현황 종료 -->
	
	<!-- FAP 취업지원자 채용공고 리스트 총 개수 셀렉트 시작; 2019. 2. 25. 정대영-->
	<select id="select_jobfair_job_advertisement_list_count" parameterType="hashmap" resultType="int">
		select 
			count(*)
		from
			fap_job_ad_tb ad
		inner join
        	fap_job_ad_show_tb ad_show
        	on ad.fap_job_ad_seq = ad_show.fap_job_ad_seq
		where
				ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
		    	ad.fap_job_ad_state = 'C2101'
		    and
		    	ad_show.fap_job_ad_show_gb = (
		    																select
		    																	user_flag
		    																from
		    																	com_user_tb
		    																where
		    																	user_id = #{user_id}
		    															)
	</select>
	<!-- FAP 취업지원자 채용공고 리스트 셀렉트 종료 -->
	
	<!-- FAP 취업지원자 채용공고 리스트 셀렉트 시작; 2019. 2. 22. 정대영-->
	<select id="select_jobfair_job_advertisement_list" parameterType="hashmap" resultType="hashmap">
		select 
			ad.fap_job_ad_seq as fap_job_ad_seq
			,ad.fap_job_ad_title as fap_job_ad_title
			,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
			,ad.fap_job_ad_rule_type as fap_job_ad_rule_type
            ,comp.fap_comp_ja_nm as fap_comp_ja_nm
            ,date_format(ad.fap_job_ad_udt_dt, '%y-%m-%d') as fap_job_ad_udt_dt
            ,date_format(divide.fap_jobfair_divide_st, '%y-%m-%d') as fap_jobfair_divide_st
            ,date_format(divide.fap_jobfair_divide_et, '%y-%m-%d') as fap_jobfair_divide_et
		from
			fap_job_ad_tb ad
		inner join
			fap_company_user_tb comp
			on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_jobfair_divide_tb divide
            on ad.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
        inner join
        	fap_job_ad_show_tb ad_show
        	on ad.fap_job_ad_seq = ad_show.fap_job_ad_seq
		where
				ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
		    	ad.fap_job_ad_state = 'C2101'
		    and
		    	ad_show.fap_job_ad_show_gb = (
		    																select
		    																	user_flag
		    																from
		    																	com_user_tb
		    																where
		    																	user_id = #{user_id}
		    															)
		order by ad.fap_job_ad_udt_dt desc
	</select>
	<!-- FAP 취업지원자 채용공고 리스트 셀렉트 종료 -->
	
	<!-- FAP 취업지원자 채용공고 시퀀스 별 모집직종, 근무지 셀렉트 시작; 2019. 2. 26. 정대영-->
	<select id="select_category_and_workplace_list" parameterType="java.util.ArrayList" resultType="hashmap">
		select
			fap_job_ad_seq
			,category_workplace_seq
			,category_workplace_gb
		from
	        (
		        select 
					fap_job_ad_seq as fap_job_ad_seq
				    ,fap_job_category_seq as category_workplace_seq
				    ,fap_job_category_gb as category_workplace_gb
				from
					fap_job_category_tb
				union
				select 
					fap_job_ad_seq as fap_job_ad_seq
				    ,fap_job_workplace_seq as category_workplace_seq
				    ,fap_job_workplace_gb as category_workplace_gb
				from
					fap_job_workplace_tb
			) fap_job_ad_divide_tb
        where
        	<foreach item="fap_job_ad_seq" collection="list" index="index" open="fap_job_ad_seq in (" separator=" ," close=")">
				#{fap_job_ad_seq}
			</foreach>
		order by
			fap_job_ad_seq asc
			,category_workplace_gb asc
	</select>
	<!-- FAP 취업지원자 채용공고 시퀀스 별 모집직종, 근무지 셀렉트 종료 -->
	
	<!-- FAP 내가담은기업 리스트 출력; 2019. 2. 22. 정대영 -->
	<resultMap type="hashmap" id="favoriteAdList">
		<id property="fap_fav_comp_seq" column="fap_fav_comp_seq" />
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_job_ad_title" column="fap_job_ad_title"/>
		<result property="fap_job_ad_groupcode" column="fap_job_ad_groupcode"/>
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq"/>
		<result property="fap_jobfair_seq" column="fap_jobfair_seq"/>
		<result property="fap_jobfair_divide_st" column="fap_jobfair_divide_st"/>
		<result property="fap_jobfair_divide_et" column="fap_jobfair_divide_et"/>
		<result property="fap_comp_ja_nm" column="fap_comp_ja_nm"/>
		<collection property="workPlaceList" javaType="java.util.ArrayList" resultMap="favoriteAdWorkPlace" />	
		<collection property="categoryList" javaType="java.util.ArrayList" resultMap="favoriteAdCategory" />
	</resultMap>
	<resultMap type="hashmap" id="favoriteAdWorkPlace">
		<id property="fap_job_workplace_gb" column="fap_job_workplace_gb" />
	</resultMap>
	<resultMap type="hashmap" id="favoriteAdCategory">
		<id property="fap_job_category_gb" column="fap_job_category_gb" />
	</resultMap>
	<select id="select_my_favorite_company_list" parameterType="hashmap" resultMap="favoriteAdList">
		select
			fav.fap_fav_comp_seq as fap_fav_comp_seq
			,ad.fap_job_ad_seq as fap_job_ad_seq
		    ,ad.fap_job_ad_title as fap_job_ad_title
		    ,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
		    ,date_format(divide.fap_jobfair_divide_st, '%y-%m-%d') as fap_jobfair_divide_st
            ,date_format(divide.fap_jobfair_divide_et, '%y-%m-%d') as fap_jobfair_divide_et
		    ,comp.fap_comp_ja_nm as fap_comp_ja_nm
			,place.fap_job_workplace_gb as fap_job_workplace_gb
            ,category.fap_job_category_gb as fap_job_category_gb
		from 
		    fap_job_ad_tb ad
		inner join
		    fap_company_user_tb comp
		    on ad.fap_comp_id = comp.fap_comp_id
		inner join
			fap_jobfair_divide_tb divide
			on ad.fap_jobfair_divide_seq = divide.fap_jobfair_divide_seq
		    and ad.fap_jobfair_seq = divide.fap_jobfair_seq
		inner join
			fap_favorite_company_tb fav
			on ad.fap_job_ad_seq = fav.fap_job_ad_seq
		    and ad.fap_jobfair_divide_seq = fav.fap_jobfair_divide_seq
		    and ad.fap_jobfair_seq = fav.fap_jobfair_seq
		left outer join
			fap_job_workplace_tb place
            on ad.fap_job_ad_seq = place.fap_job_ad_seq
		left outer join
			fap_job_category_tb category
            on ad.fap_job_ad_seq = category.fap_job_ad_seq
		where
		    fav.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		    and
		    fav.user_id = #{user_id}
		    and
		    ad.fap_job_ad_state = 'C2101'
		order by fap_fav_comp_ins_dt desc
	</select>
	<!-- FAP 내가담은기업 리스트 출력 종료 -->
	
	<!-- FAP 공지사항 게시판 내용 검색 시작; 2019. 3. 6. 신동철 -->
	<select id="user_board_contents_search" parameterType="hashmap" resultType="BoardContent">
		select * 
		from (
			select  (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					  content.board_seq
					, content.board_content_seq
					, content.board_content_title
					, content.board_content_nm
					, content.board_content_hit
					, DATE_FORMAT(board_content_ins_dt, '%Y-%m-%d') as board_content_ins_dt
					, DATE_FORMAT(board_content_udt_dt, '%Y-%m-%d') as board_content_udt_dt
					, groups.board_tp
					, groups.board_gb
				from
					com_board_content_tb content
					, com_board_group_tb groups
					, (SELECT @ROWNUM := 0) B
				where		
					  content.board_seq=#{board_seq}	
			    and	 	 
						 groups.board_seq = content.board_seq
				<if test="board_seq==21">
				and
					(select
						fap_notice_view_target_ck
					 from
					 	fap_notice_content_tb as notice_content
					 where
					 	notice_content.board_content_seq = content.board_content_seq
					 )  in ('B2600' , 'B2602')
				</if>
				<if test="board_seq==22">
				and
					(select
						job_info.fap_open_job_info_view_target_ck
					 from
					 	fap_open_job_info_tb as job_info
					 where
					 	job_info.board_content_seq = content.board_content_seq
					 )  in ('B2600' , 'B2602')
				</if>
				<if test="searchTitle != null || searchTitle != ''">
					and
						board_title like concat('%',#{searchTitle},'%')
				</if>  
				<if test="searchContent != null || searchContent != ''">
					and
						board_content like concat('%',#{searchContent},'%')
				</if>  
			) A
		    order by CAST(A.board_content_seq AS INTEGER) desc limit 6
		) C
		where
			rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>
	<!-- FAP 공지사항 게시판 내용 검색 종료 -->
	
	<!-- FAP 공지사항 게시판 내용 count 조회 시작; 2019. 3. 6. 신동철 -->
	<select id="board_contents_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			com_board_content_tb content
		inner join
			com_board_group_tb grp
		on
			grp.board_seq = content.board_seq
		where
			board_detail_gb = #{board_detail_gb}
		<if test="board_detail_gb=='A1700'">
			and
				(select
					fap_notice_view_target_ck
				 from
				 	fap_notice_content_tb as notice_content
				 where
				 	notice_content.board_content_seq = content.board_content_seq
				 )  in ('B2600' , 'B2602')
		</if>
		<if test="board_detail_gb=='A1701'">
			and
				(select
					job_info.fap_open_job_info_view_target_ck
				 from
				 	fap_open_job_info_tb as job_info
				 where
				 	job_info.board_content_seq = content.board_content_seq
				 )  in ('B2600' , 'B2602')
			</if>		
		<if test="searchKey!='' and searchKey!=null ">	 
			   <if test="searchKey=='searchTitle'">
				and
					board_content_title like concat('%',#{searchValue},'%')
				</if>  
					<if test="searchKey=='searchContent'">
				and
					board_content_ct like concat('%',#{searchValue},'%')
				</if>  	
		 </if>
	</select>
	<!-- 게시판 count 조회 종료 -->
	

	
	<!-- FAP 잡페어 지원자 게시판 리스트 검색 시작; 2019. 7. 16. 김경아 -->	  
	<select id="user_board_contents_list_search" parameterType="hashmap" resultType="BoardContent">
		select * 
		from (
			select  (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					content.board_seq
					, content.board_content_seq
					, content.board_content_title
					, content.board_content_nm
					, content.board_content_hit
					, DATE_FORMAT(board_content_ins_dt, '%Y-%m-%d') as board_content_ins_dt
					, DATE_FORMAT(board_content_udt_dt, '%Y-%m-%d') as board_content_udt_dt
					, groups.board_tp
					, groups.board_gb
					, groups.board_detail_gb
				from
					com_board_content_tb content
					inner join
					   com_board_group_tb groups
					on
					   groups.board_seq = content.board_seq				 				   
					, (SELECT @ROWNUM := 0) B				
			    where
			          groups.board_detail_gb = #{board_detail_gb}		
				<if test="board_detail_gb=='A1700'">
					and
						(select
							fap_notice_view_target_ck
						 from
						 	fap_notice_content_tb as notice_content
						 where
						 	notice_content.board_content_seq = content.board_content_seq
						 )  in ('B2600' , 'B2602')
					</if>
					<if test="board_detail_gb=='A1701'">
					and
						(select
							job_info.fap_open_job_info_view_target_ck
						 from
						 	fap_open_job_info_tb as job_info
						 where
						 	job_info.board_content_seq = content.board_content_seq
						 )  in ('B2600' , 'B2602')
					</if>			
					<if test="searchKey!=null and searchKey !=''">							
							<if test='searchKey=="searchTitle"'>
							and 
								board_content_title like concat('%',#{searchValue},'%')
							</if>  
								<if test='searchKey=="searchContent"'>
							and
								board_content_ct like concat('%',#{searchValue},'%')
							</if> 
					</if>	 
			) A
		    order by CAST(A.board_content_seq AS INTEGER) desc
		) C
		where
			rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>

	<!-- FAP 잡페어 지원자 공지사항 리스트 검색 종료 -->
	
	<!-- 관리자 게시판 조회수 증가 시작 -->
	<update id="board_contents_hit_update" parameterType="int">
		update
			com_board_content_tb
		set
			board_content_hit = board_content_hit + 1
		where
			board_content_seq = #{board_content_seq}
	</update>	
	<!-- 관리자 게시판 조회수 증가 종료 -->
	
	
	<!-- FAP 잡페어 지원자 채용공고 Q&A 질문 등록 시작; 2019. 3. 8. 원병호 -->
	<insert id="insert_job_qna_question" parameterType="FapQnaQ">
		insert into
			fap_job_qna_question_tb(
				fap_job_ad_seq
		        , fap_job_qna_question_title
		        , fap_job_qna_question_content
		        , fap_job_qna_question_ins_id
		        , fap_job_qna_question_udt_id
			)values(
				#{fap_job_ad_seq}
		        , #{fap_job_qna_question_title}
		        , #{fap_job_qna_question_content}
		        , #{fap_job_qna_question_ins_id}
		        , #{fap_job_qna_question_udt_id}
		    )
	</insert>
	<!-- FAP 잡페어 지원자 채용공고 Q&A 질문 등록 종료ㅕ; 2019. 3. 8. 원병호 -->
	
	<resultMap type="hashmap" id="jobQNAq">
		<id property="fap_job_qna_question_seq" column="fap_job_qna_question_seq"/>
		<result property="fap_job_qna_question_seq" column="fap_job_qna_question_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_job_qna_question_title" column="fap_job_qna_question_title"/>
		<result property="fap_job_qna_question_content" column="fap_job_qna_question_content"/>
		<result property="fap_job_qna_question_per" column="fap_job_qna_question_per"/>
		<result property="fap_job_qna_question_state" column="fap_job_qna_question_state"/>
		<result property="fap_job_qna_question_ins_dt" column="fap_job_qna_question_ins_dt"/>
		<result property="fap_job_qna_question_udt_dt" column="fap_job_qna_question_udt_dt"/>
		<result property="fap_job_qna_refuse_reason" column="fap_job_qna_refuse_reason"/>
		<association property="jobQNAa" resultMap="jobQNAa"/>
	</resultMap>
	<resultMap type="hashmap" id="jobQNAa">
		<id property="fap_job_qna_answer_seq" column="fap_job_qna_answer_seq"/>
		<result property="fap_job_qna_answer_seq" column="fap_job_qna_answer_seq"/>		
		<result property="fap_job_qna_question_seq" column="fap_job_qna_question_seq"/>
		<result property="fap_job_qna_answer_content" column="fap_job_qna_answer_content"/>
		<result property="fap_job_qna_answer_ins_dt" column="fap_job_qna_answer_ins_dt"/>
		<result property="fap_job_qna_answer_udt_dt" column="fap_job_qna_answer_udt_dt"/>
	</resultMap>
	
	<!-- Q&A 리스트 가져오기; 2019.03.08 원병호 -->
	<select id="select_job_qna" parameterType="long" resultMap="jobQNAq">
		select
			q.fap_job_qna_question_seq
		    , q.fap_job_ad_seq
		    , q.fap_job_qna_question_title
		    , q.fap_job_qna_question_content
		    , q.fap_job_qna_question_per
		    , q.fap_job_qna_question_state
		    , q.fap_job_qna_refuse_reason
		    , DATE_FORMAT(q.fap_job_qna_question_ins_dt, '%Y-%m-%d') as fap_job_qna_question_ins_dt
		    , DATE_FORMAT(q.fap_job_qna_question_udt_dt, '%Y-%m-%d') as fap_job_qna_question_udt_dt
		from
			fap_job_qna_question_tb q
		where
			q.fap_job_ad_seq = #{fap_job_ad_seq}
		order by
			q.fap_job_qna_question_ins_dt desc
	
	</select>

	<!-- Q&A 질문+답변 가져오기; 2019.03.08 원병호 -->
	<select id="select_job_qna_one" parameterType="long" resultMap="jobQNAq">
		select
			q.fap_job_qna_question_seq
		    , q.fap_job_ad_seq
		    , q.fap_job_qna_question_title
		    , q.fap_job_qna_question_content
		    , q.fap_job_qna_question_per
		    , q.fap_job_qna_question_state
		    , q.fap_job_qna_refuse_reason
		    , DATE_FORMAT(q.fap_job_qna_question_ins_dt, '%Y-%m-%d') as fap_job_qna_question_ins_dt
		    , DATE_FORMAT(q.fap_job_qna_question_udt_dt, '%Y-%m-%d') as fap_job_qna_question_udt_dt
		    , a.fap_job_qna_answer_seq
		    , a.fap_job_qna_question_seq
		    , a.fap_job_qna_answer_content
		    , DATE_FORMAT(a.fap_job_qna_answer_ins_dt, '%Y-%m-%d') as fap_job_qna_answer_ins_dt
		    , DATE_FORMAT(a.fap_job_qna_answer_udt_dt, '%Y-%m-%d') as fap_job_qna_answer_udt_dt
		from
			fap_job_qna_question_tb q
		left join
			fap_job_qna_answer_tb a
		on
			q.fap_job_qna_question_seq = a.fap_job_qna_question_seq
		where
			q.fap_job_qna_question_seq = #{fap_job_qna_question_seq}
	</select>
	
	<!-- 사용자 채용공고 Q&A 질문 수정 시작 원병호 2019. 03. 11 -->
	<update id="update_job_qna_question" parameterType="FapQnaQ">
		update
			fap_job_qna_question_tb
		set
			fap_job_qna_question_title = #{fap_job_qna_question_title}
		    , fap_job_qna_question_content = #{fap_job_qna_question_content}
		    , fap_job_qna_question_udt_id = #{fap_job_qna_question_udt_id}
		    , fap_job_qna_question_udt_dt = now()
		where
			fap_job_qna_question_seq = #{fap_job_qna_question_seq}
	</update>
	<!-- 사용자 채용공고 Q&A 질문 수정 시작  끝 -->
	
	<!-- 사용자 채용공고 Q&A 질문 삭제 시작 원병호 2019. 03. 11 -->
	<delete id="delete_job_qna_question" parameterType="long">
		delete from
			fap_job_qna_question_tb
		where
			fap_job_qna_question_seq = #{fap_job_qna_question_seq}
	</delete>
	<!-- 사용자 채용공고 Q&A 질문 삭제 시작  끝 -->
	
	<!-- 설정되 최종확정기간중 오늘날짜 포함하는 정보 조회 시작 -->
	<select id="final_decision_time_select_today" resultType="FAPFinalDecisionTime" parameterType="int">
	<![CDATA[
		select
			fap_jobfair_final_decision_time_seq
			,fap_jobfair_divide_seq
			,fap_jobfair_final_decision_time_gb
			,fap_jobfair_final_decision_time_ct
			,DATE_FORMAT(fap_jobfair_final_decision_time_st, '%Y-%m-%d') as fap_jobfair_final_decision_time_st
			,DATE_FORMAT(fap_jobfair_final_decision_time_et, '%Y-%m-%d') as fap_jobfair_final_decision_time_et
		from
			fap_jobfair_final_decision_time_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			fap_jobfair_final_decision_time_st <= CURDATE()
		and
			fap_jobfair_final_decision_time_et >= CURDATE()
	]]>
	</select>
	<!-- 설정되 최종확정기간중 오늘날짜 포함하는 정보 조회 종료 -->
	
	<!-- 지원자가 최종확정을 내린 기업이 있는지 조회 시작 -->
	<select id="final_decision_time_count_select" parameterType="string" resultType="int">
		SELECT 
			count(*)
		FROM 
			fap_job_apply_final_result_tb 
		where 
			user_id=#{user_id} 
		and 
			fap_job_app_choice_comp_gb='D0701'
	</select>
	<!-- 지원자가 최종확정을 내린 기업이 있는지 조회 종료 -->
	
	<!-- FAP 오픈잡페어 설명회 정보 조회 시작 -->
	<select id="open_pt_info_select" resultType="FAPOpenPt">
		select
			fap_open_pt_seq
			,fap_open_pt_title
			,fap_open_pt_ct
			,fap_open_pt_gb
			,fap_open_pt_show_gb
			,fap_open_pt_close_gb
			,fap_open_pt_ins_id
			,DATE_FORMAT(fap_open_pt_ins_dt, '%Y-%m-%d') as fap_open_pt_ins_dt
			,fap_open_pt_udt_id
			,DATE_FORMAT(fap_open_pt_udt_dt, '%Y-%m-%d') as fap_open_pt_udt_dt
		from
			fap_open_pt_tb
		where
			fap_open_pt_gb = 'D1000'
		and
			fap_open_pt_show_gb = 'D1101'
	</select>
	<!-- FAP 오픈잡페어 설명회 정보 조회 종료 -->
	
	<!-- FAP 오픈잡페어 구직자 교육 정보 조회 시작 -->
	<select id="open_pt_edu_info_select" resultType="FAPOpenPt">
		select
			fap_open_pt_seq
			,fap_open_pt_title
			,fap_open_pt_ct
			,fap_open_pt_gb
			,fap_open_pt_show_gb
			,fap_open_pt_close_gb
			,fap_open_pt_ins_id
			,DATE_FORMAT(fap_open_pt_ins_dt, '%Y-%m-%d') as fap_open_pt_ins_dt
			,fap_open_pt_udt_id
			,DATE_FORMAT(fap_open_pt_udt_dt, '%Y-%m-%d') as fap_open_pt_udt_dt
		from
			fap_open_pt_tb
		where
			fap_open_pt_gb = 'D1001'
		and
			fap_open_pt_show_gb = 'D1101'
	</select>
	<!-- FAP 오픈잡페어 구직자 교육 정보 조회 종료 -->
	
	<!-- FAP 오픈잡페어 설명회 참가 신청 확인 시작 -->
	<select id="open_pt_apply_check" parameterType="FAPOpenPtApply" resultType="int">
		select
			count(*)
		from
			fap_open_pt_apply_tb
		where
			fap_open_pt_seq = #{fap_open_pt_seq}
		and
			user_id = #{user_id}
	</select>
	<!-- FAP 오픈잡페어 설명회 참가 신청 확인 종료 -->
	
	<!-- FAP 오픈잡페어 설명회 참가 신청 시작 -->
	<insert id="open_pt_apply" parameterType="FAPOpenPtApply" useGeneratedKeys="true" keyProperty="fap_open_pt_apply_seq">
		insert into
			fap_open_pt_apply_tb(
				fap_open_pt_seq
				,user_id
				,fap_open_pt_apply_ins_id
			)values(
				#{fap_open_pt_seq}
				,#{user_id}
				,#{fap_open_pt_apply_ins_id}
			)
	</insert>
	<!-- FAP 오픈잡페어 설명회 참가 신청 종료 -->
	
	<!-- FAP 오픈잡페어 구직자 교육 지원자 이력서 신청 시작 -->
	<insert id="open_pt_edu_resume_apply" parameterType="FAPOpenPtResume">
		insert into
			fap_open_pt_resume_tb(
				fap_open_pt_apply_seq
				,fap_resume_seq
			)values(
				#{fap_open_pt_apply_seq}
				,#{fap_resume_seq}
			)
	</insert>
	<!-- FAP 오픈잡페어 구직자 교육 지원자 이력서 신청 종료 -->
	
	<!-- FAP 오픈잡페어 설명회 참가 취소 시작 -->
	<delete id="open_pt_apply_cancel" parameterType="int">
		delete from
			fap_open_pt_apply_tb
		where
			fap_open_pt_apply_seq = #{fap_open_pt_apply_seq}
	</delete>
	<!-- FAP 오픈잡페어 설명회 참가 취소 종료 -->
	
	<!-- FAP 오픈잡페어 설명회 개인 참가 신청 리스트 조회 시작 -->
	<select id="user_open_pt_applied_list" parameterType="string" resultType="hashmap">
		select
			pt.fap_open_pt_seq as fap_open_pt_seq
			,pt.fap_open_pt_title as fap_open_pt_title
			,apply.fap_open_pt_apply_seq as fap_open_pt_apply_seq
			,apply.fap_open_pt_apply_gb as fap_open_pt_apply_gb
			,DATE_FORMAT(apply.fap_open_pt_apply_ins_dt, '%Y-%m-%d') as fap_open_pt_apply_ins_dt
		from
			fap_open_pt_tb pt
		join
			fap_open_pt_apply_tb apply
		on
			pt.fap_open_pt_seq = apply.fap_open_pt_seq
		where
			pt.fap_open_pt_gb = 'D1000'
		and
			apply.user_id = #{user_id}
		order by
			apply.fap_open_pt_apply_ins_dt desc
	</select>
	<!-- FAP 오픈잡페어 설명회 개인 참가 신청 리스트 조회 종료 -->
	
	<!-- FAP 오픈잡페어 구직자교육 개인 참가 신청 리스트 조회 시작 -->
	<select id="user_open_edu_applied_list" parameterType="string" resultType="hashmap">
		select
			pt.fap_open_pt_seq as fap_open_pt_seq
			,pt.fap_open_pt_title as fap_open_pt_title
			,apply.fap_open_pt_apply_seq as fap_open_pt_apply_seq
			,apply.fap_open_pt_apply_gb as fap_open_pt_apply_gb
			,DATE_FORMAT(apply.fap_open_pt_apply_ins_dt, '%Y-%m-%d') as fap_open_pt_apply_ins_dt
			,resume.fap_resume_seq as fap_resume_seq
			,resume.fap_open_pt_resume_gb as fap_open_pt_resume_gb
		from
			fap_open_pt_tb pt
		join
			fap_open_pt_apply_tb apply
		on
			pt.fap_open_pt_seq = apply.fap_open_pt_seq
		join
			fap_open_pt_resume_tb resume
		on
			apply.fap_open_pt_apply_seq = resume.fap_open_pt_apply_seq
		where
			pt.fap_open_pt_gb = 'D1001'
		and
			apply.user_id = #{user_id}
		order by
			apply.fap_open_pt_apply_ins_dt desc
	</select>
	<!-- FAP 오픈잡페어 구직자교육 개인 참가 신청 리스트 조회 종료 -->
	
	<!-- FAP 오픈잡페어 구직자교육 참가자 이력서 리스트 조회 시작 -->
	<select id="user_open_edu_resume_list_select" resultType="ResumeForm" parameterType="string">
		select
			fap_resume_seq
			,user_id
			,fap_resume_title
		from
			fap_resume_tb
		where
			user_id = #{user_id}
	</select>
	<!-- FAP 오픈잡페어 구직자교육 참가자 이력서 리스트 조회 종료 -->
	
	<!-- FAP 노출 팝업 조회 시작 -->
	<select id="user_popup_check" resultType="FAPPopup">
		SELECT 
			fap_popup_seq
			,fap_popup_title
			,fap_popup_ct
			,fap_popup_img_origin
			,fap_popup_img_saved
			,fap_popup_gb
			,fap_popup_st
			,fap_popup_link
			,fap_popup_ins_id
			,DATE_FORMAT(fap_popup_ins_dt, '%Y-%m-%d') as fap_popup_ins_dt
			,fap_popup_udt_id
			,DATE_FORMAT(fap_popup_udt_dt, '%Y-%m-%d') as fap_popup_udt_dt
		FROM 
			fap_popup_tb
		where
			fap_popup_st = 'D1600'
	</select>
	<!-- FAP 노출 팝업 조회 종료 -->
	
	<!-- FAP 오픈잡페어 지원자 메인페이지 기업배너 리스트 조회 시작 2019. 07. 17. 김경아 -->
	<resultMap type="hashmap" id="bannerListMap">  
		<id property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq"/>		
		<result property="fap_jobfair_seq" column="fap_jobfair_seq"/>
		<collection property="adList" javaType="java.util.ArrayList" resultMap="adListMap"/>
	</resultMap>
	<resultMap type="hashmap" id="adListMap">
	    <id property="fap_job_ad_seq" column="fap_job_ad_seq"/>		 
		<result property="fap_comp_id" column="fap_comp_id"/>		 
		<result property="fap_comp_ja_nm" column="fap_comp_ja_nm"/>		
		<result property="fap_comp_log_origin" column="fap_comp_log_origin"/>
		<result property="fap_comp_log_saved" column="fap_comp_log_saved"/>
		<collection property="workPlaceList" javaType="java.util.ArrayList" resultMap="workPlaceListMap"/>	
	</resultMap>
	<resultMap type="hashmap" id="workPlaceListMap">
		<id property="fap_job_workplace_gb" column="fap_job_workplace_gb"/>
	</resultMap>	
	<select id="select_banner_list" parameterType="hashmap" resultMap="bannerListMap">
		  select
					, ad.fap_jobfair_seq                  
				    , ad.fap_jobfair_divide_seq         
					  ad.fap_job_ad_seq                   
					<if test="${comp.fap_log_using =='B3200'}">
					, comp.fap_comp_log_origin     
					, comp.fap_comp_log_saved
					</if>
					, comp.fap_comp_id                     
					, comp.fap_comp_ja_nm
					, work.fap_job_workplace_gb					 
			from
					 fap_job_ad_tb ad
			inner	join
					 fap_company_user_tb comp
				 on
					 ad.fap_comp_id = comp.fap_comp_id
			 inner join
			  		 fap_job_workplace_tb work
				on
					 work.fap_job_ad_seq = ad.fap_job_ad_seq
			where
			         ad.fap_jobfair_seq = #{ad.fap_jobfair_seq}
			   and	 
					 ad.fap_jobfair_divide_seq = #{ad.fap_jobfair_divide_seq}
			   and
					 ad.fap_job_ad_seq = #{ad.fap_job_ad_seq}
	</select>
	 
	<!-- FAP 오픈잡페어 지원자 메인페이지 기업배너 리스트 조회 종료 -->
	
	
	<!--FAP 게시판 이름 조회 시작-->
	<select id="select_user_board_nm" parameterType="String" resultType="String">
	 	select
	 		board_nm
		from
			com_board_group_tb
	    where
		    board_detail_gb = #{board_detail_gb}
	</select>
	<!-- FAP 게시판 이름 조회 종료-->
	
	<!-- FAP 세부 잡페어 구분 조회 시작 -->
	<select id="select_jobfair_divide_gb" parameterType="int" resultType="String">
		select
			fap_jobfair_divide_gb
		from
			fap_jobfair_divide_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	</select>
	<!-- FAP 세부 잡페어 구분 조회 종료 -->
		
	<!-- FAP 메인페이지 기업컨텐츠 정보 조회 시작 -->
	<resultMap type="hashmap" id="fap_mainpage_ct">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_mainpage_ct_top" column="fap_mainpage_ct_top" />
		<result property="fap_mainpage_ct_quarter" column="fap_mainpage_ct_quarter" />
		<result property="fap_job_ad_recruit_num" column="fap_job_ad_recruit_num" />
		<result property="fap_comp_log_saved" column="fap_comp_log_saved" />
		<result property="fap_comp_log_origin" column="fap_comp_log_origin" />
		<result property="fap_comp_id" column="fap_comp_id" />
		<result property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_title" column="fap_jobfair_title" />
		
		<collection property="fap_job_work" javaType="java.util.ArrayList" resultMap="fap_job_work" />
		<collection property="fap_job_cate" javaType="java.util.ArrayList" resultMap="fap_job_cate" />
	</resultMap>
	<resultMap type="hashmap" id="fap_job_work">
		<id property="fap_job_workplace_seq" column="fap_job_workplace_seq"/>
		<result property="fap_job_workplace_gb" column="fap_job_workplace_gb"/>
	</resultMap>
	<resultMap type="hashmap" id="fap_job_cate">
		<id property="fap_job_category_seq" column="fap_job_category_seq"/>
		<result property="fap_job_category_gb" column="fap_job_category_gb"/>
		<result property="fap_job_category_etc_dtl" column="fap_job_category_etc_dtl"/>
	</resultMap>
	<select id="select_mainpage_context" parameterType="hashmap" resultMap="fap_mainpage_ct">
		select
			 <if test="locale == 'ko'">
				main.fap_mainpage_ct_top_ko as fap_mainpage_ct_top
			    ,main.fap_mainpage_ct_quarter_ko as fap_mainpage_ct_quarter
			</if>
			<if test="locale == 'ja'">
				main.fap_mainpage_ct_top_ja as fap_mainpage_ct_top
				,main.fap_mainpage_ct_quarter_ja as fap_mainpage_ct_quarter
			</if> 
			,ad.fap_job_ad_recruit_num as fap_job_ad_recruit_num
		    ,ad.fap_job_ad_seq as fap_job_ad_seq
		    ,ad.fap_comp_id as fap_comp_id
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,jobfair.fap_jobfair_title as fap_jobfair_title
		    ,ad.fap_job_ad_groupcode as fap_job_ad_groupcode
		    ,comp.fap_comp_log_saved as fap_comp_log_saved
		    ,comp.fap_comp_log_origin as fap_comp_log_origin
		    ,cate.fap_job_category_seq as fap_job_category_seq
		    ,cate.fap_job_category_gb as fap_job_category_gb
		    ,cate_etc.fap_job_category_etc_dtl as fap_job_category_etc_dtl
		    ,wp.fap_job_workplace_seq as fap_job_workplace_seq
		    ,wp.fap_job_workplace_gb as fap_job_workplace_gb
		from
			fap_mainpage_ct_tb main
		inner join
			fap_job_ad_tb ad
		on
			main.fap_jobfair_divide_seq = ad.fap_jobfair_divide_seq
		inner join
			fap_jobfair_tb jobfair
		on
			ad.fap_jobfair_seq = jobfair.fap_jobfair_seq
		inner join
			fap_job_category_tb cate
		on
			ad.fap_job_ad_seq = cate.fap_job_ad_seq
		left outer join
			fap_job_category_etc_tb cate_etc
		on
			cate.fap_job_category_seq = cate_etc.fap_job_category_seq
		inner join
			fap_job_workplace_tb wp
		on
			ad.fap_job_ad_seq = wp.fap_job_ad_seq
		inner join
			fap_company_user_tb comp
		on
			ad.fap_comp_id = comp.fap_comp_id
		where
			ad.fap_job_ad_state in ('C2101','C2102')
		 <if test="isIT!=null and isIT !=''">		
			<if test="isIT == 'yes'">
			  and 
			  	cate.fap_job_category_gb in ('C3700', 'C3701', 'C3702', 'C3703')
			</if>	
			<if test="isIT == 'no'">
			  and 
			  	cate.fap_job_category_gb in ('C3704', 'C3705','C3706', 'C3707', 'C3708', 'C3709', 'C3710')
			</if>
		</if>
		order by
			ad.fap_job_ad_rank is null asc , ad.fap_job_ad_rank asc, field(ad.fap_job_ad_groupcode,main.fap_mainpage_ct_imp_code) desc , ad.fap_comp_id
			
	</select>
	<!-- FAP 메인페이지 기업컨텐츠 정보 조회 종료 -->
	
	<!-- 잡페어 참가 및 승인 여부 확인 시작 -->
	<select id="check_jobfair_join" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			fap_jobfair_apply_tb
		where
			user_id = #{user_id}
		and
			fap_jobfair_seq = #{fap_jobfair_seq}
		and
			fap_jobfair_user_per = 'C1001'
	</select>
	<!-- 잡페어 참가 및 승인 여부 확인 종료 -->
	
	<!-- 회원 지원하기(보증보험) 동의 여부 확인 시작 -->
	<select id="check_user_apply_confirm" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			fap_user_apply_agreement_tb
		where
			user_id = #{user_id}
		and
			fap_jobfair_seq = #{fap_jobfair_seq}
		and
			fap_user_apply_agree_gb = 'B4300'
	</select>
	<!-- 회원 지원하기(보증보험) 동의 여부 확인 종료 -->
	
	<!-- 회원 지원하기(보증보험) 동의 여부 등록 시작 -->
	<insert id="insert_user_apply_confirm" parameterType="hashmap">
		insert into
			fap_user_apply_agreement_tb
			(
				fap_jobfair_seq
				,user_id
				,fap_user_apply_agree_gb
				,fap_user_apply_agree_ins_id
				,fap_user_apply_agree_ins_dt
			) values (
				#{fap_jobfair_seq}
				,#{user_id}
				,'B4300'
				,#{user_id}
				,now()
			)		
	</insert>
	<!-- 회원 지원하기(보증보험) 동의 여부 등록 종료 -->
	
	<!-- 회원 도쿄페어 일정 확인 시작 -->
	<resultMap type="hashmap" id="tokyoScreenUserMap">
		<id property="fap_jobfair_set_seq" column="fap_jobfair_set_seq"/>
		<result property="fap_jobfair_set_nm" column="fap_jobfair_set_nm"/>
		<result property="fap_jobfair_set_addr" column="fap_jobfair_set_addr"/>
		<collection property="tokyoScheduleUserList" javaType="java.util.ArrayList" resultMap="tokyoScheduleUserMap" />
	</resultMap>
	<resultMap type="hashmap" id="tokyoScheduleUserMap">
		<id property="fap_tokyofair_schedule_seq" column="fap_tokyofair_schedule_seq"/>
		<result property="fap_tokyofair_screening_gb" column="fap_tokyofair_screening_gb"/>		
		<result property="fap_tokyofair_screening_nm" column="fap_tokyofair_screening_nm"/>		
		<result property="fap_tokyofair_screening_user_num" column="fap_tokyofair_screening_user_num"/>		
		<result property="fap_tokyofair_date_dt" column="fap_tokyofair_date_dt"/>		
		<result property="fap_tokyofair_date_room_num" column="fap_tokyofair_date_room_num"/>
		<result property="fap_tokyofair_member_st" column="fap_tokyofair_member_st"/>
		<result property="fap_tokyofair_member_et" column="fap_tokyofair_member_et"/>
		<result property="fap_tokyofair_screening_user_req" column="fap_tokyofair_screening_user_req"/>
		<result property="fap_job_ad_title" column="fap_job_ad_title"/>
		<result property="fap_comp_en_nm" column="fap_comp_en_nm"/>
		<result property="fap_comp_ja_nm" column="fap_comp_ja_nm"/>
	</resultMap>
	<select id="tokyofair_schedule_user_list" parameterType="hashmap" resultMap="tokyoScreenUserMap">
		select
			jobfair.fap_jobfair_set_seq as fap_jobfair_set_seq
		    ,jobfair.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,jobfair.fap_jobfair_set_nm as fap_jobfair_set_nm
		    ,jobfair.fap_jobfair_set_addr as fap_jobfair_set_addr
		    ,tokyoDate.fap_tokyofair_date_seq as fap_tokyofair_date_seq
		    ,DATE_FORMAT(tokyoDate.fap_tokyofair_date_dt, '%Y-%m-%d') as fap_tokyofair_date_dt
		    ,tokyoDate.fap_tokyofair_date_room_num as fap_tokyofair_date_room_num
		    ,tokyoSch.fap_tokyofair_schedule_seq as fap_tokyofair_schedule_seq
		    ,tokyoSch.fap_job_ad_seq as fap_job_ad_seq
		    ,job_ad.fap_job_ad_title as fap_job_ad_title
		    ,company.fap_comp_en_nm as fap_comp_en_nm
		    ,company.fap_comp_ja_nm as fap_comp_ja_nm
		    ,tokyoMember.fap_tokyofair_member_seq as fap_tokyofair_member_seq
		    ,tokyoMember.fap_tokyofair_member_st as fap_tokyofair_member_st
		    ,tokyoMember.fap_tokyofair_member_et as fap_tokyofair_member_et
		    ,tokyoScreen.fap_tokyofair_screening_seq as fap_tokyofair_screening_seq
		    ,tokyoScreen.fap_tokyofair_screening_gb as fap_tokyofair_screening_gb
		    ,tokyoScreen.fap_tokyofair_screening_user_num as fap_tokyofair_screening_user_num
		    ,tokyoScreen.fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
		    ,tokyoScreen.fap_tokyofair_screening_user_req as fap_tokyofair_screening_user_req
		from
			fap_jobfair_set_tb jobfair
		inner join
			fap_tokyofair_date_tb tokyoDate
		on
			jobfair.fap_jobfair_set_seq = tokyoDate.fap_jobfair_set_seq
		inner join
			fap_tokyofair_schedule_tb tokyoSch
		on
			tokyoDate.fap_tokyofair_date_seq = tokyoSch.fap_tokyofair_date_seq
		inner join
			fap_tokyofair_member_tb tokyoMember
		on
			tokyoSch.fap_tokyofair_schedule_seq = tokyoMember.fap_tokyofair_schedule_seq
		inner join
			fap_tokyofair_screening_tb tokyoScreen
		on
			tokyoSch.fap_tokyofair_screening_seq = tokyoScreen.fap_tokyofair_screening_seq
		inner join
			fap_job_ad_tb job_ad
		on
			tokyoSch.fap_job_ad_seq = job_ad.fap_job_ad_seq
		inner join
			fap_company_user_tb company
		on
			job_ad.fap_comp_id = company.fap_comp_id
		where
			tokyoMember.fap_tokyofair_member_id = #{user_id}
		and
			jobfair.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		order by
			fap_tokyofair_date_dt , fap_tokyofair_member_st , fap_tokyofair_date_room_num
	</select>
	<!-- 회원 도쿄페어 일정 확인 종료 -->
	
	<!-- 페어 지원 과정/기수 정보 확인  시작 -->
	<select id="selectFapOpened" parameterType="hashmap" resultType="hashmap">
	select
		*
	from
		fap_score_opened_tb
	where
		fap_jobfair_seq = #{fap_jobfair_seq}
	</select>
	<!-- 페어 지원 과정/기수 정보 확인  시작 -->
	
	<select id="selectScoreList" parameterType="hashmap" resultType="hashmap">
		select 
			frn.FAP_RESUME_LANG_GB, frn.FAP_RESUME_NM, frn.FAP_RESUME_NM_INS_ID
		from 
			fap_resume_name_tb frn,
			(select 
				d.FAP_RESUME_SEQ, d.USER_ID
			from
   				fap_jobfair_tb a,
   				fap_job_ad_tb b,
   				fap_job_apply_info_tb c,
   				fap_resume_tb d,
   				fap_score_opened_tb e,
   				cb_learn_app f
			where
   				b.FAP_JOB_AD_SEQ = c.FAP_JOB_AD_SEQ
   				and c.FAP_RESUME_SEQ = d.FAP_RESUME_SEQ
   				and b.fap_job_ad_seq = c.FAP_JOB_AD_SEQ
   				and a.FAP_JOBFAIR_SEQ = #{fap_jobfair_seq}
   				and c.FAP_JOB_AD_SEQ = #{fap_job_ad_seq}
   				and e.CB_COURSE_SEQ = f.COURSE_ID
   				and e.CB_CARDINAL_SEQ = f.CARDINAL_ID
   				and a.FAP_JOBFAIR_SEQ = e.FAP_JOBFAIR_SEQ
   				and c.USER_ID = f.USER_ID) fap_resume
   		where
			fap_resume.FAP_RESUME_SEQ = frn.FAP_RESUME_SEQ
    		and
    		(frn.FAP_RESUME_LANG_GB = 'B3101' or frn.FAP_RESUME_LANG_GB = 'B3103')
		order by fap_resume_lang_gb desc    	
	</select>
	
	<!-- 미국인턴십 지원 시작-->
	<insert id="internship_apply" parameterType="hashmap">
		insert into fap_internship_apply_tb (
			board_content_seq
			,user_id
			,user_nm
			,user_phone
			,user_email
		)
		values (
			#{board_content_seq}
			,#{user_id}
			,#{user_nm}
			,#{user_phone}
			,#{user_email}
		)
	</insert>
	<!-- 미국인턴십 지원 종료-->
	
	<!-- 미국인턴십 지원여부 조회 시작-->
	<select id="select_internship" parameterType="hashmap" resultType="hashmap">
		select
			internship_seq
			,board_content_seq
			,user_id
			,user_nm
			,user_phone
			,user_email
			,internship_apply_dt
		from
			fap_internship_apply_tb
		where
			1=1
		<if test="board_content_seq != null">
			and
			board_content_seq = #{board_content_seq}
		</if>
		<if test="user_id != null and user_id != ''">
			and
			user_id = #{user_id}
		</if>
	</select>
	<!-- 미국인턴십 지원여부 조회 종료-->
	
	<!-- 미국인턴십 지원 취소 시작-->
	<delete id="internship_cancel" parameterType="hashmap">
		delete from fap_internship_apply_tb
		where 
		internship_seq = #{internship_seq}
	</delete>
	<!-- 미국인턴십 지원 취소 종료-->
</mapper>