<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SEGroup 통합잡페어 기업 SQL -->
<mapper namespace="global.segroup.society.fap.company.dao.SocietyFapCompanyMapper">
	
	
	<!-- 회원 아이디 중복 체크  시작; 2018. 12. 11. 김준영-->
	<select id="user_id_check" parameterType="String" resultType="String">
		select
			user_id
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 회원 아이디 중복 체크  종료 -->
	
	<!-- 회원 공통 등록 시작; 2018. 12. 11. 김준영 -->
	<insert id="insert_com_user" parameterType="User">
		insert into
			com_user_tb
			(
				user_id
				, user_pw
				, user_nm
				, user_phone
				, user_email
				, user_birth
				, user_sex
				, user_flag
				, user_state
				, user_ins_id
				, user_ins_dt
				, user_udt_id
				, user_udt_dt
				, user_terms_ck
			) values (
				#{user_id}
				, #{user_pw}
				, #{user_nm}
				, #{user_phone}
				, #{user_email}
				, '2999-12-31'
				, 'A0000'
				, #{user_flag}
				, #{user_state}
				, #{user_id}
				, #{user_ins_dt}
				, #{user_id}
				, #{user_udt_dt}
				, #{user_terms_ck}
			)
	</insert>
	<!-- 회원 공통 등록 종료 -->
	
	<!-- 회사 회원 등록 시작; 2018. 12. 11. 김준영 -->
	<insert id="insert_company" parameterType="SocietyFapCompanyUser">
		insert into
			fap_company_user_tb
			(
				fap_comp_id
				, fap_comp_en_nm
				, fap_comp_ja_nm
				, fap_comp_business_num
				, fap_comp_rep
				, fap_comp_major_bussiness
				, fap_comp_homepage
				, fap_comp_postcode
				, fap_comp_address
				, fap_comp_address_detail
				, fap_comp_est_dt
				, fap_comp_stock
				, fap_comp_3years_avg_sales
				, fap_comp_employee_num
				, fap_comp_scit_num
				, fap_comp_korean_num
				, fap_comp_foreigner_num
				, fap_comp_ins_id
				, fap_comp_ins_dt
				, fap_comp_udt_id
				, fap_comp_udt_dt
				, fap_comp_log_saved
				, fap_comp_log_origin
				, fap_comp_log_using
			) values (
				#{fap_comp_id}
				, #{fap_comp_en_nm}
				, #{fap_comp_ja_nm}
				, #{fap_comp_business_num}
				, #{fap_comp_rep}
				, #{fap_comp_major_bussiness}
				, #{fap_comp_homepage}
				, #{fap_comp_postcode}
				, #{fap_comp_address}
				, #{fap_comp_address_detail}
				, #{fap_comp_est_dt}
				, #{fap_comp_stock}
				, #{fap_comp_3years_avg_sales}
				, #{fap_comp_employee_num}
				, #{fap_comp_scit_num}
				, #{fap_comp_korean_num}
				, #{fap_comp_foreigner_num}
				, #{fap_comp_id}
				, #{fap_comp_ins_dt}
				, #{fap_comp_id}
				, #{fap_comp_udt_dt}
				, #{fap_comp_log_saved}
				, #{fap_comp_log_origin}
				, #{fap_comp_log_using}
			)
	</insert>
	<!-- 회사 회원 등록 종료 -->
	
	<!-- 회사-담당자 연결 등록 시작; 2018. 12. 12. 김준영 -->
	<insert id="comp_user_connect" parameterType="SocietyFapCompanyUserConnect">
		insert into
			fap_comp_user_connect_tb
			(
				user_id
				, fap_comp_id
				, fap_comp_user_connect_ck
			) values (
				#{user_id}
				, #{fap_comp_id}
				, #{fap_comp_user_connect_ck}
			)
	</insert>
	<!-- 회사-담당자 연결 등록 종료 -->
	
	<!-- 회사 로고 정보 가져오기 시작 2019.03.11 이종호 -->
	<select id="select_company_log" resultType="SocietyFapCompanyUser" parameterType="String">
		select
			fap_comp_id
			,fap_comp_log_saved
			, fap_comp_log_origin
		from
			fap_company_user_tb
		where
			fap_comp_id = #{fap_comp_id}
	</select>
	<!-- 회사 로고 정보 가져오기 종료 -->
	
	<!-- 회사 정보 가져오기 시작; 2018. 12. 13. 김준영 -->
	<select id="select_company" resultType="SocietyFapCompanyUser" parameterType="String">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id = (select
								fap_comp_id
						   from
							 	fap_comp_user_connect_tb
						   where
						   	 	user_id = #{user_id}
						   )
	</select>
	<!-- 회사 정보 가져오기 종료 -->
	
	<!-- 회사 정보 수정 시작; 2018. 12. 13. 김준영 -->
	<update id="update_company" parameterType="SocietyFapCompanyUser">
		update
			fap_company_user_tb
		set
			fap_comp_en_nm = #{fap_comp_en_nm}
			, fap_comp_ja_nm = #{fap_comp_ja_nm}
			, fap_comp_business_num = #{fap_comp_business_num}
			, fap_comp_rep = #{fap_comp_rep}
			, fap_comp_major_bussiness = #{fap_comp_major_bussiness}
			, fap_comp_homepage = #{fap_comp_homepage}
			, fap_comp_postcode = #{fap_comp_postcode}
			, fap_comp_address = #{fap_comp_address}
			, fap_comp_address_detail = #{fap_comp_address_detail}
			, fap_comp_est_dt = #{fap_comp_est_dt}
			, fap_comp_stock = #{fap_comp_stock}
			, fap_comp_3years_avg_sales = #{fap_comp_3years_avg_sales}
			, fap_comp_employee_num = #{fap_comp_employee_num}
			, fap_comp_scit_num = #{fap_comp_scit_num}
			, fap_comp_korean_num = #{fap_comp_korean_num}
			, fap_comp_foreigner_num = #{fap_comp_foreigner_num}
			, fap_comp_udt_id = #{fap_comp_udt_id}
			, fap_comp_udt_dt = #{fap_comp_udt_dt}
			<if test="fap_comp_log_saved != null">
				, fap_comp_log_saved = #{fap_comp_log_saved}
			</if>
			<if test="fap_comp_log_origin != null">
				, fap_comp_log_origin = #{fap_comp_log_origin}
			</if>
			, fap_comp_log_using = #{fap_comp_log_using}
		where
			fap_comp_id = #{fap_comp_id}
	</update>
	<!-- 회사 정보 수정 종료 -->
	
	<!-- 회사 담당자 정보 가져오기 시작; 2018. 12. 17. 김준영 -->
	<select id="select_user" parameterType="String" resultType="User">
		select
			user_id
			, user_pw
			, user_nm
			, user_phone
			, user_email
			, user_birth
			, user_sex
			, user_flag
			, user_state
			, user_ins_id
			, user_ins_dt
			, user_udt_id
			, user_udt_dt
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	<!-- 회사 담당자 정보 가져오기 종료 -->
	
	<!-- FAP 공통 회원 정보 수정 시작; 2018. 12. 17. 김준영 -->
	<update id="update_user" parameterType="User">
		update
			com_user_tb
		set
			user_nm = #{user_nm}
			<if test="user_pw != ''">
				, user_pw = #{user_pw}			
			</if>
			, user_phone = #{user_phone}
			, user_email = #{user_email}
			, user_flag = #{user_flag}
			, user_state = #{user_state}
			, user_udt_id = #{user_udt_id}
			, user_udt_dt = #{user_udt_dt}
		where
			user_id = #{user_id}
	</update>
	<!-- FAP 공통 회원 정보 수정 종료 -->

	<!-- 노출된 잡페어 정보 리스트 검색 시작; 2018. 12. 24. 신동철 -->
	<resultMap type="hashmap" id="fapJobfairMap">
		<id property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<collection property="fapJobfairList" javaType="java.util.ArrayList" resultMap="fapJobfair" />
		<collection property="fapJobfairLoList" javaType="java.util.ArrayList" resultMap="fapJobfairLo" />
	</resultMap>	
	<resultMap type="hashmap" id="fapJobfair">
		<id property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_jobfair_title" column="fap_jobfair_title" />
		<result property="fap_jobfair_st" column="fap_jobfair_st" />
		<result property="fap_jobfair_et" column="fap_jobfair_et" />
		<result property="fap_jobfair_log_saved" column="fap_jobfair_log_saved" />
		<result property="fap_jobfair_log_origin" column="fap_jobfair_log_origin" />
		<result property="fap_jobfair_eps" column="fap_jobfair_eps" />
	</resultMap>	
	<resultMap type="hashmap" id="fapJobfairLo">
		<id property="fap_jobfair_lo_seq" column="fap_jobfair_lo_seq" />
		<result property="fap_jobfair_lo" column="fap_jobfair_lo" />
	</resultMap>	
	
	<select id="jobfair_search_list" resultMap="fapJobfairMap">
		select
			jobfair.fap_jobfair_seq as fap_jobfair_seq
		    ,jobfair.fap_jobfair_title as fap_jobfair_title
		    ,DATE_FORMAT(jobfair.fap_jobfair_st, '%Y-%m-%d') as fap_jobfair_st
		    ,DATE_FORMAT(jobfair.fap_jobfair_et, '%Y-%m-%d') as fap_jobfair_et
		    ,jobfair.fap_jobfair_log_saved as fap_jobfair_log_saved
		    ,jobfair.fap_jobfair_log_origin as fap_jobfair_log_origin
		    ,jobfair.fap_jobfair_eps as fap_jobfair_eps
		    ,jobfair_lo.fap_jobfair_lo as fap_jobfair_lo
		from
			fap_jobfair_tb jobfair
			left join fap_jobfair_lo_tb jobfair_lo
				on jobfair.fap_jobfair_seq = jobfair_lo.fap_jobfair_seq
		where
			jobfair.fap_jobfair_eps = 'C1201'
		order by
			jobfair.fap_jobfair_ins_dt desc
	</select>
	<!-- 노출된 잡페어 정보 리스트 검색 종료-->

	<!-- 선택한 잡페어 세부정보 검색 시작; 2018. 12. 24. 신동철 -->
	<select id="jobfair_divide_search_list" parameterType="int" resultType="hashmap">
		select
			jobfair.fap_jobfair_seq as fap_jobfair_seq
		    ,jobfair.fap_jobfair_title as fap_jobfair_title
		    ,jobfair.fap_jobfair_log_saved as fap_jobfair_log_saved
		    ,jobfair.fap_jobfair_log_origin as fap_jobfair_log_origin
		    ,jobfair_divide.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,jobfair_divide.fap_jobfair_divide_gb as fap_jobfair_divide_gb
		    ,jobfair_divide.fap_jobfair_divide_detail as fap_jobfair_divide_detail
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_st, '%Y-%m-%d') as fap_jobfair_divide_st
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_et, '%Y-%m-%d') as fap_jobfair_divide_et
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_app_st, '%Y-%m-%d') as fap_jobfair_divide_app_st
		    ,DATE_FORMAT(jobfair_divide.fap_jobfair_divide_app_et, '%Y-%m-%d') as fap_jobfair_divide_app_et
		from
			fap_jobfair_tb jobfair
			left join fap_jobfair_divide_tb jobfair_divide
				on jobfair.fap_jobfair_seq = jobfair_divide.fap_jobfair_seq
		where
			jobfair_divide.fap_jobfair_divide_gb_eps = 'C1301'
			and jobfair.fap_jobfair_seq = #{fap_jobfair_seq}
		order by
			jobfair.fap_jobfair_ins_dt desc
	</select>
	<!-- 선택한 잡페어 세부정보 검색 종료-->

	<!-- 회사 잡페어 참가 등록 시작 2018.12.24. 신동철 -->
	<insert id="company_jobfair_divide_participation" parameterType="hashmap">
		insert into
			fap_jobfair_comp_tb
			(
				fap_jobfair_divide_seq
				, fap_jobfair_seq
				, fap_comp_id
			) values (
				#{fap_jobfair_divide_seq}
				, #{fap_jobfair_seq}
				, #{fap_comp_id}
			)
	</insert>
	<!-- 회사 잡페어 참가 등록 종료 -->
	
	<!-- 회사잡페어 등록정보 검색 시작 2018.12.26. 신동철 -->
	<select id="select_company_jobfair_participation" parameterType="hashmap" resultType="hashmap">
		select
			fap_jobfair_divide_seq as fap_jobfair_divide_seq
		from
			fap_jobfair_comp_tb
		where
			fap_jobfair_seq = #{fap_jobfair_seq}
			and fap_comp_id = #{fap_comp_id}	
	</select>	
	<!-- 회사잡페어 등록정보 검색 종료 -->
	
	<!-- 회사 아이디 발급 여부 검색 시작 2018.12.26. 신동철 -->
	<select id="select_fap_comp_id" parameterType="String" resultType="String">
		select
			fap_comp_id
		from
			fap_comp_user_connect_tb
		where
			user_id = #{user_id}
			and fap_comp_user_connect_ck = 'B3800'	
	</select>	
	<!-- 회사 아이디 발급 여부 검새 끝 -->
	
	<!-- FAP 기업 담당자 정보 삭제 시작; 2018. 12. 26. 김준영 -->
	<update id="delete_company_user_info" parameterType="HashMap">
        update
           	com_user_tb
        set
            user_id = #{user_delete_id}
            , user_pw = ''
            , user_phone = ''
            , user_email = ''
            , user_birth = now()
            , user_sex = 'A0000'
            , user_state = #{user_state}
            , user_ins_id = #{user_delete_id}
            , user_ins_dt = now()
            , user_udt_id = #{user_delete_id}
            , user_udt_dt = now()
        where
            user_id = #{user_id}
    </update>
	<!-- FAP 기업 담당자 정보 삭제 종료 -->
	
	<!-- FAP 모든 회사 정보 가져오기 시작; 2018. 12. 26. 김준영 -->
	<select id="select_all_company" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		order by
			fap_comp_udt_id desc
	</select>
	<!-- FAP 모든 회사 정보 가져오기 종료 -->
	
	<!-- FAP 기업 - 유저 연결 정보 가져오기 시작; 2018. 12. 26. 김준영 -->
	<select id="select_comp_user_connect" parameterType="String" resultType="SocietyFapCompanyUserConnect">
		select
			fap_comp_user_connect_seq
			, user_id
			, fap_comp_id
			, fap_comp_user_connect_ck
		from
			fap_comp_user_connect_tb
		where
			user_id = #{user_id}
	</select>
	<!-- FAP 기업 - 유저 연결 정보 가져오기 종료 -->
	
	<!-- FAP 기업 - 유저 연결 요청 시작; 2018. 12. 27. 김준영 -->
	<insert id="">
	
	</insert>
	<!-- FAP 기업 - 유저 연결 요청 종료 -->
	
	<!-- FAP 기업 - 유저 연결 정보 삭제 삭제 시작(일련번호); 2018. 12. 27. 김준영 -->
	<delete id="delete_comp_user_connect" parameterType="int">
		delete
		from
			fap_comp_user_connect_tb
		where
			fap_comp_user_connect_seq = #{fap_comp_user_connect_seq}
	</delete>
	<!-- FAP 기업 - 유저 연결 정보 삭제 삭제 종료 -->
	
	<!-- FAP 기업 - 유저 연결 정보 삭제 삭제 종료 -->
	
	<!-- FAP 기업에게 연결을 요청한 에이전시 정보 가져오기 시작; 2019. 1. 2. 김준영 -->
	<select id="select_connect_request" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb
		where
			fap_comp_id in (select
						   		fap_ag_id
						    from
								fap_ag_comp_connect_tb
						    where
								fap_comp_id = (select
													fap_comp_id
											   from
													fap_comp_user_connect_tb
											   where
													user_id = #{user_id}
											   )
								and fap_ag_comp_connect_ck = 'B3801'
							)
	</select>
	<!-- FAP 기업에게 연결을 요청한 에이전시 정보 가져오기 종료 -->
	
	<!-- FAP 공통 내정서류 등록 시작; 2019.1.1. 신동철 -->
	<insert id="insert_common_required_doc" parameterType="FAPCommonRequiredDoc">
		insert into
			FAP_COMMON_REQUIRED_DOC_TB
			(
				fap_job_ad_seq
				, fap_comp_id		
				, fap_common_required_doc_title
				, fap_common_required_doc_detail
				, fap_common_required_doc_origin
				, fap_common_required_doc_saved				
				, fap_common_required_doc_ins_id
				, fap_common_required_doc_ins_dt
				, fap_common_required_doc_udt_id
				, fap_common_required_doc_udt_dt				
			) values(
				#{fap_job_ad_seq}		
				, #{fap_comp_id}		
				, #{fap_common_required_doc_title}
				, #{fap_common_required_doc_detail}
				, #{fap_common_required_doc_origin}
				, #{fap_common_required_doc_saved}				
				, #{fap_common_required_doc_ins_id}
				, #{fap_common_required_doc_ins_dt}
				, #{fap_common_required_doc_udt_id}
				, #{fap_common_required_doc_udt_dt}				
			)			
	</insert>
	<!-- FAP 공통 내정서류 등록 종료 -->
	
	<!-- FAP 공통 내정서류 삭제 시작; 2019.1.1. 신동철 -->
	<delete id="delete_common_required_doc" parameterType="FAPCommonRequiredDoc">
		delete
		from
			fap_common_required_doc_tb
		where
			fap_common_required_doc_seq = #{fap_common_required_doc_seq}
	</delete>
	<!-- FAP 공통 내정서류 삭제 종료 -->	
	
	<!-- FAP 공통 내정서류 정보 리스트 검색 시작 2019.1.1. 신동철 -->
	<select id="search_common_required_doc_list" parameterType="hashmap" resultType="FAPCommonRequiredDoc">
		select
			doc.fap_common_required_doc_seq
			, doc.fap_job_ad_seq
			, doc.fap_comp_id
			, doc.fap_common_required_doc_title
			, doc.fap_common_required_doc_detail
			, doc.fap_common_required_doc_origin
			, doc.fap_common_required_doc_saved
			, doc.fap_common_required_doc_ins_id
			, doc.fap_common_required_doc_ins_dt
			, doc.fap_common_required_doc_udt_id
			, doc.fap_common_required_doc_udt_dt
			, ad.fap_jobfair_seq
			, ad.fap_jobfair_divide_seq
		from
			fap_common_required_doc_tb doc
			inner join fap_job_ad_tb ad
				on ad.fap_job_ad_seq = doc.fap_job_ad_seq
		where
			doc.fap_job_ad_seq = #{fap_job_ad_seq}
			and doc.fap_comp_id = #{fap_comp_id}	
	</select>	
	<!-- FAP 공통내정서류 정보 리스트 검색 종료 -->
	
	<!-- FAP 에이전시 연결 요청 처리 시작; 2019. 1. 2. 김준영 -->
	<update id="request_handling" parameterType="hashmap">
		update
			fap_ag_comp_connect_tb
		set
			fap_ag_comp_connect_ck = #{fap_ag_comp_connect_ck}
		where
			fap_ag_id = #{fap_ag_id}
			and fap_comp_id = (select
							   		fap_comp_id
							   from
							   		fap_comp_user_connect_tb
							   where
							   		user_id = #{user_id}
							   )
	</update>
	<!-- FAP 에이전시 연결 요청 처리 종료 -->
	
	<!-- FAP 공통 내정서류 정보검색 시작 2019.1.2. 신동철 -->
	<select id="select_common_required_doc" parameterType="int" resultType="FAPCommonRequiredDoc">
		select
			doc.fap_common_required_doc_seq
			, doc.fap_job_ad_seq
			, doc.fap_comp_id
			, doc.fap_common_required_doc_title
			, doc.fap_common_required_doc_detail
			, doc.fap_common_required_doc_origin
			, doc.fap_common_required_doc_saved
			, doc.fap_common_required_doc_ins_id
			, doc.fap_common_required_doc_ins_dt
			, doc.fap_common_required_doc_udt_id
			, doc.fap_common_required_doc_udt_dt
			, ad.fap_jobfair_seq
			, ad.fap_jobfair_divide_seq
		from
			fap_common_required_doc_tb doc
			inner join fap_job_ad_tb ad
				on ad.fap_job_ad_seq = doc.fap_job_ad_seq
		where
			doc.fap_common_required_doc_seq = #{fap_common_required_doc_seq}
	</select>	
	<!-- FAP 공통 내정서류 정보검색 종료 -->
	
	<!-- FAP 공통 내정서류 수정 시작; 2019. 1. 2. 신동철 -->
	<update id="update_common_required_doc" parameterType="FAPCommonRequiredDoc">
		update
			fap_common_required_doc_tb
		set
			fap_common_required_doc_title = #{fap_common_required_doc_title}
			, fap_common_required_doc_detail = #{fap_common_required_doc_detail}
			<if test="fap_common_required_doc_origin != null and fap_common_required_doc_origin != '' ">
				, fap_common_required_doc_origin = #{fap_common_required_doc_origin}
			</if>
			<if test="fap_common_required_doc_saved != null and fap_common_required_doc_saved != '' ">
				, fap_common_required_doc_saved = #{fap_common_required_doc_saved}
			</if>
			, fap_common_required_doc_udt_id = #{fap_common_required_doc_udt_id}
			, fap_common_required_doc_udt_dt = now()
		where
			 fap_common_required_doc_seq = #{ fap_common_required_doc_seq}
	</update>
	<!-- FAP 공통 내정서류 수정 종료 -->
	
	<!-- FAP 회사가 참가하여 승인받은 채용공고 리스트 검색 시작 2019.1.5. 신동철 -->
	<select id="search_company_job_ad_list" parameterType="JobAd" resultType="JobAd">
		select
			fap_job_ad_seq
			, fap_jobfair_seq
			, fap_jobfair_divide_seq
			, fap_comp_id
			,fap_job_ad_title
		from
			fap_job_ad_tb
		where
			(fap_job_ad_state = 'C2101'
			or fap_job_ad_state = 'C2102')
			and fap_comp_id = #{fap_comp_id}			
			<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0 ">
				and fap_jobfair_seq = #{fap_jobfair_seq}
			</if>
			<if test="fap_jobfair_divide_seq != null and fap_jobfair_divide_seq != 0 ">
				and fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			</if>
		order by 
			fap_job_ad_udt_dt desc
	</select>	
	<!-- FAP 회사가 참가한 채용공고 리스트 검색 종료 -->
			
	<!-- FAP 특정 회사의 내정자 정보 리스트 검색 시작 2019.1.5. 신동철 -->
	<resultMap type="hashmap" id="nomineeMap">
		<id property="fap_nominee_seq" column="fap_nominee_seq"/>
		<result property="fap_nominee_seq" column="fap_nominee_seq" />
		<result property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_resume_seq" column="fap_resume_seq" />
		<result property="fap_comp_id" column="fap_comp_id"/>
		<result property="user_id" column="user_id" />
		<result property="fap_resume_gender" column="fap_resume_gender"/>
		<result property="fap_resume_birth" column="fap_resume_birth" />
		<collection property="nomineeNmList" javaType="java.util.ArrayList" resultMap="nomineeNmMap" />
	</resultMap>
	<resultMap type="hashmap" id="nomineeNmMap">
		<id property="fap_resume_nm_seq" column="fap_resume_nm_seq" />
		<result property="fap_resume_nm" column="fap_resume_nm" />
		<result property="fap_resume_lang_gb" column="fap_resume_lang_gb" />
	</resultMap>		
	
	<select id="search_nominee_info_list" parameterType="hashmap" resultMap="nomineeMap">
		select
			nominee.fap_nominee_seq as fap_nominee_seq
			, nominee.fap_job_ad_seq as fap_job_ad_seq
			, nominee.fap_comp_id as fap_comp_id
			, nominee.user_id as user_id			
			, resume.fap_resume_gender as fap_resume_gender
			, DATE_FORMAT(resume.fap_resume_birth,  '%Y-%m-%d') as  fap_resume_birth
			, resume_nm.fap_resume_nm_seq as fap_resume_nm_seq
			, resume.fap_resume_seq as fap_resume_seq
			, resume_nm.fap_resume_nm as fap_resume_nm
			, resume_nm.fap_resume_lang_gb	as fap_resume_lang_gb
		from
			fap_nominee_tb nominee
			inner join fap_job_apply_info_tb apply_info
				on nominee.fap_comp_id = apply_info.fap_comp_id
				and nominee.fap_job_ad_seq = apply_info.fap_job_ad_seq
				and nominee.user_id = apply_info.user_id
			inner join fap_resume_tb resume
				on resume.user_id = apply_info.user_id
				and resume.fap_resume_seq = apply_info.fap_resume_seq
			left join fap_resume_name_tb resume_nm
				on resume_nm.fap_resume_seq = resume.fap_resume_seq
		where
			nominee.fap_comp_id = #{fap_comp_id}
			and nominee.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>	
	<!-- FAP 특정 회사의 내정자 정보 리스트 검색 종료 -->
	
	<!-- FAP 개인 내정서류 등록 시작; 2019.1.7. 신동철 -->
	<insert id="insert_personal_required_doc" parameterType="FAPPersonalRequiredDoc">
		insert into
			FAP_PERSONAL_REQUIRED_DOC_TB
			(
				fap_nominee_seq
				, fap_personal_required_doc_title		
				, fap_personal_required_doc_detail
				, fap_personal_required_doc_origin
				, fap_personal_required_doc_saved
				, fap_personal_required_doc_uploader_gb				
				, fap_personal_required_doc_ins_id
				, fap_personal_required_doc_ins_dt
				, fap_personal_required_doc_udt_id
				, fap_personal_required_doc_udt_dt				
			) values(
				#{fap_nominee_seq}		
				, #{fap_personal_required_doc_title}		
				, #{fap_personal_required_doc_detail}
				, #{fap_personal_required_doc_origin}
				, #{fap_personal_required_doc_saved}
				, #{fap_personal_required_doc_uploader_gb}				
				, #{fap_personal_required_doc_ins_id}
				, #{fap_personal_required_doc_ins_dt}
				, #{fap_personal_required_doc_udt_id}
				, #{fap_personal_required_doc_udt_dt}				
			)			
	</insert>
	<!-- FAP 개인 내정서류 등록 종료 -->
	
	<!-- 회원 권한 검색 시작; 2019. 1. 7. 신동철-->
	<select id="select_user_flag" parameterType="String" resultType="String">
		select
			user_flag
		from
			com_user_tb
		where
			user_id = #{user_id}
	</select>
	
	<!-- 특정 내정자 정보 검색 시작; 2019. 1. 7. 신동철-->
	<select id="select_nominee_info" parameterType="long" resultType="FAPNominee">
		select
			fap_nominee_seq
			, fap_job_ad_seq
			, fap_jobfair_seq
			, fap_jobfair_divide_seq
			, fap_comp_id
			, user_id
		from
			fap_nominee_tb
		where
			fap_nominee_seq = #{fap_nominee_seq}
	</select>
	
	<!-- 개인 내정서류 리스트 검색 시작; 2019. 1. 7. 신동철-->
	<select id="search_personal_required_doc_list" parameterType="int" resultType="hashmap">
		select
			nominee.fap_nominee_seq as fap_nominee_seq
			, nominee.fap_job_ad_seq as fap_job_ad_seq
			, nominee.fap_comp_id as fap_comp_id
			, nominee.user_id as user_id
			, personal.fap_personal_required_doc_seq as fap_personal_required_doc_seq
			, personal.fap_personal_required_doc_title as fap_personal_required_doc_title
			, personal.fap_personal_required_doc_detail as fap_personal_required_doc_detail
			, personal.fap_personal_required_doc_origin as fap_personal_required_doc_origin
			, personal.fap_personal_required_doc_saved as fap_personal_required_doc_saved
			, personal.fap_personal_required_doc_uploader_gb as fap_personal_required_doc_uploader_gb
		from
			fap_nominee_tb nominee
			inner join fap_personal_required_doc_tb personal
				on nominee.fap_nominee_seq = personal.fap_nominee_seq
		where
			nominee.fap_nominee_seq = #{fap_nominee_seq}
	</select>
	<!-- 개인 내정서류 리스트 검색 종료 -->
	
	<!-- FAP 개인 내정서류 정보검색 시작 2019.1.7. 신동철 -->
	<select id="select_personal_required_doc" parameterType="int" resultType="FAPPersonalRequiredDoc">
		select
			doc.fap_personal_required_doc_seq
			, doc.fap_nominee_seq
			, doc.fap_personal_required_doc_uploader_gb
			, doc.fap_personal_required_doc_title
			, doc.fap_personal_required_doc_detail
			, doc.fap_personal_required_doc_origin
			, doc.fap_personal_required_doc_saved
			, nominee.fap_comp_id
			, nominee.user_id
		from
			fap_personal_required_doc_tb doc
			inner join fap_nominee_tb nominee
				on nominee.fap_nominee_seq = doc.fap_nominee_seq
		where
			doc.fap_personal_required_doc_seq = #{fap_personal_required_doc_seq}
	</select>	
	<!-- FAP 개인 내정서류 정보검색 종료 -->
	
	<!-- FAP 개인 내정서류 수정 시작; 2019. 1. 7. 신동철 -->
	<update id="update_personal_required_doc" parameterType="FAPPersonalRequiredDoc">
		update
			fap_personal_required_doc_tb
		set
			fap_personal_required_doc_title = #{fap_personal_required_doc_title}
			, fap_personal_required_doc_detail = #{fap_personal_required_doc_detail}
			<if test="fap_personal_required_doc_origin != null and fap_personal_required_doc_origin != '' ">
				, fap_personal_required_doc_origin = #{fap_personal_required_doc_origin}
			</if>
			<if test="fap_personal_required_doc_saved != null and fap_personal_required_doc_saved != '' ">
				, fap_personal_required_doc_saved = #{fap_personal_required_doc_saved}
			</if>
			, fap_personal_required_doc_udt_id = #{fap_personal_required_doc_udt_id}
			, fap_personal_required_doc_udt_dt = now()
		where
			 fap_personal_required_doc_seq = #{ fap_personal_required_doc_seq}
	</update>
	<!-- FAP 개인 내정서류 수정 종료 -->
	
	<!-- FAP 개인 내정서류 삭제 시작; 2019.1.1. 신동철 -->
	<delete id="delete_personal_required_doc" parameterType="FAPPersonalRequiredDoc">
		delete
		from
			fap_personal_required_doc_tb
		where
			fap_personal_required_doc_seq = #{fap_personal_required_doc_seq}
	</delete>
	<!-- FAP 개인 내정서류 삭제 종료 -->
	
	<!-- FAP 내정자 정보 검색 시작 2019.1.7. 신동철 -->
	<select id="search_nominee_info" parameterType="FAPNominee" resultType="hashmap">
		select
			nominee.fap_nominee_seq as fap_nominee_seq
			, nominee.fap_job_ad_seq as fap_job_ad_seq
			, nominee.fap_comp_id as fap_comp_id
			, nominee.user_id as user_id			
			, resume.fap_resume_pic_saved as fap_resume_pic_saved
			, resume_nm.fap_resume_nm as fap_resume_nm
		from
			fap_nominee_tb nominee
			inner join fap_job_apply_info_tb apply_info
				on nominee.fap_comp_id = apply_info.fap_comp_id
				and nominee.fap_job_ad_seq = apply_info.fap_job_ad_seq
				and nominee.user_id = apply_info.user_id
			inner join fap_resume_tb resume
				on apply_info.user_id = resume.user_id
				and apply_info.fap_resume_seq = resume.fap_resume_seq
			inner join fap_resume_name_tb resume_nm
				on resume.fap_resume_seq = resume_nm.fap_resume_seq
		where
			nominee.fap_nominee_seq = #{fap_nominee_seq}
			and nominee.fap_comp_id = #{fap_comp_id}
			and nominee.fap_job_ad_seq = #{fap_job_ad_seq}
			and resume_nm.fap_resume_lang_gb = 'B3103'
	</select>	
	<!-- FAP 특정 회사의 내정자 정보 검색 종료 -->
	
	<!-- 현지잡페어 등록한 시간 설정 검색 시작 2019. 1. 11. 이종호 -->
	<resultMap type="hashmap" id="fap_la_job_set_map">
		<id property="fap_la_job_set_seq" column="fap_la_job_set_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_la_job_set_join_dt" column="fap_la_job_set_join_dt"/>
		<result property="fap_la_job_set_itv_dt" column="fap_la_job_set_itv_dt"/>
		<association property="jobfair_set"  resultMap="jobfair_set_result" />
		<collection property="job_plan_list" ofType="LaJobPlan" javaType="java.util.ArrayList" resultMap="job_plan_map" />
	</resultMap>
	<resultMap type="LaJobPlan" id="job_plan_map">
		<id property="fap_la_job_plan_seq" column="fap_la_job_plan_seq" />
		<result property="fap_la_job_plan_dt" column="fap_la_job_plan_dt" />
		<result property="fap_la_job_plan_tm" column="fap_la_job_plan_tm" />
		<result property="fap_la_job_plan_gb" column="fap_la_job_plan_gb" />
	</resultMap>
	<resultMap type="FAPAdminJobfairSet" id="jobfair_set_result">
		<id property="fap_jobfair_set_seq" column="fap_jobfair_set_seq" />
		<result property="fap_jobfair_set_st" column="fap_jobfair_set_st" />
		<result property="fap_jobfair_set_et" column="fap_jobfair_set_et" />
		<result property="fap_jobfair_set_room_st" column="fap_jobfair_set_room_st" />
		<result property="fap_jobfair_set_room_et" column="fap_jobfair_set_room_et" />
	</resultMap>
	
	<select id="algorithm_company_setting_search" parameterType="long" resultMap="fap_la_job_set_map">
		select
			jobset.fap_la_job_set_seq
		    ,jobset.fap_job_ad_seq
		    ,jobset.fap_la_job_set_join_dt
		    ,jobset.fap_la_job_set_itv_dt
		    ,jobplan.fap_la_job_plan_seq
		    ,DATE_FORMAT(jobplan.fap_la_job_plan_dt,'%Y-%m-%d') as fap_la_job_plan_dt
		    ,jobplan.fap_la_job_plan_tm
		    ,jobplan.fap_la_job_plan_gb
		    ,DATE_FORMAT(jobfairset.fap_jobfair_set_st,'%Y-%m-%d') as fap_jobfair_set_st
		    ,DATE_FORMAT(jobfairset.fap_jobfair_set_et,'%Y-%m-%d') as fap_jobfair_set_et
		    ,jobfairset.fap_jobfair_set_room_st
		    ,jobfairset.fap_jobfair_set_room_et
		from
			fap_la_job_set_tb jobset
		    ,fap_la_job_plan_tb jobplan
		    ,fap_job_ad_tb jobad
		    ,fap_jobfair_set_tb jobfairset
		where
			jobset.fap_job_ad_seq = #{fap_job_ad_seq}
		and
			jobset.fap_job_ad_seq = jobplan.fap_job_ad_seq
		and
			jobset.fap_job_ad_seq = jobad.fap_job_ad_seq
		and
			jobad.fap_jobfair_divide_seq = jobfairset.fap_jobfair_divide_seq;
	</select>
	
	<!-- 현지잡페어 등록한 시간 설정 검색 종료 -->
	
	<!-- 현지잡페어 사용중인 설정 상세 검색 시작 2019. 1. 8. 이종호 -->
	
	<resultMap type="hashmap" id="algorithm_setting_map">
		<id property="fap_jobfair_set_seq" column="fap_jobfair_set_seq" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_set_st" column="fap_jobfair_set_st" />
		<result property="fap_jobfair_set_et" column="fap_jobfair_set_et" />
		<result property="fap_jobfair_set_room_st" column="fap_jobfair_set_room_st" />
		<result property="fap_jobfair_set_room_et" column="fap_jobfair_set_room_et" />
		<result property="fap_jobfair_set_room_cnt" column="fap_jobfair_set_room_cnt" />
		<result property="fap_jobfair_set_itv_cnt" column="fap_jobfair_set_itv_cnt" />
		<result property="fap_jobfair_set_itv_stu_dt" column="fap_jobfair_set_itv_stu_dt" />
		<result property="fap_jobfair_set_itv_comp_dt" column="fap_jobfair_set_itv_comp_dt" />
		<result property="fap_jobfair_set_gb" column="fap_jobfair_set_gb" />
		<collection property="setting_time_list" javaType="java.util.ArrayList" resultMap="setTime" />
	</resultMap>
	<resultMap type="hashmap" id="setTime">
		<id property="fap_jobfair_set_time_seq" column="fap_jobfair_set_time_seq" />
		<result property="fap_jobfair_set_time_dt" column="fap_jobfair_set_time_dt" />
		<result property="fap_jobfair_set_time_room_dt" column="fap_jobfair_set_time_room_dt" />
		<result property="fap_jobfair_set_time_room_gb" column="fap_jobfair_set_time_room_gb" />
	</resultMap>
	
	<select id="algorithm_jobfair_setting_use_search" parameterType="hashmap" resultMap="algorithm_setting_map">
		select
			setting.fap_jobfair_set_seq
			,setting.fap_jobfair_divide_seq
			,DATE_FORMAT(setting.fap_jobfair_set_st,'%Y-%m-%d') as fap_jobfair_set_st
			,DATE_FORMAT(setting.fap_jobfair_set_et,'%Y-%m-%d') as fap_jobfair_set_et
			,setting.fap_jobfair_set_room_st
			,setting.fap_jobfair_set_room_et
			,setting.fap_jobfair_set_room_cnt
			,setting.fap_jobfair_set_itv_cnt
			,setting.fap_jobfair_set_itv_stu_dt
			,setting.fap_jobfair_set_itv_comp_dt
			,setting.fap_jobfair_set_gb
			,DATE_FORMAT(settingTime.fap_jobfair_set_time_dt,'%Y-%m-%d') as fap_jobfair_set_time_dt
			,settingTime.fap_jobfair_set_time_room_dt
			,settingTime.fap_jobfair_set_time_room_gb
		from
			fap_jobfair_set_tb setting
		left join fap_jobfair_set_time_tb settingTime
		on
			setting.fap_jobfair_set_seq = settingTime.fap_jobfair_set_seq
		where
			setting.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			setting.fap_jobfair_set_gb = #{fap_jobfair_set_gb}
		order by
			cast(settingTime.fap_jobfair_set_time_room_dt as integer) , settingTime.fap_jobfair_set_time_dt
	</select>
	<!-- 현지잡페어 사용중인 설정 상세 검색 종료 -->
	
	
	<!-- FAP 일반 기업만 가져오기 시작; 2019. 1. 8. 김준영 -->
	
	
	<!-- FAP 일반 기업만 가져오기 종료 -->
	<select id="select_common_company" resultType="SocietyFapCompanyUser">
		select
			fap_comp_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_business_num
			, fap_comp_rep
			, fap_comp_major_bussiness
			, fap_comp_homepage
			, fap_comp_postcode
			, fap_comp_address
			, fap_comp_address_detail
			, fap_comp_est_dt
			, fap_comp_stock
			, fap_comp_3years_avg_sales
			, fap_comp_employee_num
			, fap_comp_scit_num
			, fap_comp_korean_num
			, fap_comp_foreigner_num
			, fap_comp_ins_id
			, fap_comp_ins_dt
			, fap_comp_udt_id
			, fap_comp_udt_dt
			, fap_comp_log_saved
			, fap_comp_log_origin
			, fap_comp_log_using
		from
			fap_company_user_tb as comp_user
		where
			fap_comp_id in (select
						   		fap_comp_id
						   from
						   		fap_comp_user_connect_tb as comp_user_connect
						   where
						   		user_id in (select
						   						user_id
						   				    from
						   				   		com_user_tb
						   				   	where
						   				   		user_flag = 'A0103'
						   				   )
						   )
	</select>
	<!-- FAP 특정 회사의 내정자 정보 검색 종료 -->
	
	<!-- FAP 담당자 - 기업 연결 객체 삭제 시작; 2019. 1. 10. 김준영 -->
	<delete id="user_connect_delete" parameterType="String">
		delete
		from
			fap_comp_user_connect_tb
		where
			user_id = #{user_id}
	</delete>
	<!-- FAP 담당자 - 기업 연결 객체 삭제 종료 -->
	
	<!-- 현지잡페어 설정 등록 시작 2019. 1. 8. 이종호 -->
	<insert id="algorithm_calendar_setting_insert" parameterType="LaJobSet">
		insert into
			fap_la_job_set_tb(
				fap_job_ad_seq
				,fap_la_job_set_join_dt
				,fap_la_job_set_itv_dt
				,fap_la_job_set_ins_id
				,fap_la_job_set_ins_dt
				,fap_la_job_set_udt_id
				,fap_la_job_set_udt_dt
			)values(
				#{fap_job_ad_seq}
				,#{fap_la_job_set_join_dt}
				,#{fap_la_job_set_itv_dt}
				,#{fap_la_job_set_ins_id}
				,now()
				,#{fap_la_job_set_udt_id}
				,now()
			)
	</insert>
	<!-- 현지잡페어 설정 등록 종료 -->
	
	<!-- 현지잡페어 설정 시간 등록 시작 2019. 1. 8. 이종호 -->
	<insert id="algorithm_calendar_setting_insert_plan" parameterType="LaJobPlan">
		insert into
			fap_la_job_plan_tb(
				fap_job_ad_seq
				,fap_la_job_plan_dt
				,fap_la_job_plan_tm
				,fap_la_job_plan_gb
				,fap_la_job_plan_ins_id
				,fap_la_job_plan_ins_dt
				,fap_la_job_plan_udt_id
				,fap_la_job_plan_udt_dt
			)values
			<foreach item ="LaJobPlanSetTime" collection="setTimeList" index="index" open=" " separator="," close=" ">
				(
					#{LaJobPlanSetTime.fap_job_ad_seq}
					,#{LaJobPlanSetTime.fap_la_job_plan_dt}
					,#{LaJobPlanSetTime.fap_la_job_plan_tm}
					,#{LaJobPlanSetTime.fap_la_job_plan_gb}
					,#{LaJobPlanSetTime.fap_la_job_plan_ins_id}
					,now()
					,#{LaJobPlanSetTime.fap_la_job_plan_udt_id}
					,now()
				)
			</foreach>
	</insert>
	<!-- 현지잡페어 설정 시간 등록 종료 -->
	
	<!-- 현지잡페어 설정 수정 시작 2019. 1. 11. 이종호 -->
	<insert id="algorithm_calendar_setting_update" parameterType="LaJobSet">
		update
			fap_la_job_set_tb
		set
			fap_job_ad_seq = #{fap_job_ad_seq}
			,fap_la_job_set_join_dt = #{fap_la_job_set_join_dt}
			,fap_la_job_set_itv_dt = #{fap_la_job_set_itv_dt}
			,fap_la_job_set_udt_id = #{fap_la_job_set_udt_id}
			,fap_la_job_set_udt_dt = now()
		where
			fap_la_job_set_seq = #{fap_la_job_set_seq}
	</insert>
	<!-- 현지잡페어 설정 수정 종료 -->
	
	<!-- 현지잡페어 설정 시간 삭제 시작 2019. 1. 14. 이종호 -->
	<delete id="algorithm_calendar_setting_delete_plan" parameterType="long">
		delete from
			fap_la_job_plan_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>	
	<!-- 현지잡페어 설정 시간 삭제 종료 -->
	
	<!-- 채용공고 -->
	
	<!-- 채용공고 저장 시작 -->
	<!-- 채용공고 기본 정보 입력  12.24. 이재준 -->
	<insert id ="insert_job_ad" parameterType="JobAd" useGeneratedKeys="true" keyProperty="fap_job_ad_seq">
		insert into fap_job_ad_tb(
			fap_job_ad_major_business
			,fap_job_ad_homepage
			,fap_job_ad_est_dt
			,fap_job_ad_stock
			,fap_job_ad_3years_avg_sales
			,fap_job_ad_employee_num
			,fap_job_ad_foreigner_num
			,fap_job_ad_korean_num
			,fap_job_ad_postcode
			,fap_job_ad_address
			,fap_job_ad_address_dtl
			,fap_job_ad_title
			,fap_job_ad_worktime
			,fap_job_ad_overtime
			,fap_job_ad_hire_type
			,fap_job_ad_intern
			,fap_job_ad_recruit_num
			,fap_job_ad_ideal_person
			,fap_job_ad_age
			,fap_job_ad_gender
			,fap_job_ad_isdorm
			,fap_job_ad_promotion
			,fap_job_ad_vacation
			,fap_job_ad_welfare
			,fap_job_ad_open_grade
			,fap_job_ad_qual_dpe
			,fap_job_ad_terms_dpe
			,fap_job_ad_coc_agree
			<if test="fap_job_ad_overlap != null and fap_job_ad_overlap != '' ">
			,fap_job_ad_overlap
			</if>
			,fap_job_ad_ins_id
			,fap_job_ad_ins_dt
			,fap_job_ad_udt_id
			,fap_job_ad_udt_dt
			,fap_comp_id
			,fap_jobfair_divide_seq
			,fap_jobfair_seq
			,fap_jobfair_comp_seq
		<if test="fap_job_ad_state != null and fap_job_ad_state != '' ">
			,fap_job_ad_state
		</if>
			,fap_job_ad_category_type
		)
		values(
			#{fap_job_ad_major_business}
			,#{fap_job_ad_homepage}
			,#{fap_job_ad_est_dt}
			,#{fap_job_ad_stock}
			,#{fap_job_ad_3years_avg_sales}
			,#{fap_job_ad_employee_num}
			,#{fap_job_ad_foreigner_num}
			,#{fap_job_ad_korean_num}
			,#{fap_job_ad_postcode}
			,#{fap_job_ad_address}
			,#{fap_job_ad_address_dtl}
			,#{fap_job_ad_title}
			,#{fap_job_ad_worktime}
			,#{fap_job_ad_overtime}
			,#{fap_job_ad_hire_type}
			,#{fap_job_ad_intern}
			,#{fap_job_ad_recruit_num}
			,#{fap_job_ad_ideal_person}
			,#{fap_job_ad_age}
			,#{fap_job_ad_gender}
			,#{fap_job_ad_isdorm}
			,#{fap_job_ad_promotion}
			,#{fap_job_ad_vacation}
			,#{fap_job_ad_welfare}
			,#{fap_job_ad_open_grade}
			,#{fap_job_ad_qual_dpe}
			,#{fap_job_ad_terms_dpe}
			,#{fap_job_ad_coc_agree}
		    <if test="fap_job_ad_overlap != null and fap_job_ad_overlap != '' ">
			,#{fap_job_ad_overlap}
			</if>
			,#{fap_job_ad_ins_id}
			,now()
			,#{fap_job_ad_udt_id}
			,now()
			,#{fap_comp_id}
			,#{fap_jobfair_divide_seq}
			,#{fap_jobfair_seq}
			,(
				select
					fap_jobfair_comp_seq
				from
					fap_jobfair_comp_tb
				where
					fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
				and
					fap_jobfair_seq = #{fap_jobfair_seq}
				and
					fap_comp_id = #{fap_comp_id}
			)
		<if test="fap_job_ad_state != null and fap_job_ad_state != '' ">
			,#{fap_job_ad_state}
		</if>
			,#{fap_job_ad_category_type}
		)
		
	</insert>
	<!-- 채용공고 기본 정보 입력 종료--> 
	
	<!-- 기숙사 정보 입력 시작  12.26. 이재준 -->
	<insert id ="insert_job_dorm" parameterType="JobDorm">
		insert into fap_job_dorm_tb(
			fap_job_dorm_seq
			,fap_job_dorm_lo
			,fap_job_dorm_cost
			,fap_job_dorm_note
			,fap_job_dorm_ins_id
			,fap_job_dorm_ins_dt
			,fap_job_dorm_udt_id
			,fap_job_dorm_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_dorm_seq}
			,#{fap_job_dorm_lo}
			,#{fap_job_dorm_cost}
			,#{fap_job_dorm_note}
			,#{fap_job_dorm_ins_id}
			,#{fap_job_dorm_ins_dt}
			,#{fap_job_dorm_udt_id}
			,#{fap_job_dorm_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 기숙사 정보 입력 종료  12.26. 이재준 -->
	
	<!-- 계약사원 정보 입력 시작  12.26. 이재준 -->
	<insert id ="insert_job_jit_employee" parameterType="JobJitEmployee">
		insert into fap_job_jit_employee_tb(
			fap_job_jit_employee_seq
			,fap_job_jit_employee_isswitch
			,fap_job_jit_employee_term
			,fap_job_jit_employee_dtl
			,fap_job_jit_employee_ins_id
			,fap_job_jit_employee_ins_dt
			,fap_job_jit_employee_udt_id
			,fap_job_jit_employee_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_jit_employee_seq}
			,#{fap_job_jit_employee_isswitch}
			,#{fap_job_jit_employee_term}
			,#{fap_job_jit_employee_dtl}
			,#{fap_job_jit_employee_ins_id}
			,#{fap_job_jit_employee_ins_dt}
			,#{fap_job_jit_employee_udt_id}
			,#{fap_job_jit_employee_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 기숙사 정보 입력 종료  12.26. 이재준 -->
	
	<!-- 업무에 필요한 일본어 정보 입력 시작  12.26. 이재준 -->
	<insert id ="insert_job_ja_level" parameterType="JobJaLevel">
		insert into fap_job_ja_level_tb(
			fap_job_ja_level_seq
			,fap_job_ja_level_gb
			,fap_job_ja_level_dtl
			,fap_job_ja_level_ins_id
			,fap_job_ja_level_ins_dt
			,fap_job_ja_level_udt_id
			,fap_job_ja_level_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_ja_level_seq}
			,#{fap_job_ja_level_gb}
			,#{fap_job_ja_level_dtl}
			,#{fap_job_ja_level_ins_id}
			,#{fap_job_ja_level_ins_dt}
			,#{fap_job_ja_level_udt_id}
			,#{fap_job_ja_level_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 업무에 필요한 일본어 정보 입력 종료  12.26. 이재준 -->
	
	<!-- 시용기간 정보 입력 시작  12.26. 이재준 -->
	<insert id ="insert_job_trial" parameterType="JobTrial">
		insert into fap_job_trial_tb(
			fap_job_trial_seq
			,fap_job_trial_pd
			,fap_job_trial_pay
			,fap_job_trial_pay_equal
			,fap_job_trial_ins_id
			,fap_job_trial_ins_dt
			,fap_job_trial_udt_id
			,fap_job_trial_udt_dt
			,fap_job_ad_seq
		)
		values(	
			#{fap_job_trial_seq}
			,#{fap_job_trial_pd}
			,#{fap_job_trial_pay}
			,#{fap_job_trial_pay_equal}
			,#{fap_job_trial_ins_id}
			,#{fap_job_trial_ins_dt}
			,#{fap_job_trial_udt_id}
			,#{fap_job_trial_udt_dt}
			,#{fap_job_ad_seq}
		)
	</insert>
	<!-- 시용기간 정보 입력 종료  12.26. 이재준 -->
	
	<!-- 회사명 정보 입력 시작 12.27 이재준  -->
	<insert id ="insert_job_comp" parameterType="JobComp">
		insert into fap_job_comp_tb(
			fap_job_comp_seq
			,fap_job_comp_nm
			,fap_job_comp_gb
			,fap_job_comp_ins_id
			,fap_job_comp_ins_dt
			,fap_job_comp_udt_id
			,fap_job_comp_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobComp" collection="jobCompList" index="index" open=" " separator="," close=" ">
		(	
			#{JobComp.fap_job_comp_seq}
			,#{JobComp.fap_job_comp_nm}
			,#{JobComp.fap_job_comp_gb}
			,#{JobComp.fap_job_comp_ins_id}
			,now()
			,#{JobComp.fap_job_comp_udt_id}
			,now()
			,#{JobComp.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 회사명 정보 입력 완료  --> 
	
	<!-- 채용공고 파일 정보 입력 시작 12.30 이재준 -->
	<insert id="insert_job_file" parameterType="JobFile">
		insert into fap_job_file_tb(
			fap_job_file_seq
			,fap_job_file_gb
			,fap_job_file_saved
			,fap_job_file_origin
			,fap_job_file_ins_id
			,fap_job_file_ins_dt
			,fap_job_file_udt_id
			,fap_job_file_udt_dt
			,fap_job_ad_seq
		)
		values 
		<foreach item ="JobFile" collection="jobFileList" index="index" open=" " separator="," close=" ">
		(
			#{JobFile.fap_job_file_seq}
			,#{JobFile.fap_job_file_gb}
			,#{JobFile.fap_job_file_saved}
			,#{JobFile.fap_job_file_origin}
			,#{JobFile.fap_job_file_ins_id}
			,now()
			,#{JobFile.fap_job_file_udt_id}
			,now()
			,#{JobFile.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 채용공고 파일 정보 입력 완료 -->
	
	<!-- 보험 정보 입력 시작 12.31 이재준  -->
	<insert id ="insert_job_isr" parameterType="JobIsr">
		insert into fap_job_isr_tb(
			fap_job_isr_seq
			,fap_job_isr_gb
			,fap_job_isr_ins_id
			,fap_job_isr_ins_dt
			,fap_job_isr_udt_id
			,fap_job_isr_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobIsr" collection="jobIsrList" index="index" open=" " separator="," close=" ">
		(	
			#{JobIsr.fap_job_isr_seq}
			,#{JobIsr.fap_job_isr_gb}
			,#{JobIsr.fap_job_isr_ins_id}
			,now()
			,#{JobIsr.fap_job_isr_udt_id}
			,now()
			,#{JobIsr.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 보험 정보 입력 완료  --> 
	
	<!-- 입사예정일 정보 입력 시작 12.31 이재준  -->
	<insert id ="insert_job_join_dt" parameterType="JobJoinDt">
		insert into fap_job_join_dt_tb(
			fap_job_join_dt_seq
			,fap_job_join_dt_gb
			,fap_job_join_dt_dtl
			,fap_job_join_dt_ins_id
			,fap_job_join_dt_ins_dt
			,fap_job_join_dt_udt_id
			,fap_job_join_dt_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobJoinDt" collection="jobJoinDtList" index="index" open=" " separator="," close=" ">
		(	
			#{JobJoinDt.fap_job_join_dt_seq}
			,#{JobJoinDt.fap_job_join_dt_gb}
			,#{JobJoinDt.fap_job_join_dt_dtl}
			,#{JobJoinDt.fap_job_join_dt_ins_id}
			,now()
			,#{JobJoinDt.fap_job_join_dt_udt_id}
			,now()
			,#{JobJoinDt.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 입사예정일 정보 입력 완료  --> 
	
	<!-- 주요업무 정보 입력 시작 12.31 이재준  -->
	<insert id ="insert_job_work" parameterType="JobWork">
		insert into fap_job_work_tb(
			fap_job_work_seq
			,fap_job_work_gb
			,fap_job_work_dtl
			,fap_job_work_ins_id
			,fap_job_work_ins_dt
			,fap_job_work_udt_id
			,fap_job_work_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobWork" collection="jobWorkList" index="index" open=" " separator="," close=" ">
		(	
			#{JobWork.fap_job_work_seq}
			,#{JobWork.fap_job_work_gb}
			,#{JobWork.fap_job_work_dtl}
			,#{JobWork.fap_job_work_ins_id}
			,now()
			,#{JobWork.fap_job_work_udt_id}
			,now()
			,#{JobWork.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 주요업무 정보 입력 완료  --> 
	
	<!-- 모집직종 정보 입력 시작 12.31 이재준  -->
	<insert id ="insert_job_category" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_category_seq">
		insert into fap_job_category_tb(
			fap_job_category_seq
			,fap_job_category_gb
			,fap_job_category_ins_id
			,fap_job_category_ins_dt
			,fap_job_category_udt_id
			,fap_job_category_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobCategory" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobCategory.fap_job_category_seq}
			,#{JobCategory.fap_job_category_gb}
			,#{JobCategory.fap_job_category_ins_id}
			,now()
			,#{JobCategory.fap_job_category_udt_id}
			,now()
			,#{JobCategory.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 모집직종 정보 입력 완료  --> 
	
	<!-- 모집직종(기타) 정보 입력 시작 2.8 이재준 -->
	<insert id ="insert_job_category_etc" parameterType="JobCategoryEtc">
		insert into fap_job_category_etc_tb(
			fap_job_category_seq
			,fap_job_category_etc_dtl
			,fap_job_category_etc_ins_id
			,fap_job_category_etc_ins_dt
			,fap_job_category_etc_udt_id
			,fap_job_category_etc_udt_dt
		)
		values(	
			#{fap_job_category_seq}
			,#{fap_job_category_etc_dtl}
			,#{fap_job_category_etc_ins_id}
			,now()
			,#{fap_job_category_etc_udt_id}
			,now()
		)
	</insert>
	<!-- 기타전형대상자(기타) 정보 입력 종료 -->
	
	<!-- 우대사항 정보 입력 시작 12.31 이재준  -->
	<insert id ="insert_job_pref" parameterType="JobPref">
		insert into fap_job_pref_tb(
			fap_job_pref_seq
			,fap_job_pref_gb
			,fap_job_pref_dtl
			,fap_job_pref_ins_id
			,fap_job_pref_ins_dt
			,fap_job_pref_udt_id
			,fap_job_pref_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobPref" collection="jobPrefList" index="index" open=" " separator="," close=" ">
		(	
			#{JobPref.fap_job_pref_seq}
			,#{JobPref.fap_job_pref_gb}
			,#{JobPref.fap_job_pref_dtl}
			,#{JobPref.fap_job_pref_ins_id}
			,now()
			,#{JobPref.fap_job_pref_udt_id}
			,now()
			,#{JobPref.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 우대사항 정보 입력 완료  --> 
	
	<!-- 근무예정지 정보 입력 시작 1.2 이재준  -->
	<insert id ="insert_job_workplace" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_workplace_seq">
		insert into fap_job_workplace_tb(
			fap_job_workplace_gb
			,fap_job_workplace_ins_id
			,fap_job_workplace_ins_dt
			,fap_job_workplace_udt_id
			,fap_job_workplace_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobWorkplace" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobWorkplace.fap_job_workplace_gb}
			,#{JobWorkplace.fap_job_workplace_ins_id}
			,now()
			,#{JobWorkplace.fap_job_workplace_udt_id}
			,now()
			,#{JobWorkplace.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 근무예정지 정보 입력 완료  --> 
	
	<!-- 상세근무예정지 정보 입력 시작 1.2 이재준  -->
	<insert id ="insert_job_workplace_dtl" parameterType="list">
		insert into fap_job_workplace_dtl_tb(
			fap_job_workplace_dtl_gb
			,fap_job_workplace_dtl_ins_id
			,fap_job_workplace_dtl_ins_dt
			,fap_job_workplace_dtl_udt_id
			,fap_job_workplace_dtl_udt_dt
			,fap_job_workplace_seq
		)
		values
		<foreach item ="JobWorkplaceDtl" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobWorkplaceDtl.fap_job_workplace_dtl_gb}
			,#{JobWorkplaceDtl.fap_job_workplace_dtl_ins_id}
			,now()
			,#{JobWorkplaceDtl.fap_job_workplace_dtl_udt_id}
			,now()
			,#{JobWorkplaceDtl.fap_job_workplace_seq}
		)
		</foreach>
	</insert>
	<!-- 상세근무예정지 정보 입력 완료  --> 
	
	<!-- 근무예정지(기타) 정보 입력 시작 2.8 이재준 -->
	<insert id ="insert_job_workplace_etc" parameterType="JobWorkplaceEtc">
		insert into fap_job_workplace_etc_tb(
			fap_job_workplace_seq
			,fap_job_workplace_etc_address
			,fap_job_workplace_etc_ins_id
			,fap_job_workplace_etc_ins_dt
			,fap_job_workplace_etc_udt_id
			,fap_job_workplace_etc_udt_dt
		)
		values(	
			#{fap_job_workplace_seq}
			,#{fap_job_workplace_etc_address}
			,#{fap_job_workplace_etc_ins_id}
			,now()
			,#{fap_job_workplace_etc_udt_id}
			,now()
		)
	</insert>
	<!-- 기타전형대상자(기타) 정보 입력 종료 -->
	
	<!-- 채용전형 정보 입력 시작 1.7 이재준  -->
	<insert id ="insert_job_recruitpcs" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_recruit_pcs_seq">
		insert into fap_job_recruit_pcs_tb(
			fap_job_recruit_pcs_gb
			,fap_job_recruit_pcs_dtl
			,fap_job_recruit_pcs_od
			,fap_job_recruit_pcs_ins_id
			,fap_job_recruit_pcs_ins_dt
			,fap_job_recruit_pcs_udt_id
			,fap_job_recruit_pcs_udt_dt
			,fap_job_ad_seq
		)
		values
		<foreach item ="JobRecruitPcs" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobRecruitPcs.fap_job_recruit_pcs_gb}
			,#{JobRecruitPcs.fap_job_recruit_pcs_dtl}
			,#{JobRecruitPcs.fap_job_recruit_pcs_od}
			,#{JobRecruitPcs.fap_job_recruit_pcs_ins_id}
			,now()
			,#{JobRecruitPcs.fap_job_recruit_pcs_udt_id}
			,now()
			,#{JobRecruitPcs.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 채용전형 정보 입력 완료  --> 
	<!-- 면접전형 정보 입력 시작 1.7 이재준 -->
	<insert id ="insert_job_itv" parameterType="JobItv" useGeneratedKeys="true" keyProperty="fap_job_itv_seq">
		insert into fap_job_itv_tb(
			fap_job_itv_gb
			,fap_job_itv_obj
			,fap_job_itv_tp
			,fap_job_itv_tm
			,fap_job_itv_skype
			,fap_job_itv_ins_id
			,fap_job_itv_ins_dt
			,fap_job_itv_udt_id
			,fap_job_itv_udt_dt
			,fap_job_recruit_pcs_seq
		)
		values(	
			#{fap_job_itv_gb}
			,#{fap_job_itv_obj}
			,#{fap_job_itv_tp}
			,#{fap_job_itv_tm}
			,#{fap_job_itv_skype}
			,#{fap_job_itv_ins_id}
			,now()
			,#{fap_job_itv_udt_id}
			,now()
			,#{fap_job_recruit_pcs_seq}
		)
	</insert>
	<!-- 면접전형 정보 입력 종료 -->
	<!-- 기타전형 정보 입력 시작 1.8 이재준 -->
	<insert id ="insert_job_test_etc" parameterType="JobTestEtc" useGeneratedKeys="true" keyProperty="fap_job_test_etc_seq">
		insert into fap_job_test_etc_tb(
			fap_job_test_etc_obj
			,fap_job_test_etc_dtl
			,fap_job_test_etc_ins_id
			,fap_job_test_etc_ins_dt
			,fap_job_test_etc_udt_id
			,fap_job_test_etc_udt_dt
			,fap_job_recruit_pcs_seq
		)
		values(	
			#{fap_job_test_etc_obj}
			,#{fap_job_test_etc_dtl}
			,#{fap_job_test_etc_ins_id}
			,now()
			,#{fap_job_test_etc_udt_id}
			,now()
			,#{fap_job_recruit_pcs_seq}
		)
	</insert>
	<!-- 기타전형 정보 입력 종료 -->
	<!-- 기타전형대상자(기타) 정보 입력 시작 1.8 이재준 -->
	<insert id ="insert_job_test_etc_obj" parameterType="JobTestEtcObj">
		insert into fap_job_test_etc_obj_tb(
			fap_job_test_etc_obj_seq
			,fap_job_test_etc_obj_dtl
			,fap_job_test_etc_obj_ins_id
			,fap_job_test_etc_obj_ins_dt
			,fap_job_test_etc_obj_udt_id
			,fap_job_test_etc_obj_udt_dt
			,fap_job_test_etc_seq
		)
		values(	
			#{fap_job_test_etc_obj_seq}
			,#{fap_job_test_etc_obj_dtl}
			,#{fap_job_test_etc_obj_ins_id}
			,now()
			,#{fap_job_test_etc_obj_udt_id}
			,now()
			,#{fap_job_test_etc_seq}
		)
	</insert>
	<!-- 기타전형대상자(기타) 정보 입력 종료 -->
	<!-- 면접방식(기타) 정보 입력 시작 1.8 이재준 -->
	<insert id ="insert_job_itv_tp_etc" parameterType="JobItvTpEtc">
		insert into fap_job_itv_tp_etc_tb(
			fap_job_itv_tp_etc_seq
			,fap_job_itv_tp_etc_dtl
			,fap_job_itv_tp_etc_ins_id
			,fap_job_itv_tp_etc_ins_dt
			,fap_job_itv_tp_etc_udt_id
			,fap_job_itv_tp_etc_udt_dt
			,fap_job_itv_seq
		)
		values(	
			#{fap_job_itv_tp_etc_seq}
			,#{fap_job_itv_tp_etc_dtl}
			,#{fap_job_itv_tp_etc_ins_id}
			,now()
			,#{fap_job_itv_tp_etc_udt_id}
			,now()
			,#{fap_job_itv_seq}
		)
	</insert>
	<!-- 면접방식(기타) 정보 입력 종료 -->
	<!-- 면접대상자(기타) 정보 입력 시작 1.8 이재준 -->
	<insert id ="insert_job_itv_obj_etc" parameterType="JobItvObjEtc">
		insert into fap_job_itv_obj_etc_tb(
			fap_job_itv_obj_etc_seq
			,fap_job_itv_obj_etc_dtl
			,fap_job_itv_obj_etc_ins_id
			,fap_job_itv_obj_etc_ins_dt
			,fap_job_itv_obj_etc_udt_id
			,fap_job_itv_obj_etc_udt_dt
			,fap_job_itv_seq
		)
		values(	
			#{fap_job_itv_obj_etc_seq}
			,#{fap_job_itv_obj_etc_dtl}
			,#{fap_job_itv_obj_etc_ins_id}
			,now()
			,#{fap_job_itv_obj_etc_udt_id}
			,now()
			,#{fap_job_itv_seq}
		)
	</insert>
	<!-- 면접대상자(기타) 정보 입력 종료 -->
	
	<!-- 급여정보 입력 1. 9 원병호 -->
	<insert id ="insert_job_pay" parameterType="list" useGeneratedKeys="true" keyProperty="fap_job_pay_seq">
		insert into
			fap_job_pay_tb(
				fap_job_pay_gb
		        , fap_job_pay_info
		        , fap_job_pay_dtl
		        , fap_job_pay_ins_id
		        , fap_job_pay_ins_dt
		        , fap_job_pay_udt_id
		        , fap_job_pay_udt_dt
		        , fap_job_ad_seq
			)values
		<foreach item ="JobPay" collection="list" index="index" open=" " separator="," close=" ">
			(
			#{JobPay.fap_job_pay_gb}
	        , #{JobPay.fap_job_pay_info}
	        , #{JobPay.fap_job_pay_dtl}
	        , #{JobPay.fap_job_pay_ins_id}
	        , now()
	        , #{JobPay.fap_job_pay_udt_id}
	        , now()
		    , #{JobPay.fap_job_ad_seq}
		)
		</foreach>
	</insert>
	<!-- 급여정보 입력 종료 1. 8 원병호 -->
	
	<!-- 기본급 정보 입력 1. 9 원병호 -->
	<insert id ="insert_job_pay_base" parameterType="list"  useGeneratedKeys="true" keyProperty="fap_job_pay_base_seq">
		insert into
			fap_job_pay_base_tb(
				fap_job_pay_base_gb
		        , fap_job_pay_base_info
		        , fap_job_pay_base_ins_id
		        , fap_job_pay_base_ins_dt
		        , fap_job_pay_base_udt_id
		        , fap_job_pay_base_udt_dt
		        , fap_job_pay_seq
		        )
			values
		<foreach item ="JobPayBase" collection="list" index="index" open=" " separator="," close=" ">
				(
				#{JobPayBase.fap_job_pay_base_gb}
		        , #{JobPayBase.fap_job_pay_base_info}
		        , #{JobPayBase.fap_job_pay_base_ins_id}
		        , now()
		        , #{JobPayBase.fap_job_pay_base_udt_id}
		        , now()
		        , #{JobPayBase.fap_job_pay_seq}
		        )
		</foreach>
	</insert>
	<!-- 기본급 정보 입력 종료 1. 9 원병호 -->
	
	<!-- 잔업수당 정보 입력 1. 9 원병호-->
	<insert id ="insert_job_pay_extra" parameterType="JobPayExtra"  useGeneratedKeys="true" keyProperty="fap_job_pay_extra_seq">
		insert into
			fap_job_pay_extra_tb(
		        fap_job_pay_extra_tm
		        , fap_job_pay_extra_ins_id
		        , fap_job_pay_extra_ins_dt
		        , fap_job_pay_extra_udt_id
		        , fap_job_pay_extra_udt_dt
		        , fap_job_pay_seq
		        )
			values(
				#{fap_job_pay_extra_tm}
		        , #{fap_job_pay_extra_ins_id}
		        , now()
		        , #{fap_job_pay_extra_udt_id}
		        , now()
		        , #{fap_job_pay_seq}
		    )
	</insert>
	<!-- 잔업수당 정보 입력 끝 1. 9 원병호-->
	
	<!-- 서비스 잔업수당 정보 입력  1. 9 원병호-->
	<insert id ="insert_job_service_work" parameterType="JobServiceWork"  useGeneratedKeys="true" keyProperty="fap_job_service_work_seq">
		insert into
			fap_job_service_work_tb(
		        fap_job_service_work_tm
		        , fap_job_service_work_ins_id
		        , fap_job_service_work_ins_dt
		        , fap_job_service_work_udt_id
		        , fap_job_service_work_udt_dt
		        , fap_job_pay_base_seq)
			values(
		        #{fap_job_service_work_tm}
		        , #{fap_job_service_work_ins_id}
		        , now()
		        , #{fap_job_service_work_udt_id}
		        , now()
		        , #{fap_job_pay_base_seq}
		    )
	</insert>
	<!-- 서비스 잔업수당 정보 입력 끝  1. 9 원병호-->
	
	<!-- 기타수당 정보 입력  1. 9 원병호-->
	<insert id ="insert_job_pay_etc" parameterType="list"  useGeneratedKeys="true" keyProperty="fap_job_pay_etc_seq">
		insert into
			fap_job_pay_etc_tb(
				fap_job_pay_etc_nm
		        , fap_job_pay_etc_info
		        , fap_job_pay_etc_ins_id
		        , fap_job_pay_etc_ins_dt
		        , fap_job_pay_etc_udt_id
		        , fap_job_pay_etc_udt_dt
		        , fap_job_pay_base_seq
		        )values
		<foreach item ="JobPayEtc" collection="list" index="index" open=" " separator="," close=" ">
			(
				#{JobPayEtc.fap_job_pay_etc_nm}
		        , #{JobPayEtc.fap_job_pay_etc_info}
		        , #{JobPayEtc.fap_job_pay_etc_ins_id}
		        , now()
		        , #{JobPayEtc.fap_job_pay_etc_udt_id}
		        , now()
		        , #{JobPayEtc.fap_job_pay_base_seq}
		        )
		</foreach>
	</insert>
	<!-- 기타수당 정보 입력 끝  1. 9 원병호-->
	
	<!-- 시험전형 정보 입력 시작 1.8 이재준 -->
	<insert id ="insert_job_exam" parameterType="JobExam" useGeneratedKeys="true" keyProperty="fap_job_exam_seq">
		insert into fap_job_exam_tb(
			fap_job_exam_gb
			,fap_job_exam_obj
			,fap_job_exam_mail
			,fap_job_exam_tm
			,fap_job_exam_sv
			,fap_job_exam_need
			,fap_job_exam_ins_id
			,fap_job_exam_ins_dt
			,fap_job_exam_udt_id
			,fap_job_exam_udt_dt
			,fap_job_recruit_pcs_seq
		)
		values(	
			#{fap_job_exam_gb}
			,#{fap_job_exam_obj}
			,#{fap_job_exam_mail}
			,#{fap_job_exam_tm}
			,#{fap_job_exam_sv}
			,#{fap_job_exam_need}
			,#{fap_job_exam_ins_id}
			,now()
			,#{fap_job_exam_udt_id}
			,now()
			,#{fap_job_recruit_pcs_seq}
		)
	</insert>
	<!-- 시험전형 정보 입력 종료 -->
	<!-- 시험대상자(기타) 정보 입력 시작 1.9 이재준 -->
	<insert id ="insert_job_exam_obj_etc" parameterType="JobExamObjEtc">
		insert into fap_job_exam_obj_etc_tb(
			fap_job_exam_obj_etc_seq
			,fap_job_exam_obj_etc_dtl
			,fap_job_exam_obj_etc_ins_id
			,fap_job_exam_obj_etc_ins_dt
			,fap_job_exam_obj_etc_udt_id
			,fap_job_exam_obj_etc_udt_dt
			,fap_job_exam_seq
		)
		values(	
			#{fap_job_exam_obj_etc_seq}
			,#{fap_job_exam_obj_etc_dtl}
			,#{fap_job_exam_obj_etc_ins_id}
			,now()
			,#{fap_job_exam_obj_etc_udt_id}
			,now()
			,#{fap_job_exam_seq}
		)
	</insert>
	<!-- 시험대상자(기타) 정보 입력 종료 -->
	<!-- 시험감독관(기타) 정보 입력 시작 1.9 이재준 -->
	<insert id ="insert_job_exam_sv_etc" parameterType="JobExamSvEtc">
		insert into fap_job_exam_sv_etc_tb(
			fap_job_exam_sv_etc_seq
			,fap_job_exam_sv_etc_dtl
			,fap_job_exam_sv_etc_ins_id
			,fap_job_exam_sv_etc_ins_dt
			,fap_job_exam_sv_etc_udt_id
			,fap_job_exam_sv_etc_udt_dt
			,fap_job_exam_seq
		)
		values(	
			#{fap_job_exam_sv_etc_seq}
			,#{fap_job_exam_sv_etc_dtl}
			,#{fap_job_exam_sv_etc_ins_id}
			,now()
			,#{fap_job_exam_sv_etc_udt_id}
			,now()
			,#{fap_job_exam_seq}
		)
	</insert>
	<!-- 시험대상자(기타) 정보 입력 종료 -->
	<!-- 시험준비물(기타) 정보 입력 시작 1.9 이재준 -->
	<insert id ="insert_job_exam_need_etc" parameterType="JobExamNeedEtc">
		insert into fap_job_exam_need_etc_tb(
			fap_job_exam_need_etc_seq
			,fap_job_exam_need_etc_dtl
			,fap_job_exam_need_etc_ins_id
			,fap_job_exam_need_etc_ins_dt
			,fap_job_exam_need_etc_udt_id
			,fap_job_exam_need_etc_udt_dt
			,fap_job_exam_seq
		)
		values(	
			#{fap_job_exam_need_etc_seq}
			,#{fap_job_exam_need_etc_dtl}
			,#{fap_job_exam_need_etc_ins_id}
			,now()
			,#{fap_job_exam_need_etc_udt_id}
			,now()
			,#{fap_job_exam_seq}
		)
	</insert>
	<!-- 시험대상자(기타) 정보 입력 종료 -->
	
	<!-- FAP 시험 파일 저장 시작; 2019. 1. 9. 김준영 -->
	<insert id="insert_job_exam_file" parameterType="JobExamFile">
		insert into
			fap_job_exam_file_tb
			(
				fap_job_exam_seq
				, fap_job_exam_file_saved
				, fap_job_exam_file_origin
				, fap_job_exam_file_ins_id
				, fap_job_exam_file_ins_dt
				, fap_job_exam_file_udt_id
				, fap_job_exam_file_udt_dt
			) values (
				#{fap_job_exam_seq}
				, #{fap_job_exam_file_saved}
				, #{fap_job_exam_file_origin}
				, #{fap_job_exam_file_ins_id}
				, now()
				, #{fap_job_exam_file_udt_id}
				, now()
			)
	</insert>
	<!-- FAP 시험 파일 저장 종료 -->
	<!-- 시험종류 정보 입력 시작 1.9 이재준  -->
	<insert id ="insert_job_exam_type" parameterType="list">
		insert into fap_job_exam_type_tb(
			fap_job_exam_type_gb
			,fap_job_exam_type_ins_id
			,fap_job_exam_type_ins_dt
			,fap_job_exam_type_udt_id
			,fap_job_exam_type_udt_dt
			,fap_job_exam_seq
		)
		values
		<foreach item ="JobExamType" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{JobExamType.fap_job_exam_type_gb}
			,#{JobExamType.fap_job_exam_type_ins_id}
			,now()
			,#{JobExamType.fap_job_exam_type_udt_id}
			,now()
			,#{JobExamType.fap_job_exam_seq}
		)
		</foreach>
	</insert>
	<!-- 시험종류 정보 입력 완료  --> 
<!-- 채용공고 저장 완료 -->		

	<!-- FAP 채용공고 관리 리스트 출력 시작; 2019.1.10. 이재준-->
	<select id="select_job_ad_list" resultType="JobAd" parameterType="String">
		select 
			fap_job_ad_seq
			,fap_comp_id
			,fap_job_ad_title
			,fap_job_ad_state
			,fap_job_ad_udt_dt
		from 
			fap_job_ad_tb
		where
			fap_comp_id = #{fap_comp_id}
		order by fap_job_ad_udt_dt desc
	</select>
	<!-- FAP 채용공고 관리 리스트 출력 종료 -->

	
	<!-- <resultMap type="hashmap" id="">
		<id property="fap_job_ja_level_seq" column="fap_job_ja_level_seq"/>
		<result property="fap_job_ja_level_gb" column="fap_job_ja_level_gb"/>
		<result property="fap_job_ja_level_dtl" column="fap_job_ja_level_dtl"/>
		<result property="fap_job_ja_level_ins_id" column="fap_job_ja_level_ins_id"/>
		<result property="fap_job_ja_level_ins_dt" column="fap_job_ja_level_ins_dt"/>
		<result property="fap_job_ja_level_udt_id" column="fap_job_ja_level_udt_id"/>
		<result property="fap_job_ja_level_udt_dt" column="fap_job_ja_level_udt_dt"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
	</resultMap>
	<resultMap type="hashmap" id="">
		<id property="fap_job_pref_seq" column="fap_job_pref_seq"/>
		<result property="fap_job_pref_gb" column="fap_job_pref_gb"/>
		<result property="fap_job_pref_dtl" column="fap_job_pref_dtl"/>
		<result property="fap_job_pref_ins_id" column="fap_job_pref_ins_id"/>
		<result property="fap_job_pref_ins_dt" column="fap_job_pref_ins_dt"/>
		<result property="fap_job_pref_udt_id" column="fap_job_pref_udt_id"/>
		<result property="fap_job_pref_udt_dt" column="fap_job_pref_udt_dt"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
	</resultMap>
	
	<select id="" resultMap="">
		select
			job_ja_level.fap_job_ja_level_seq as fap_job_ja_level_seq
			, job_ja_level.fap_job_ja_level_gb as fap_job_ja_level_gb
			, job_ja_level.fap_job_ja_level_dtl as fap_job_ja_level_dtl
			, job_ja_level.fap_job_ja_level_ins_id as fap_job_ja_level_ins_id
			, job_ja_level.fap_job_ja_level_ins_dt as fap_job_ja_level_ins_dt
			, job_ja_level.fap_job_ja_level_udt_id as fap_job_ja_level_udt_id
			, job_ja_level.fap_job_ja_level_udt_dt as fap_job_ja_level_udt_dt
			, job_ja_level.fap_job_ad_seq as fap_job_ad_seq
			, job_pref.fap_job_pref_seq as fap_job_pref_seq
			, job_pref.fap_job_pref_gb as fap_job_pref_gb
			, job_pref.fap_job_pref_dtl as fap_job_pref_dtl
			, job_pref.fap_job_pref_ins_id as fap_job_pref_ins_id
			, job_pref.fap_job_pref_ins_dt as fap_job_pref_ins_dt
			, job_pref.fap_job_pref_udt_id as fap_job_pref_udt_id
			, job_pref.fap_job_pref_udt_dt as fap_job_pref_udt_dt
			, job_pref.fap_job_ad_seq as fap_job_ad_seq
		from
			fap_job_ja_level_tb as job_ja_level
			, fap_job_pref_tb as job_pref
		where
			job_ja_level.fap_job_ad_seq = #{fap_job_ad_seq}
			and job_ja_level.fap_job_ad_seq = #{fap_job_ad_seq}
	</select> -->





	<!-- 급여정보 select 원병호-->
	<resultMap type="hashmap" id="JobAdMap">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_isdorm" column="fap_job_ad_isdorm" />
		<result property="fap_job_ad_promotion" column="fap_job_ad_promotion" />
		<result property="fap_job_ad_vacation" column="fap_job_ad_vacation" />
		<result property="fap_job_ad_welfare" column="fap_job_ad_welfare" />
		<collection property="JobIsrList" javaType="java.util.ArrayList" resultMap="JobIsrMap" />
		<collection property="JobDormList" javaType="java.util.ArrayList" resultMap="JobDormMap" />
		<collection property="JobPayList" javaType="java.util.ArrayList" resultMap="JobPayMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayMap">
		<id property="fap_job_pay_seq" column="fap_job_pay_seq" />
		<result property="fap_job_pay_seq" column="fap_job_pay_seq" />
		<result property="fap_job_pay_gb" column="fap_job_pay_gb" />
		<result property="fap_job_pay_info" column="fap_job_pay_info" />
		<result property="fap_job_pay_dtl" column="fap_job_pay_dtl" />
		<collection property="JobPayBaseList" javaType="java.util.ArrayList" resultMap="JobPayBaseMap" />
		<collection property="JobPayExtraList" javaType="java.util.ArrayList" resultMap="JobPayExtraMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayBaseMap">
		<id property="fap_job_pay_base_seq" column="fap_job_pay_base_seq" />
		<result property="fap_job_pay_base_seq" column="fap_job_pay_base_seq" />
		<result property="fap_job_pay_base_gb" column="fap_job_pay_base_gb" />
		<result property="fap_job_pay_base_info" column="fap_job_pay_base_info" />
		<collection property="JobServiceWorkList" javaType="java.util.ArrayList" resultMap="JobServiceWorkMap" />
		<collection property="JobPayEtcList" javaType="java.util.ArrayList" resultMap="JobPayEtcMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobServiceWorkMap">
		<id property="fap_job_service_work_seq" column="fap_job_service_work_seq" />
		<result property="fap_job_service_work_seq" column="fap_job_service_work_seq" />
		<!-- <result property="fap_job_service_work_info" column="fap_job_service_work_info" /> -->
		<result property="fap_job_service_work_tm" column="fap_job_service_work_tm" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayEtcMap">
		<id property="fap_job_pay_etc_seq" column="fap_job_pay_etc_seq" />
		<result property="fap_job_pay_etc_seq" column="fap_job_pay_etc_seq" />
		<result property="fap_job_pay_etc_nm" column="fap_job_pay_etc_nm" />
		<result property="fap_job_pay_etc_info" column="fap_job_pay_etc_info" />
	</resultMap>
	<resultMap type="hashmap" id="JobPayExtraMap">
		<id property="fap_job_pay_extra_seq" column="fap_job_pay_extra_seq" />
		<result property="fap_job_pay_extra_seq" column="fap_job_pay_extra_seq" />
		<result property="fap_job_pay_extra_tm" column="fap_job_pay_extra_tm" />
	</resultMap>
	<resultMap type="hashmap" id="JobIsrMap">
		<id property="fap_job_isr_seq" column="fap_job_isr_seq" />
		<result property="fap_job_isr_seq" column="fap_job_isr_seq" />
		<result property="fap_job_isr_gb" column="fap_job_isr_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobDormMap">
		<id property="fap_job_dorm_seq" column="fap_job_dorm_seq" />
		<result property="fap_job_dorm_seq" column="fap_job_dorm_seq" />
		<result property="fap_job_dorm_lo" column="fap_job_dorm_lo" />
		<result property="fap_job_dorm_cost" column="fap_job_dorm_cost" />
		<result property="fap_job_dorm_note" column="fap_job_dorm_note" />
	</resultMap>
		
	<select id="select_job_pay" resultMap="JobAdMap" parameterType="long">
		select
			ad.fap_job_ad_seq
			, ad.fap_job_ad_isdorm
		    , ad.fap_job_ad_promotion
		    , ad.fap_job_ad_vacation
		    , ad.fap_job_ad_welfare
			, pay.fap_job_pay_seq
			, pay.fap_job_pay_gb
			, pay.fap_job_pay_info
			, pay.fap_job_pay_dtl
			, base.fap_job_pay_base_seq
			, base.fap_job_pay_base_gb
			, base.fap_job_pay_base_info
			, base.fap_job_pay_seq
			, extra.fap_job_pay_extra_seq
			, extra.fap_job_pay_extra_tm
			, extra.fap_job_pay_seq
			, service.fap_job_service_work_seq
			, service.fap_job_service_work_tm
			, service.fap_job_pay_base_seq
			, etc.fap_job_pay_etc_seq
			, etc.fap_job_pay_etc_nm
			, etc.fap_job_pay_etc_info
			, etc.fap_job_pay_base_seq
		    , isr.fap_job_isr_seq
		    , isr.fap_job_isr_gb
		    , dorm.fap_job_dorm_seq
		    , dorm.fap_job_dorm_lo
		    , dorm.fap_job_dorm_cost
		    , dorm.fap_job_dorm_note
		from
			fap_job_ad_tb ad
		left join
			fap_job_pay_tb pay
		on
			ad.fap_job_ad_seq = pay.fap_job_ad_seq
		left join
			fap_job_pay_base_tb base
		on
			pay.fap_job_pay_seq = base.fap_job_pay_seq 
		left join
			fap_job_pay_extra_tb extra
		on
			pay.fap_job_pay_seq = extra.fap_job_pay_seq
		left join
			fap_job_service_work_tb service
		on
			base.fap_job_pay_base_seq = service.fap_job_pay_base_seq
		left join
			fap_job_pay_etc_tb etc
		on
			base.fap_job_pay_base_seq = etc.fap_job_pay_base_seq
		left join
			fap_job_isr_tb isr
		on
			ad.fap_job_ad_seq = isr.fap_job_ad_seq
		left join
			fap_job_dorm_tb dorm
		on
			ad.fap_job_ad_seq = dorm.fap_job_ad_seq
		where
			ad.fap_job_ad_seq = #{fap_job_ad_seq}
		order by 
			pay.fap_job_pay_seq, base.fap_job_pay_base_seq
	</select>
	<!-- 급여정보 select 끝 원병호-->
	
	<!-- FAP 채용공고 정보, 주요 업무, 인재상, 기술상세 가져오기 시작; 2019. 1. 11. 김준영 -->	
	<resultMap type="hashmap" id="fap_job_ad">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_job_ad_ideal_person" column="fap_job_ad_ideal_person"/>
		<result property="fap_job_ad_age" column="fap_job_ad_age"/>
		<result property="fap_job_ad_gender" column="fap_job_ad_gender"/>
		
		<association property="fap_job_ja_level" javaType="java.util.HashMap" resultMap="fap_job_ja_level"/>
		<collection property="fap_job_pref" javaType="java.util.ArrayList" resultMap="fap_job_pref" />
		<collection property="fap_job_work" javaType="java.util.ArrayList" resultMap="fap_job_work" />
	</resultMap>
	<resultMap type="hashmap" id="fap_job_ja_level">
		<id property="fap_job_ja_level_seq" column="fap_job_ja_level_seq"/>
		<result property="fap_job_ja_level_gb" column="fap_job_ja_level_gb"/>
		<result property="fap_job_ja_level_dtl" column="fap_job_ja_level_dtl"/>
	</resultMap>
	<resultMap type="hashmap" id="fap_job_pref">
		<id property="fap_job_pref_seq" column="fap_job_pref_seq"/>
		<result property="fap_job_pref_gb" column="fap_job_pref_gb"/>
		<result property="fap_job_pref_dtl" column="fap_job_pref_dtl"/>
	</resultMap>
	<resultMap type="hashmap" id="fap_job_work">
		<id property="fap_job_work_seq" column="fap_job_work_seq"/>
		<result property="fap_job_work_gb" column="fap_job_work_gb"/>
		<result property="fap_job_work_dtl" column="fap_job_work_dtl"/>
	</resultMap>
	
	<select id="select_job_ideal_person" parameterType="long" resultMap="fap_job_ad">
		select
			job_ad.fap_job_ad_seq as fap_job_ad_seq
			, job_ad.fap_job_ad_ideal_person as fap_job_ad_ideal_person
			, job_ad.fap_job_ad_age as fap_job_ad_age
			, job_ad.fap_job_ad_gender as fap_job_ad_gender
			
			, job_ja_level.fap_job_ja_level_seq as fap_job_ja_level_seq
			, job_ja_level.fap_job_ja_level_gb as fap_job_ja_level_gb
			, job_ja_level.fap_job_ja_level_dtl as fap_job_ja_level_dtl
			
			, job_pref.fap_job_pref_seq as fap_job_pref_seq
			, job_pref.fap_job_pref_gb as fap_job_pref_gb
			, job_pref.fap_job_pref_dtl as fap_job_pref_dtl
			
			, job_work.fap_job_work_seq as fap_job_work_seq
			, job_work.fap_job_work_gb as fap_job_work_gb
			, job_work.fap_job_work_dtl as fap_job_work_dtl
		from
			fap_job_ad_tb as job_ad
		left join fap_job_ja_level_tb as job_ja_level
			on job_ad.fap_job_ad_seq = job_ja_level.fap_job_ad_seq
		left join fap_job_pref_tb as job_pref
			on job_ad.fap_job_ad_seq = job_pref.fap_job_ad_seq
		left join fap_job_work_tb as job_work
			on job_ad.fap_job_ad_seq = job_work.fap_job_ad_seq
		where
			job_ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 채용공고 정보, 주요 업무, 인재상, 기술상세 가져오기 종료 -->
	
	<!-- FAP 채용공고 정보 가져오기 시작; 2019. 1. 14. 김준영 -->
	<select id="select_job_ad" parameterType="long" resultType="JobAd">
		select
			fap_job_ad_seq
			, fap_job_ad_major_business
			, fap_job_ad_homepage
			, fap_job_ad_est_dt
			, fap_job_ad_stock
			, fap_job_ad_3years_avg_sales
			, fap_job_ad_employee_num
			, fap_job_ad_foreigner_num
			, fap_job_ad_korean_num
			, fap_job_ad_postcode
			, fap_job_ad_address
			, fap_job_ad_address_dtl
			, fap_jobfair_seq
			, fap_jobfair_divide_seq
			, fap_job_ad_open_grade
			, fap_job_ad_qual_dpe
			, fap_job_ad_terms_dpe
			, fap_job_ad_coc_agree
			, fap_job_ad_overlap
			, fap_comp_id
			, fap_job_ad_category_type
		from
			fap_job_ad_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- FAP 채용공고 정보 가져오기 종료 -->
	
	<!-- FAP 채용전형 정보 가져오기 시작; 2019. 1. 14. 김준영 -->
	<resultMap type="hashmap" id="job_recruit_pcs">
		<id property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_job_recruit_pcs_gb" column="fap_job_recruit_pcs_gb"/>
		<result property="fap_job_recruit_pcs_dtl" column="fap_job_recruit_pcs_dtl"/>
		<result property="fap_job_recruit_pcs_od" column="fap_job_recruit_pcs_od"/>
		<result property="fap_job_recruit_pcs_ins_id" column="fap_job_recruit_pcs_ins_id"/>
		<result property="fap_job_recruit_pcs_ins_dt" column="fap_job_recruit_pcs_ins_dt"/>
		<result property="fap_job_recruit_pcs_udt_id" column="fap_job_recruit_pcs_udt_id"/>
		<result property="fap_job_recruit_pcs_udt_dt" column="fap_job_recruit_pcs_udt_dt"/>
		
		<association property="job_exam" javaType="java.util.HashMap" resultMap="job_exam"/>
		<association property="job_itv" javaType="java.util.HashMap" resultMap="job_itv"/>
		<association property="job_test_etc" javaType="java.util.HashMap" resultMap="job_test_etc"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam">
		<id property="fap_job_exam_seq" column="fap_job_exam_seq"/>
		<result property="fap_job_exam_gb" column="fap_job_exam_gb"/>
		<result property="fap_job_exam_obj" column="fap_job_exam_obj"/>
		<result property="fap_job_exam_mail" column="fap_job_exam_mail"/>
		<result property="fap_job_exam_tm" column="fap_job_exam_tm"/>
		<result property="fap_job_exam_sv" column="fap_job_exam_sv"/>
		<result property="fap_job_exam_need" column="fap_job_exam_need"/>
		<result property="fap_job_exam_ins_id" column="fap_job_exam_ins_id"/>
		<result property="fap_job_exam_ins_dt" column="fap_job_exam_ins_dt"/>
		<result property="fap_job_exam_udt_id" column="fap_job_exam_udt_id"/>
		<result property="fap_job_exam_udt_dt" column="fap_job_exam_udt_dt"/>

		<association property="job_exam_need_etc" javaType="java.util.HashMap" resultMap="job_exam_need_etc"/>
		<association property="job_exam_sv_etc" javaType="java.util.HashMap" resultMap="job_exam_sv_etc"/>
		<association property="job_exam_obj_etc" javaType="java.util.HashMap" resultMap="job_exam_obj_etc"/>
		<association property="job_exam_file" javaType="java.util.HashMap" resultMap="job_exam_file"/>
		<collection property="job_exam_type" javaType="java.util.ArrayList" resultMap="job_exam_type"/>
	</resultMap>
	
	<resultMap type="hashmap" id="job_exam_type">
		<id property="fap_job_exam_type_seq" column="fap_job_exam_type_seq"/>
		<result property="fap_job_exam_type_gb" column="fap_job_exam_type_gb"/>
		<result property="fap_job_exam_type_ins_id" column="fap_job_exam_type_ins_id"/>
		<result property="fap_job_exam_type_ins_dt" column="fap_job_exam_type_ins_dt"/>
		<result property="fap_job_exam_type_udt_id" column="fap_job_exam_type_udt_id"/>
		<result property="fap_job_exam_type_udt_dt" column="fap_job_exam_type_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_need_etc">
		<id property="fap_job_exam_need_etc_seq" column="fap_job_exam_need_etc_seq"/>
		<result property="fap_job_exam_need_etc_dtl" column="fap_job_exam_need_etc_dtl"/>
		<result property="fap_job_exam_need_etc_ins_id" column="fap_job_exam_need_etc_ins_id"/>
		<result property="fap_job_exam_need_etc_ins_dt" column="fap_job_exam_need_etc_ins_dt"/>
		<result property="fap_job_exam_need_etc_udt_id" column="fap_job_exam_need_etc_udt_id"/>
		<result property="fap_job_exam_need_etc_udt_dt" column="fap_job_exam_need_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_sv_etc">
		<id property="fap_job_exam_sv_etc_seq" column="fap_job_exam_sv_etc_seq"/>
		<result property="fap_job_exam_sv_etc_dtl" column="fap_job_exam_sv_etc_dtl"/>
		<result property="fap_job_exam_sv_etc_ins_id" column="fap_job_exam_sv_etc_ins_id"/>
		<result property="fap_job_exam_sv_etc_ins_dt" column="fap_job_exam_sv_etc_ins_dt"/>
		<result property="fap_job_exam_sv_etc_udt_id" column="fap_job_exam_sv_etc_udt_id"/>
		<result property="fap_job_exam_sv_etc_udt_dt" column="fap_job_exam_sv_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_obj_etc">
		<id property="fap_job_exam_obj_etc_seq" column="fap_job_exam_obj_etc_seq"/>
		<result property="fap_job_exam_obj_etc_dtl" column="fap_job_exam_obj_etc_dtl"/>
		<result property="fap_job_exam_obj_etc_ins_id" column="fap_job_exam_obj_etc_ins_id"/>
		<result property="fap_job_exam_obj_etc_ins_dt" column="fap_job_exam_obj_etc_ins_dt"/>
		<result property="fap_job_exam_obj_etc_udt_id" column="fap_job_exam_obj_etc_udt_id"/>
		<result property="fap_job_exam_obj_etc_udt_dt" column="fap_job_exam_obj_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_exam_file">
		<id property="fap_job_exam_file_seq" column="fap_job_exam_file_seq"/>
		<result property="fap_job_exam_file_saved" column="fap_job_exam_file_saved"/>
		<result property="fap_job_exam_file_origin" column="fap_job_exam_file_origin"/>
		<result property="fap_job_exam_file_ins_id" column="fap_job_exam_file_ins_id"/>
		<result property="fap_job_exam_file_ins_dt" column="fap_job_exam_file_ins_dt"/>
		<result property="fap_job_exam_file_udt_id" column="fap_job_exam_file_udt_id"/>
		<result property="fap_job_exam_file_udt_dt" column="fap_job_exam_file_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_itv">
		<id property="fap_job_itv_seq" column="fap_job_itv_seq"/>
		<result property="fap_job_itv_gb" column="fap_job_itv_gb"/>
		<result property="fap_job_itv_obj" column="fap_job_itv_obj"/>
		<result property="fap_job_itv_tp" column="fap_job_itv_tp"/>
		<result property="fap_job_itv_tm" column="fap_job_itv_tm"/>
		<result property="fap_job_itv_skype" column="fap_job_itv_skype"/>
		<result property="fap_job_itv_ins_id" column="fap_job_itv_ins_id"/>
		<result property="fap_job_itv_ins_dt" column="fap_job_itv_ins_dt"/>
		<result property="fap_job_itv_udt_id" column="fap_job_itv_udt_id"/>
		<result property="fap_job_itv_udt_dt" column="fap_job_itv_udt_dt"/>
		
		<association property="job_itv_tp_etc" javaType="java.util.HashMap" resultMap="job_itv_tp_etc"/>
		<association property="job_itv_obj_etc" javaType="java.util.HashMap" resultMap="job_itv_obj_etc"/>
	</resultMap>
	<resultMap type="hashmap" id="job_itv_tp_etc">
		<id property="fap_job_itv_tp_etc_seq" column="fap_job_itv_tp_etc_seq"/>
		<result property="fap_job_itv_tp_etc_dtl" column="fap_job_itv_tp_etc_dtl"/>
		<result property="fap_job_itv_tp_etc_ins_id" column="fap_job_itv_tp_etc_ins_id"/>
		<result property="fap_job_itv_tp_etc_ins_dt" column="fap_job_itv_tp_etc_ins_dt"/>
		<result property="fap_job_itv_tp_etc_udt_id" column="fap_job_itv_tp_etc_udt_id"/>
		<result property="fap_job_itv_tp_etc_udt_dt" column="fap_job_itv_tp_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_itv_obj_etc">
		<id property="fap_job_itv_obj_etc_seq" column="fap_job_itv_obj_etc_seq"/>
		<result property="fap_job_itv_obj_etc_dtl" column="fap_job_itv_obj_etc_dtl"/>
		<result property="fap_job_itv_obj_etc_ins_id" column="fap_job_itv_obj_etc_ins_id"/>
		<result property="fap_job_itv_obj_etc_ins_dt" column="fap_job_itv_obj_etc_ins_dt"/>
		<result property="fap_job_itv_obj_etc_udt_id" column="fap_job_itv_obj_etc_udt_id"/>
		<result property="fap_job_itv_obj_etc_udt_dt" column="fap_job_itv_obj_etc_udt_dt"/>
	</resultMap>
	<resultMap type="hashmap" id="job_test_etc">
		<id property="fap_job_test_etc_seq" column="fap_job_test_etc_seq"/>
		<result property="fap_job_test_etc_obj" column="fap_job_test_etc_obj"/>
		<result property="fap_job_test_etc_dtl" column="fap_job_test_etc_dtl"/>
		<result property="fap_job_test_etc_ins_id" column="fap_job_test_etc_ins_id"/>
		<result property="fap_job_test_etc_ins_dt" column="fap_job_test_etc_ins_dt"/>
		<result property="fap_job_test_etc_udt_id" column="fap_job_test_etc_udt_id"/>
		<result property="fap_job_test_etc_udt_dt" column="fap_job_test_etc_udt_dt"/>
		<association property="job_test_etc_obj" javaType="java.util.HashMap" resultMap="job_test_etc_obj"/>
	</resultMap>
	<resultMap type="hashmap" id="job_test_etc_obj">
		<id property="fap_job_test_etc_obj_seq" column="fap_job_test_etc_obj_seq"/>
		<result property="fap_job_test_etc_obj_dtl" column="fap_job_test_etc_obj_dtl"/>
		<result property="fap_job_test_etc_obj_ins_id" column="fap_job_test_etc_obj_ins_id"/>
		<result property="fap_job_test_etc_obj_ins_dt" column="fap_job_test_etc_obj_ins_dt"/>
		<result property="fap_job_test_etc_obj_udt_id" column="fap_job_test_etc_obj_udt_id"/>
		<result property="fap_job_test_etc_obj_udt_dt" column="fap_job_test_etc_obj_udt_dt"/>
	</resultMap>
	<select id="select_job_recruit_pcs" parameterType="long" resultMap="job_recruit_pcs">
		select
			job_recruit_pcs.fap_job_recruit_pcs_seq
			, job_recruit_pcs.fap_job_ad_seq
			, job_recruit_pcs.fap_job_recruit_pcs_gb
			, job_recruit_pcs.fap_job_recruit_pcs_dtl
			, job_recruit_pcs.fap_job_recruit_pcs_od
			
			, job_exam.fap_job_exam_seq
			, job_exam.fap_job_exam_gb
			, job_exam.fap_job_exam_obj
			, job_exam.fap_job_exam_mail
			, job_exam.fap_job_exam_tm
			, job_exam.fap_job_exam_sv
			, job_exam.fap_job_exam_need
			
			, job_exam_type.fap_job_exam_type_seq
			, job_exam_type.fap_job_exam_type_gb
			
			, job_exam_need.fap_job_exam_need_etc_seq
			, job_exam_need.fap_job_exam_need_etc_dtl
			
			, job_exam_sv_etc.fap_job_exam_sv_etc_seq
			, job_exam_sv_etc.fap_job_exam_sv_etc_dtl
			
			, job_exam_obj_etc.fap_job_exam_obj_etc_seq
			, job_exam_obj_etc.fap_job_exam_obj_etc_dtl

			, job_exam_file.fap_job_exam_file_seq
			, job_exam_file.fap_job_exam_file_saved
			, job_exam_file.fap_job_exam_file_origin
			
			, job_itv.fap_job_itv_seq
			, job_itv.fap_job_itv_gb
			, job_itv.fap_job_itv_obj
			, job_itv.fap_job_itv_tp
			, job_itv.fap_job_itv_tm
			, job_itv.fap_job_itv_skype

			, job_itv_tp_etc.fap_job_itv_tp_etc_seq
			, job_itv_tp_etc.fap_job_itv_tp_etc_dtl
			
			, job_itv_obj_etc.fap_job_itv_obj_etc_seq
			, job_itv_obj_etc.fap_job_itv_obj_etc_dtl

			, job_test_etc.fap_job_test_etc_seq
			, job_test_etc.fap_job_test_etc_obj
			, job_test_etc.fap_job_test_etc_dtl
			
			, job_test_etc_obj.fap_job_test_etc_obj_seq
			, job_test_etc_obj.fap_job_test_etc_obj_dtl

		from
			fap_job_recruit_pcs_tb as job_recruit_pcs
		left join fap_job_exam_tb as job_exam
			on job_recruit_pcs.fap_job_recruit_pcs_seq = job_exam.fap_job_recruit_pcs_seq
		left join fap_job_exam_type_tb as job_exam_type
			on job_exam.fap_job_exam_seq = job_exam_type.fap_job_exam_seq
		left join fap_job_exam_need_etc_tb as job_exam_need
			on job_exam.fap_job_exam_seq = job_exam_need.fap_job_exam_seq
		left join fap_job_exam_sv_etc_tb as job_exam_sv_etc
			on job_exam.fap_job_exam_seq = job_exam_sv_etc.fap_job_exam_seq
		left join fap_job_exam_obj_etc_tb as job_exam_obj_etc
			on job_exam.fap_job_exam_seq = job_exam_obj_etc.fap_job_exam_seq
		left join fap_job_exam_file_tb as job_exam_file
			on job_exam.fap_job_exam_seq = job_exam_file.fap_job_exam_seq
		left join fap_job_itv_tb as job_itv
			on job_recruit_pcs.fap_job_recruit_pcs_seq = job_itv.fap_job_recruit_pcs_seq
		left join fap_job_itv_tp_etc_tb as job_itv_tp_etc
			on job_itv.fap_job_itv_seq = job_itv_tp_etc.fap_job_itv_seq
		left join fap_job_itv_obj_etc_tb as job_itv_obj_etc
			on job_itv.fap_job_itv_seq = job_itv_obj_etc.fap_job_itv_seq
		left join fap_job_test_etc_tb as job_test_etc
			on job_recruit_pcs.fap_job_recruit_pcs_seq = job_test_etc.fap_job_recruit_pcs_seq
		left join fap_job_test_etc_obj_tb as job_test_etc_obj
			on job_test_etc_obj.fap_job_test_etc_seq = job_test_etc.fap_job_test_etc_seq
		where
			job_recruit_pcs.fap_job_ad_seq = #{fap_job_ad_seq}
		order by
			job_recruit_pcs.fap_job_recruit_pcs_od, job_exam_type.fap_job_exam_type_seq
	</select>
	<!-- FAP 채용전형 정보 가져오기 종료 -->
	
	<!-- 기본 고용정보 select 시작 1.14 이재준-->
	<resultMap type="hashmap" id="FapJobAdMap">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_title" column="fap_job_ad_title" />
		<result property="fap_job_ad_worktime" column="fap_job_ad_worktime" />
		<result property="fap_job_ad_overtime" column="fap_job_ad_overtime" />
		<result property="fap_job_ad_hire_type" column="fap_job_ad_hire_type" />
		<result property="fap_job_ad_intern" column="fap_job_ad_intern" />
		<result property="fap_job_ad_recruit_num" column="fap_job_ad_recruit_num" />
		<collection property="JobCategoryList" javaType="java.util.ArrayList" resultMap="JobCategoryMap" />
		<collection property="JobCategoryEtcList" javaType="java.util.ArrayList" resultMap="JobCategoryEtcMap" />
		<collection property="JobTrialList" javaType="java.util.ArrayList" resultMap="JobTrialMap" />
		<collection property="JobJitList" javaType="java.util.ArrayList" resultMap="JobJitEmployeeMap" />
		<collection property="JobWorkplaceList" javaType="java.util.ArrayList" resultMap="JobWorkplaceMap" />
		<collection property="JobWorkplaceDtlList" javaType="java.util.ArrayList" resultMap="JobWorkplaceDtlMap" />
		<collection property="JobWorkplaceEtcList" javaType="java.util.ArrayList" resultMap="JobWorkplaceEtcMap" />
		<collection property="JobJoinDtList" javaType="java.util.ArrayList" resultMap="JobJoinDtMap" />
		<collection property="JobCompList" javaType="java.util.ArrayList" resultMap="JobCompMap" />
	</resultMap>	
	<resultMap type="hashmap" id="JobCategoryMap">
		<id property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_gb" column="fap_job_category_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobCategoryEtcMap">
		<id property="fap_job_category_etc_seq" column="fap_job_category_etc_seq" />
		<result property="fap_job_category_etc_dtl" column="fap_job_category_etc_dtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobTrialMap">
		<id property="fap_job_trial_seq" column="fap_job_trial_seq" />
		<result property="fap_job_trial_seq" column="fap_job_trial_seq" />
		<result property="fap_job_trial_pd" column="fap_job_trial_pd" />
		<result property="fap_job_trial_pay" column="fap_job_trial_pay" />
		<result property="fap_job_trial_pay_equal" column="fap_job_trial_pay_equal" />
	</resultMap>
	<resultMap type="hashmap" id="JobJitEmployeeMap">
		<id property="fap_job_jit_employee_seq" column="fap_job_jit_employee_seq" />
		<result property="fap_job_jit_employee_seq" column="fap_job_jit_employee_seq" />
		<result property="fap_job_jit_employee_isswitch" column="fap_job_jit_employee_isswitch" />
		<result property="fap_job_jit_employee_term" column="fap_job_jit_employee_term" />
		<result property="fap_job_jit_employee_dtl" column="fap_job_jit_employee_dtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceMap">
		<id property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<result property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<result property="fap_job_workplace_gb" column="fap_job_workplace_gb" />
		<collection property="JobWorkplaceDtlList" javaType="java.util.ArrayList" resultMap="JobWorkplaceDtlMap" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceDtlMap">
		<id property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_gb" column="fap_job_workplace_dtl_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceEtcMap">
		<id property="fap_job_workplace_etc_seq" column="fap_job_workplace_etc_seq" />
		<result property="fap_job_workplace_etc_address" column="fap_job_workplace_etc_address" />
	</resultMap>
	<resultMap type="hashmap" id="JobJoinDtMap">
		<id property="fap_job_join_dt_seq" column="fap_job_join_dt_seq" />
		<result property="fap_job_join_dt_seq" column="fap_job_join_dt_seq" />
		<result property="fap_job_join_dt_gb" column="fap_job_join_dt_gb" />
		<result property="fap_job_join_dt_dtl" column="fap_job_join_dt_dtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobCompMap">
		<id property="fap_job_comp_seq" column="fap_job_comp_seq" />
		<result property="fap_job_comp_seq" column="fap_job_comp_seq" />
		<result property="fap_job_comp_nm" column="fap_job_comp_nm" />
		<result property="fap_job_comp_gb" column="fap_job_comp_gb" />
	</resultMap>
	<select id="select_job_category" resultMap="FapJobAdMap" parameterType="hashmap">
		select
			ad.fap_job_ad_seq
			, ad.fap_job_ad_title
		    , ad.fap_job_ad_worktime
		    , ad.fap_job_ad_overtime
		    , ad.fap_job_ad_hire_type
		    , ad.fap_job_ad_intern
		   	, ad.fap_job_ad_recruit_num
		    , category.fap_job_category_seq
		    , category.fap_job_category_gb
		    , category_etc.fap_job_category_etc_seq
		    , category_etc.fap_job_category_etc_dtl
			, trial.fap_job_trial_seq
		    , trial.fap_job_trial_pd
		    , trial.fap_job_trial_pay
			, trial.fap_job_trial_pay_equal
			, jit.fap_job_jit_employee_seq
		    , jit.fap_job_jit_employee_isswitch
		    , jit.fap_job_jit_employee_term
			, jit.fap_job_jit_employee_dtl
			, workplace.fap_job_workplace_seq
			, workplace.fap_job_workplace_gb
			, workplacedtl.fap_job_workplace_dtl_seq
			, workplacedtl.fap_job_workplace_dtl_gb
			, workplaceetc.fap_job_workplace_etc_seq
			, workplaceetc.fap_job_workplace_etc_address
			, joindt.fap_job_join_dt_seq
		    , joindt.fap_job_join_dt_gb
		    , joindt.fap_job_join_dt_dtl
		    , comp.fap_job_comp_seq
		    , comp.fap_job_comp_gb
		    , comp.fap_job_comp_nm
		from
			fap_job_ad_tb ad
		left join
			fap_job_category_tb category
		on
			ad.fap_job_ad_seq = category.fap_job_ad_seq
		left join
			fap_job_category_etc_tb category_etc
		on
			category.fap_job_category_seq = category_etc.fap_job_category_seq
		left join
			fap_job_trial_tb trial
		on
			ad.fap_job_ad_seq = trial.fap_job_ad_seq
		left join
			fap_job_jit_employee_tb jit
		on
			ad.fap_job_ad_seq = jit.fap_job_ad_seq
		left join
			fap_job_workplace_tb workplace
		on
			ad.fap_job_ad_seq = workplace.fap_job_ad_seq
		left join
			fap_job_workplace_dtl_tb workplacedtl
		on
			workplace.fap_job_workplace_seq = workplacedtl.fap_job_workplace_seq
		left join
			fap_job_workplace_etc_tb workplaceetc
		on
			workplace.fap_job_workplace_seq = workplaceetc.fap_job_workplace_seq
		left join
			fap_job_join_dt_tb joindt
		on
			ad.fap_job_ad_seq = joindt.fap_job_ad_seq
		left join
			fap_job_comp_tb comp
		on
			ad.fap_job_ad_seq = comp.fap_job_ad_seq
		where
			ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
<!-- 기본 고용정보 select 끝 -->
	
	<!-- 채용공고정보 수정 -->
	<update id="update_job_ad" parameterType="JobAd">
		update
			fap_job_ad_tb
		set
			fap_job_ad_major_business = #{fap_job_ad_major_business}
		    , fap_job_ad_homepage = #{fap_job_ad_homepage}
		    , fap_job_ad_est_dt = #{fap_job_ad_est_dt}
		    , fap_job_ad_stock = #{fap_job_ad_stock}
		    , fap_job_ad_3years_avg_sales = #{fap_job_ad_3years_avg_sales}
		    , fap_job_ad_employee_num = #{fap_job_ad_employee_num}
		    , fap_job_ad_foreigner_num = #{fap_job_ad_foreigner_num}
		    , fap_job_ad_korean_num = #{fap_job_ad_korean_num}
		    , fap_job_ad_postcode = #{fap_job_ad_postcode}
		    , fap_job_ad_address = #{fap_job_ad_address}
		    , fap_job_ad_address_dtl = #{fap_job_ad_address_dtl}
		    , fap_job_ad_title = #{fap_job_ad_title}
		    , fap_job_ad_worktime = #{fap_job_ad_worktime}
		    , fap_job_ad_overtime = #{fap_job_ad_overtime}
		    , fap_job_ad_hire_type = #{fap_job_ad_hire_type}
		    , fap_job_ad_intern = #{fap_job_ad_intern}
		    , fap_job_ad_recruit_num = #{fap_job_ad_recruit_num}
		    , fap_job_ad_ideal_person = #{fap_job_ad_ideal_person}
		    , fap_job_ad_age = #{fap_job_ad_age}
			, fap_job_ad_gender = #{fap_job_ad_gender}
		    , fap_job_ad_isdorm = #{fap_job_ad_isdorm}
		    , fap_job_ad_promotion = #{fap_job_ad_promotion}
		    , fap_job_ad_vacation = #{fap_job_ad_vacation}
		    , fap_job_ad_welfare = #{fap_job_ad_welfare}
		    , fap_job_ad_open_grade = #{fap_job_ad_open_grade}
		    , fap_job_ad_qual_dpe = #{fap_job_ad_qual_dpe}
		    , fap_job_ad_terms_dpe = #{fap_job_ad_terms_dpe}
		    , fap_job_ad_coc_agree = #{fap_job_ad_coc_agree}
	    	<if test="fap_job_ad_overlap != null and fap_job_ad_overlap != '' ">
		    , fap_job_ad_overlap = #{fap_job_ad_overlap}
			</if>
		    , fap_job_ad_groupcode = #{fap_job_ad_groupcode}
		    , fap_job_ad_udt_id = #{fap_job_ad_udt_id}
		    , fap_job_ad_udt_dt = now()
		    , fap_job_ad_state = #{fap_job_ad_state}
		    , fap_job_ad_category_type = #{fap_job_ad_category_type}
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</update>
	<!-- 채용공고정보 수정  끝 -->
	
	<!-- 채용전형 수정; 2019. 1. 16. 김준영 -->
	<update id="update_job_recruit_pcs" parameterType="JobRecruitPcs">
		<foreach item="jobRecruitPcsList" collection="jobRecruitPcsList" separator=";">
			update
				fap_job_recruit_pcs_tb
			set
				fap_job_recruit_pcs_gb = #{jobRecruitPcsList.fap_job_recruit_pcs_gb}
				, fap_job_recruit_pcs_dtl = #{jobRecruitPcsList.fap_job_recruit_pcs_dtl}
				, fap_job_recruit_pcs_od = #{jobRecruitPcsList.fap_job_recruit_pcs_od}
				, fap_job_recruit_pcs_udt_id = #{jobRecruitPcsList.fap_job_recruit_pcs_udt_id}
				, fap_job_recruit_pcs_udt_dt = now()
			where
				fap_job_recruit_pcs_seq = #{jobRecruitPcsList.fap_job_recruit_pcs_seq}
		</foreach>
	</update>
	<!-- 채용전형 수정 끝 -->
	
	<!-- 채용전형 seq 가져오기 시작; 2019. 1. 16. 김준영 -->
	<select id="select_pcs_seq_list" parameterType="long" resultType="long">
	   select
	      fap_job_recruit_pcs_seq
	   from
	      fap_job_recruit_pcs_tb
	   where
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 채용전형 seq 가져오기 종료 -->
	
	<!-- 채용공고 기숙사 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_dorm" parameterType="long">
	   delete 
	   from 
	      fap_job_dorm_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 기숙사 정보 삭제 종료 -->
	
	<!-- 채용공고 계약사원 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_jit_employee" parameterType="long">
	   delete 
	   from 
	      fap_job_jit_employee_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 계약사원 정보 삭제 종료 -->
	
	<!-- 채용공고 업무에 필요한 일본어 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_ja_level" parameterType="long">
	   delete 
	   from 
	      fap_job_ja_level_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 업무에 필요한 일본어 정보 삭제 종료 -->
	
	<!-- 채용공고 우대사항 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_pref" parameterType="long">
	   delete 
	   from 
	      fap_job_pref_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 우대사항 정보 삭제 종료 -->
	
	<!-- 채용공고 입사예정일 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_join_dt" parameterType="long">
	   delete 
	   from 
	      fap_job_join_dt_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 입사예정일 정보 삭제 종료 -->
	
	<!-- 채용공고 시용기간 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_trial" parameterType="long">
	   delete 
	   from 
	      fap_job_trial_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 시용기간 정보 삭제 종료 -->
	
	<!-- 채용공고 보험정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_isr" parameterType="long">
	   delete 
	   from 
	      fap_job_isr_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 보험정보 삭제 종료 -->
	
	<!-- 채용공고 급여정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_pay" parameterType="long">
	   delete 
	   from 
	      fap_job_pay_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 급여정보 삭제 종료 -->
	
	<!-- 채용공고 주요업무 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_work" parameterType="long">
	   delete 
	   from 
	      fap_job_work_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 주요업무 삭제 종료 -->
	
	<!-- 채용공고 회사명 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_comp" parameterType="long">
	   delete 
	   from 
	      fap_job_comp_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 회사명 정보 삭제 종료 -->
	
	<!-- 채용공고 근무예정지 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_workplace" parameterType="long">
	   delete 
	   from 
	      fap_job_workplace_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 근무예정지 정보 삭제 종료 -->
	
	<!-- 채용공고 모집직종 정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_category" parameterType="long">
	   delete 
	   from 
	      fap_job_category_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 모집직종 정보 삭제 종료 -->
	
	<!-- 채용공고 파일정보 삭제 시작; 2019.01.16. 이재준-->
	<delete id="delete_job_file" parameterType="long">
	   delete 
	   from 
	      fap_job_file_tb
	   where 
	      fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- 채용공고 파일정보 삭제 종료 -->
	
	<!-- 채용전형 수정 가능 여부 확인 시작; 2019. 1. 17. 김준영 카운터로 바꿔야함 -->
	<select id="editable_check" parameterType="long" resultType="int">
		select
			count(fap_job_app_rt_seq)
		from
			fap_job_apply_result_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 채용전형 수정 가능 여부 확인 종료 -->
	
	<!-- 채용공고 선택 삭제 시작; 2019. 1. 17. 김준영 -->
	<delete id="delete_job_recruit_pcs_selective" parameterType="hashmap">
	   delete from
	      fap_job_recruit_pcs_tb 
	   where
	      fap_job_ad_seq = #{fap_job_ad_seq}
	      and fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq} 
	</delete>
   <!-- 채용공고 선택 삭제 끝 -->
	
	<!-- 시험전형 정보 삭제 시작; 2019. 1. 18. 김준영 -->
	<delete id="delete_job_exam" parameterType="long">
		delete
		from
			fap_job_exam_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</delete>
	<!-- 시험전형 정보 삭제 종료 -->
	
	<!-- 면접전형 정보 삭제 시작; 2019. 1. 18. 김준영 -->
	<delete id="delete_job_itv">
		delete
		from
			fap_job_itv_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</delete>
	<!-- 면접전형 정보 삭제 종료 -->
	
	<!-- 기타전형 정보 삭제 시작; 2019. 1. 18. 김준영 -->
	<delete id="delete_job_test_etc">
		delete
		from
			fap_job_test_etc_tb
		where
			fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</delete>
	<!-- 기타전형 정보 삭제 종료 -->
	
<!-- 채용공고 끝 --> 
	
	<!-- 회사 잡페어 정보 검색 시작 2019.1.16. 신동철 -->
	<select id="search_company_jobfair_list" parameterType="String" resultType="hashmap">
		select distinct
			 jobfair.fap_jobfair_seq
		    , jobfair.fap_jobfair_title
		    , user.fap_comp_ja_nm
		    , user.fap_comp_id
		from
			fap_job_ad_tb ad
			inner join fap_jobfair_tb jobfair
				on jobfair.fap_jobfair_seq = ad.fap_jobfair_seq
			left join fap_company_user_tb user
				on user.fap_comp_id = ad.fap_comp_id
		where
			ad.fap_comp_id = #{fap_comp_id}
		order by
			jobfair.fap_jobfair_st desc
	</select>	
	<!-- 회사 잡페어 정보 검색 종료 -->
	
	<!-- 회사 세부잡페어 정보 검색 시작 2019.1.16. 신동철 -->
	<select id="search_company_jobfair_divide_list" parameterType="JobRecruitPcsSch" resultType="hashmap">
		select distinct
			 jobfair_divide.fap_jobfair_divide_seq
		    , jobfair_divide.fap_jobfair_divide_gb
		from
			fap_job_ad_tb ad
			inner join fap_jobfair_divide_tb jobfair_divide
				on jobfair_divide.fap_jobfair_seq = ad.fap_jobfair_seq
		where
			ad.fap_comp_id = #{fap_comp_id}
			and ad.fap_jobfair_seq = #{fap_jobfair_seq}
		order by
			jobfair_divide.fap_jobfair_divide_st asc
	</select>	
	<!-- 회사 세부잡페어 정보 검색 종료 -->
	
	<!-- 채용기업 전형일정 스케줄 검색 시작; 2019. 1. 16 신동철 -->
	<select id="select_company_recruit_pcs_sch" parameterType="JobRecruitPcsSch" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
			, sch.fap_job_recruit_pcs_sch_seq
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
			, sch.fap_job_recruit_pcs_sch_color
			, exam.fap_job_exam_gb
			, itv.fap_job_itv_gb
			, comp.fap_comp_en_nm
		from
			fap_job_ad_tb ad
			inner join fap_company_user_tb comp
				on comp.fap_comp_id = ad.fap_comp_id
			inner join fap_job_recruit_pcs_tb pcs
				on pcs.fap_job_ad_seq = ad.fap_job_ad_seq
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			left join fap_job_exam_tb exam
				on exam.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			left join fap_job_itv_tb itv
				on itv.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
		where
			sch.fap_job_recruit_pcs_sch_ck = 'C5001'
			and ad.fap_comp_id = #{fap_comp_id}
			<if test="fap_jobfair_seq != null and fap_jobfair_seq != 0 ">
				and ad.fap_jobfair_seq = #{fap_jobfair_seq}
			</if>
			<if test="fap_jobfair_divide_seq != null and fap_jobfair_divide_seq != 0 ">
				and ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			</if>
	</select>
	<!-- 채용기업 전형일정 스케줄 검색 종료 -->
	
	<!-- 채용기업 서류전형 검색 시작; 2019. 1. 16. 신동철 -->
	<select id="select_company_review_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on pcs.fap_job_recruit_pcs_seq = sch.fap_job_recruit_pcs_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 채용기업 서류전형 검색 종료-->
	
	<!-- 채용기업 시험전형 검색 시작; 2019. 1. 16. 신동철 -->
	<resultMap type="hashmap" id="fapRecruitMap">
		<id property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq" />
		<result property="fap_job_recruit_pcs_gb" column="fap_job_recruit_pcs_gb" />
		<result property="fap_job_recruit_pcs_sch_st" column="fap_job_recruit_pcs_sch_st" />
		<result property="fap_job_recruit_pcs_sch_et" column="fap_job_recruit_pcs_sch_et" />
		<result property="fap_job_recruit_pcs_sch_lo" column="fap_job_recruit_pcs_sch_lo" />
		<result property="fap_job_recruit_pcs_sch_detail" column="fap_job_recruit_pcs_sch_detail" />
		<result property="fap_job_exam_gb" column="fap_job_exam_gb" />
		<result property="fap_job_exam_obj" column="fap_job_exam_obj" />
		<result property="fap_job_exam_mail" column="fap_job_exam_mail" />
		<result property="fap_job_exam_tm" column="fap_job_exam_tm" />
		<result property="fap_job_exam_sv" column="fap_job_exam_sv" />
		<result property="fap_job_exam_need" column="fap_job_exam_need" />
		<result property="fap_job_exam_need" column="fap_job_exam_need" />
		<result property="fap_job_exam_file_origin" column="fap_job_exam_file_origin" />
		<result property="fap_job_exam_sv_etc_dtl" column="fap_job_exam_sv_etc_dtl" />
		<result property="fap_job_exam_need_etc_dtl" column="fap_job_exam_need_etc_dtl" />
		<collection property="fapRecruitExamList" javaType="java.util.ArrayList" resultMap="fapRecruitExamMap" />
	</resultMap>
	<resultMap type="hashmap" id="fapRecruitExamMap">
		<id property="fap_job_exam_type_seq" column="fap_job_exam_type_seq" />
		<result property="fap_job_exam_type_gb" column="fap_job_exam_type_gb" />
	</resultMap>
	<select id="select_company_exam_pcs" parameterType="Long" resultMap="fapRecruitMap">
		select
			pcs.fap_job_recruit_pcs_seq as fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb as fap_job_recruit_pcs_gb
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo as fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_detail as fap_job_recruit_pcs_sch_detail
		    , exam.fap_job_exam_gb as fap_job_exam_gb
		    , exam.fap_job_exam_obj as fap_job_exam_obj
		    , exam.fap_job_exam_mail as fap_job_exam_mail
		    , exam.fap_job_exam_tm as fap_job_exam_tm
		    , exam.fap_job_exam_sv as fap_job_exam_sv
		    , exam.fap_job_exam_need as fap_job_exam_need
		    , exam_file.fap_job_exam_file_origin as fap_job_exam_file_origin
		    , exam_obj.fap_job_exam_obj_etc_dtl as fap_job_exam_obj_etc_dtl
		    , exam_sv.fap_job_exam_sv_etc_dtl as fap_job_exam_sv_etc_dtl
		    , exam_need.fap_job_exam_need_etc_dtl as fap_job_exam_need_etc_dtl
		    , exam_type.fap_job_exam_type_seq as fap_job_exam_type_seq
		    , exam_type.fap_job_exam_type_gb as fap_job_exam_type_gb
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_exam_tb exam
				on pcs.fap_job_recruit_pcs_seq = exam.fap_job_recruit_pcs_seq
			left join fap_job_exam_file_tb exam_file
				on exam_file.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_obj_etc_tb exam_obj
				on exam_obj.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_sv_etc_tb exam_sv
				on exam_sv.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_need_etc_tb exam_need
				on exam_need.fap_job_exam_seq = exam.fap_job_exam_seq
			left join fap_job_exam_type_tb exam_type
				on exam_type.fap_job_exam_seq = exam.fap_job_exam_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 채용기업 시험전형 검색 종료-->
	
	<!-- 채용기업 면접전형 검색 시작; 2019. 1. 16. 신동철 -->
	<select id="select_company_itv_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_waitingroom
		    , sch.fap_job_recruit_pcs_sch_detail
		    , itv.fap_job_itv_gb
		    , itv.fap_job_itv_obj
		    , itv.fap_job_itv_tp
		    , itv.fap_job_itv_tm
		    , itv.fap_job_itv_skype
		    , itv_tp.fap_job_itv_tp_etc_dtl
		    , itv_obj.fap_job_itv_obj_etc_dtl		    
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_itv_tb itv
				on pcs.fap_job_recruit_pcs_seq = itv.fap_job_recruit_pcs_seq
			left join fap_job_itv_tp_etc_tb itv_tp
				on itv_tp.fap_job_itv_seq = itv.fap_job_itv_seq
			left join fap_job_itv_obj_etc_tb itv_obj
				on itv_obj.fap_job_itv_seq = itv.fap_job_itv_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	<!-- 채용기업 면접전형 검색 종료-->
	
	<!-- 채용기업 기타전형 검색 시작; 2019. 1. 16. 신동철 -->
	<select id="select_company_test_etc_pcs" parameterType="Long" resultType="hashmap">
		select
			pcs.fap_job_recruit_pcs_seq
			, pcs.fap_job_recruit_pcs_gb
		    , pcs.fap_job_recruit_pcs_dtl
			, DATE_FORMAT(sch.fap_job_recruit_pcs_sch_st , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_st
		    , DATE_FORMAT(sch.fap_job_recruit_pcs_sch_et , '%Y-%m-%d %H:%i') as fap_job_recruit_pcs_sch_et
		    , sch.fap_job_recruit_pcs_sch_lo
		    , sch.fap_job_recruit_pcs_sch_detail
			, test_etc.fap_job_test_etc_obj
			, test_etc.fap_job_test_etc_dtl
			, test_etc_obj.fap_job_test_etc_obj_dtl		       
		from
			fap_job_recruit_pcs_tb pcs			
			inner join fap_job_recruit_pcs_sch_tb sch
				on sch.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
			inner join fap_job_test_etc_tb test_etc
				on pcs.fap_job_recruit_pcs_seq = test_etc.fap_job_recruit_pcs_seq
			left join fap_job_test_etc_obj_tb test_etc_obj
				on test_etc_obj.fap_job_test_etc_seq = test_etc.fap_job_test_etc_seq
		where
			pcs.fap_job_recruit_pcs_seq = #{fap_job_recruit_pcs_seq}
	</select>
	
	<!-- 채용기업 기타전형 검색 종료-->
	
	
	
	<!-- 잡페어 목로 가져오기 시작 2019. 01. 22 원병호 -->
	<!-- 잡페어 목록(진행중)-->
	<select id="select_jobfair_now" resultType="CompanyRoadmapJobfair">
		<![CDATA[
		select
			fap_jobfair_seq
		    , fap_jobfair_title
		    , fap_jobfair_st
		    , fap_jobfair_et
		from
			segroup.fap_jobfair_tb
		where
			fap_jobfair_eps = 'C1201'
		and
			fap_jobfair_st <= curdate()
		and
			fap_jobfair_et >= curdate()
		order by
			fap_jobfair_st asc;
		]]>
	</select>
	
	<!-- 잡페어 목록(시작전)-->
	<select id="select_jobfair_before" resultType="CompanyRoadmapJobfair">
		<![CDATA[
		select
			fap_jobfair_seq
		    , fap_jobfair_title
		    , fap_jobfair_st
		    , fap_jobfair_et
		from
			segroup.fap_jobfair_tb
		where
			fap_jobfair_eps = 'C1201'
		and
			fap_jobfair_st >= curdate()
		order by
			fap_jobfair_st asc;
		]]>
	</select>
	
	<!-- 잡페어 목록(종료)-->
	<select id="select_jobfair_after" resultType="CompanyRoadmapJobfair">
		<![CDATA[
		select
			fap_jobfair_seq
		    , fap_jobfair_title
		    , fap_jobfair_st
		    , fap_jobfair_et
		from
			segroup.fap_jobfair_tb
		where
			fap_jobfair_eps = 'C1201'
		and
			fap_jobfair_et <= curdate()
		order by
			fap_jobfair_st asc;
		]]>
	</select>
	
	<!-- 잡페어 목로 가져오기 끝 -->
	
	<!-- FAP 회원 약관 동의 업데이트 시작; 2019. 1. 23. 김준영 -->
	<update id="terms_update" parameterType="User">
		update
			com_user_tb
		set
			user_terms_ck = #{user_terms_ck}
		where
			user_id = #{user_id}
	</update>
	<!-- FAP 회원 약관 동의 업데이트 종료 -->
	
	<!-- 진행중인 채용공고 정보 가져오기 -->
	<resultMap type="hashmap" id="JobAdByStateMap">
		<id property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_seq" column="fap_job_ad_seq" />
		<result property="fap_job_ad_ins_dt" column="fap_job_ad_ins_dt" />
		<result property="fap_job_ad_udt_dt" column="fap_job_ad_udt_dt" />
		<result property="fap_jobfair_seq" column="fap_jobfair_seq" />
		<result property="fap_jobfair_title" column="fap_jobfair_title" />
		<result property="fap_jobfair_divide_seq" column="fap_jobfair_divide_seq" />
		<result property="fap_jobfair_divide_gb" column="fap_jobfair_divide_gb" />
		<result property="fap_job_ad_title" column="fap_job_ad_title" />
		<result property="fap_job_ad_hire_type" column="fap_job_ad_hire_type" />
		<result property="fap_job_ad_state" column="fap_job_ad_state" />
		<result property="fap_jobfair_applicable_time_st" column="fap_jobfair_applicable_time_st" />
		<result property="fap_jobfair_applicable_time_et" column="fap_jobfair_applicable_time_et" />
		<result property="fap_job_ad_apply_num" column="fap_job_ad_apply_num" />
		<result property="fap_job_ad_question_num" column="fap_job_ad_question_num" />
		<collection property="JobCateList" javaType="java.util.ArrayList" resultMap="JobCateOnGoing" />
		<collection property="JobWorkplaceList" javaType="java.util.ArrayList" resultMap="JobWorkplace" />
	</resultMap>
	<resultMap type="hashmap" id="JobCateOnGoing">
		<id property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_seq" column="fap_job_category_seq" />
		<result property="fap_job_category_gb" column="fap_job_category_gb" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplace">
		<id property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<result property="fap_job_workplace_seq" column="fap_job_workplace_seq" />
		<collection property="JobWorkplaceDtlList" javaType="java.util.ArrayList" resultMap="JobWorkplaceDtl" />
	</resultMap>
	<resultMap type="hashmap" id="JobWorkplaceDtl">
		<id property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_seq" column="fap_job_workplace_dtl_seq" />
		<result property="fap_job_workplace_dtl_gb" column="fap_job_workplace_dtl_gb" />
	</resultMap>
	<select id="select_job_ad_by_state" resultMap="JobAdByStateMap" parameterType="hashmap">
		select
			ad.fap_job_ad_seq as fap_job_ad_seq
		    ,ad.fap_job_ad_title as fap_job_ad_title
		    , ad.fap_job_ad_hire_type as fap_job_ad_hire_type
		    , ad.fap_job_ad_state as fap_job_ad_state
		    , DATE_FORMAT(ad.fap_job_ad_ins_dt, '%Y-%m-%d %H:%i') as fap_job_ad_ins_dt
		    , DATE_FORMAT(ad.fap_job_ad_udt_dt, '%Y-%m-%d %H:%i') as fap_job_ad_udt_dt
		    
		    , ad.fap_jobfair_seq as fap_jobfair_seq
		    , jobfair.fap_jobfair_title as fap_jobfair_title
		    
		    , ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    , jobfair_divide.fap_jobfair_divide_gb as fap_jobfair_divide_gb
		 
		    , cate.fap_job_category_seq as fap_job_category_seq
			, cate.fap_job_category_gb as fap_job_category_gb
			
			, wp.fap_job_workplace_seq as fap_job_workplace_seq
			, wp_dtl.fap_job_workplace_dtl_gb as fap_job_workplace_dtl_gb
			, wp_dtl.fap_job_workplace_dtl_seq as fap_job_workplace_dtl_seq
			
			, DATE_FORMAT(app.fap_jobfair_applicable_time_st, '%Y-%m-%d') as fap_jobfair_applicable_time_st
			, DATE_FORMAT(app.fap_jobfair_applicable_time_et, '%Y-%m-%d') as fap_jobfair_applicable_time_et
		    , (select
					count(*)
				from
					fap_job_apply_info_tb apply_info
				where
					ad.fap_job_ad_seq = apply_info.fap_job_ad_seq) as fap_job_ad_apply_num
			, (select
					count(*)
				from
					 fap_job_qna_question_tb q
				where
					ad.fap_job_ad_seq = q.fap_job_ad_seq) as fap_job_ad_question_num
		from
			fap_job_ad_tb ad
		left join
			fap_job_category_tb cate
		on
			ad.fap_job_ad_seq = cate.fap_job_ad_seq
		left join
			fap_jobfair_applicable_time_tb app
		on
			ad.fap_jobfair_divide_seq = app.fap_jobfair_divide_seq
		left join
			fap_job_workplace_tb wp
		on
			ad.fap_job_ad_seq = wp.fap_job_ad_seq
		left join
			fap_job_workplace_dtl_tb wp_dtl
		on
			wp.fap_job_workplace_seq = wp_dtl.fap_job_workplace_seq
		left join
			fap_jobfair_tb jobfair
		on
			ad.fap_jobfair_seq = jobfair.fap_jobfair_seq
		left join
			fap_jobfair_divide_tb jobfair_divide
		on
			ad.fap_jobfair_divide_seq = jobfair_divide.fap_jobfair_divide_seq
		where
			ad.fap_comp_id = #{fap_comp_id}
		and
			ad.fap_jobfair_seq = #{fap_jobfair_seq}
		and
			ad.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
	<if test="stateFlag == 'progressing'">
		and	
			ad.fap_job_ad_state = 'C2101'
		order by
			fap_job_ad_seq desc
	</if>
	<if test="stateFlag == 'standby'">
		and	
			ad.fap_job_ad_state in ('C2100', 'C2104')
		order by
			fap_job_ad_state desc
			,fap_job_ad_seq desc
	</if>
	<if test="stateFlag == 'completed'">
		and	
			ad.fap_job_ad_state = 'C2102'
		order by
			fap_job_ad_seq desc
	</if>
	<if test="stateFlag == 'temped'">
		and	
			ad.fap_job_ad_state = 'C2103'
		order by
			fap_job_ad_seq desc
	</if>
	</select>
	<!-- 진행중인 채용공고 정보 가져오기 끝 -->
	
	<!-- 채용공고 상태 수정 -->
	<update id="update_job_ad_state" parameterType="JobAd">
		update
			fap_job_ad_tb
		set
			fap_job_ad_state = #{fap_job_ad_state}
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</update>
	<!-- 채용공고 상태 수정 끝 -->
	
	<!-- FAP 기업 - 담당자 연결 요청 등록 시작; 2019. 2. 7. 김준영 -->
	<insert id="insert_connect_request" parameterType="CompUserConnectRequest">
		insert into
			fap_comp_user_request_tb(
				user_id
				, fap_comp_en_nm
				, fap_comp_ja_nm
				, fap_comp_user_request_ck
			) values (
				#{user_id}
				, #{fap_comp_en_nm}
				, #{fap_comp_ja_nm}
				, #{fap_comp_user_request_ck}
			)
	</insert>
	<!-- FAP 기업 - 담당자 연결 요청 등록 종료 -->
	
	<!-- FAP 기업 - 담당자 연결 요청 가져오기 시작; 2019. 2. 7. 김준영 -->
	<select id="select_comp_user_connect_request" parameterType="String" resultType="CompUserConnectRequest">
		select
			fap_comp_user_request_seq
			, user_id
			, fap_comp_en_nm
			, fap_comp_ja_nm
			, fap_comp_user_request_ck
		from
			fap_comp_user_request_tb
		where
			user_id = #{user_id}
	</select>
	<!-- FAP 기업 - 담당자 연결 요청 가져오기 종료 -->
	
	<!-- FAP 기업 - 담당자 연결 요청 삭제 시작; 2019. 2. 7. 김준영 -->
	<delete id="delete_connect_request" parameterType="int">
		delete
		from
			fap_comp_user_request_tb
		where
			fap_comp_user_request_seq = #{fap_comp_user_request_seq}
	</delete>
	<!-- FAP 기업 - 담당자 연결 요청 삭제 종료 -->
	
	<!-- FAP 기업 - 비용결제 검색 시작 2019 2 8 이종호 -->
	<select id="company_pay_for_cost" parameterType="hashmap" resultType="hashmap">
		select
		    divideTemp.fap_jobfair_divide_gb
			,divideTemp.fap_per_jobfair_divide_temp_cost
			,payment.fap_per_comp_temp_payment_vip_gb
		from
			fap_per_jobfair_temp_group_tb perGroup
		left join 
			(
				select
		            t1.fap_per_jobfair_divide_temp_cost
		            ,t1.fap_per_jobfair_temp_group_seq
		            ,t2.fap_jobfair_divide_gb
				from
					fap_per_jobfair_divide_temp_tb t1
				left join
					fap_jobfair_divide_tb t2
				on
					t1.fap_jobfair_divide_seq = t2.fap_jobfair_divide_seq
			) divideTemp
		on
			perGroup.fap_per_jobfair_temp_group_seq = divideTemp.fap_per_jobfair_temp_group_seq
		left join
			fap_per_comp_temp_payment_tb payment
		on
			perGroup.fap_per_jobfair_temp_group_seq = payment.fap_per_jobfair_temp_group_seq
		where
			perGroup.fap_per_jobfair_temp_group_seq = 
		(
			select
				temp_payment.fap_per_jobfair_temp_group_seq
			from
				fap_per_comp_temp_payment_tb as temp_payment
                ,fap_per_jobfair_temp_group_tb as temp_group
			where
				temp_group.fap_jobfair_seq = #{fap_jobfair_seq}
			and
				temp_payment.fap_per_jobfair_temp_group_seq = temp_group.fap_per_jobfair_temp_group_seq
			and
				temp_payment.fap_comp_id = 
				(
					select
						comp_user.fap_comp_id
					from
						fap_company_user_tb as comp_user
						,(select
								comp_user_connect.fap_comp_id as fap_comp_id
						   from
								fap_comp_user_connect_tb as comp_user_connect
								,(select
										user_id
									from
										com_user_tb
									where
										user_flag in ('A0103','A0104')
								   ) as cuser
						   where
								comp_user_connect.user_id = cuser.user_id
							and
								cuser.user_id = #{user_id}
							group by
								comp_user_connect.fap_comp_id
						   ) as comp_connect
					where
						comp_user.fap_comp_id = comp_connect.fap_comp_id
				)
			and
				temp_payment.fap_per_comp_temp_payment_gb = 'E0300'
        )
        group by divideTemp.fap_jobfair_divide_gb
	</select>
	<!-- FAP 기업 - 비용결제 검색 종료 -->
	
	<!-- FAP 잡페어 리스트 가져오기(페이징 처리 후) 시작; 2019. 2. 9. 정대영 -->
	<select id="select_job_ad_load_list_paging" resultType="hashmap" parameterType="hashmap">
		select
			job_ad.fap_job_ad_seq as fap_job_ad_seq
			, job_ad.fap_job_ad_title as fap_job_ad_title
			, jobfair.fap_jobfair_title as fap_jobfair_title
			, (select
			   		jobfair_divide.fap_jobfair_divide_gb
			   from
			   		fap_jobfair_divide_tb as jobfair_divide
			   where
			   		job_ad.fap_jobfair_divide_seq = jobfair_divide.fap_jobfair_divide_seq
				) as fap_jobfair_divide_gb
		from
			fap_job_ad_tb as job_ad
            ,fap_jobfair_tb as jobfair
		where
			job_ad.fap_comp_id = #{fap_comp_id}
		and
			job_ad.fap_jobfair_seq = jobfair.fap_jobfair_seq
		order by
			job_ad.fap_job_ad_udt_dt desc
	</select>
	<!-- FAP 잡페어 리스트 가져오기(페이징 처리 후) 종료 -->
	
	<!-- FAP 잡페어 리스트 총 개수 가져오기 시작; 2019. 2. 9. 정대영 -->
	<select id="select_job_ad_load_list_count" resultType="Int" parameterType="hashmap">
		select
			count(*)
		from
			fap_job_ad_tb as job_ad
			,fap_jobfair_tb as jobfair
		where
			job_ad.fap_comp_id = #{fap_comp_id}
		and
			jobfair.fap_jobfair_seq = job_ad.fap_jobfair_seq
	</select>
	<!-- FAP 잡페어 리스트 가져오기 종료 -->

	<!-- FAP 채용공고 삭제 시작; 2019. 2. 11. 김준영 -->
	<delete id="delete_job_ad_box" parameterType="long">
		delete
		from
			fap_job_ad_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</delete>
	<!-- FAP 채용공고 삭제 종료 -->
	
	<!-- FAP 에이전시 - 기업 연결 삭제 시작(유저 아이디); 2019. 2. 12. 김준영 -->
	<delete id="delete_ag_comp_connect" parameterType="String">
		delete
		from
			fap_ag_comp_connect_tb
		where
			fap_comp_id = (select
								fap_comp_id
						   from
						   		fap_comp_user_connect_tb
						   where
						   		user_id = #{user_id}
						   )
	</delete>
	<!-- FAP 에이전시 - 기업 연결 삭제 시작(유저 아이디) -->
	
	<!-- FAP 채용공고 파일 정보 -->
	<select id="select_job_file" parameterType="long" resultType="JobFile">
		select
			fap_job_file_seq
		    , fap_job_file_gb
		    , fap_job_file_saved
		    , fap_job_file_origin
		from
			fap_job_file_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
		
	<!-- FAP 공지사항 게시물 조회 시작; 2019. 2. 15.  김준영 -->
	<select id="board_search_all" parameterType="hashmap" resultType="BoardGroup">
		select * 
		from (
			select  (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					board_seq
					, board_gb
					, board_nm
				from
					com_board_group_tb
				where
					board_detail_gb = 'A1413'
				<if test="search_division != null and search_division != '' and search_type != null and search_type != ''">
				and
					board_tp = #{search_type}
				</if>
			) A, (SELECT @ROWNUM := 0) B 
        		order by A.board_content_seq desc
		) C where rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>
	<!-- FAP 공지사항 게시물 조회 종료  -->

	<!-- FAP 공지사항 게시물 개수 조회 시작; 2019. 2. 15. 김준영 -->
	<select id="board_search_all_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			com_board_group_tb
		where
			board_detail_gb = 'A1413'
		<if test="search_division != null and search_division != '' and search_type != null and search_type != ''">
		and
			board_tp = #{search_type}
		</if>
	</select>
	<!-- FAP 공지사항 게시물 개수 조회 종료  -->

	<!-- FAP 공지사항 게시판 내용 검색 시작; 2019. 2. 15. 김준영 -->
	<select id="company_board_contents_search" parameterType="hashmap" resultType="BoardContent">
		select * 
		from (
			select  (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					content.board_seq
					, content.board_content_seq
					, content.board_content_title
					, content.board_content_nm
					, content.board_content_hit
					, DATE_FORMAT(board_content_ins_dt, '%Y-%m-%d') as board_content_ins_dt
					, DATE_FORMAT(board_content_udt_dt, '%Y-%m-%d') as board_content_udt_dt
					, groups.board_tp
					, groups.board_gb
				from
					com_board_content_tb content
					, com_board_group_tb groups
					, (SELECT @ROWNUM := 0) B
				where
					groups.board_detail_gb = #{board_detail_gb}
					and groups.board_seq = content.board_seq
				and
					(select
						fap_notice_view_target_ck
					 from
					 	fap_notice_content_tb as notice_content
					 where
					 	notice_content.board_content_seq = content.board_content_seq
					 )  in ('B2600' , 'B2603')
			) A
		    order by CAST(A.board_content_seq AS INTEGER) desc limit 6
		) C
		where
			rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>
	<!-- FAP 공지사항 게시판 내용 검색 종료 -->

	<!-- FAP 공지사항 게시판 내용 count 조회 시작; 2019. 2. 15. 김준영 -->
	<select id="board_contents_count" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			com_board_content_tb content
		inner join
			com_board_group_tb grp
		on
			grp.board_seq = content.board_seq
		where
			board_detail_gb = #{board_detail_gb}
		<if test="board_detail_gb=='A1700'">
			and
				(select
					fap_notice_view_target_ck
				 from
				 	fap_notice_content_tb as notice_content
				 where
				 	notice_content.board_content_seq = content.board_content_seq
				 )  in ('B2600' , 'B2603')
			</if>
			<if test="board_detail_gb=='A1701'">
			and
				(select
					job_info.fap_open_job_info_view_target_ck
				 from
				 	fap_open_job_info_tb as job_info
				 where
				 	job_info.board_content_seq = content.board_content_seq
				 )  in ('B2600' , 'B2603')
			</if>		
		  <if test="searchKey!='' and searchKey!=null ">	 
			   <if test="searchKey=='searchTitle'">
				and
					board_content_title like concat('%',#{searchValue},'%')
				</if>  
					<if test="searchKey=='searchContent'">
				and
					board_content_ct like concat('%',#{searchValue},'%')
				</if>  	
		 </if>
	</select>
	<!-- 게시판 count 조회 종료 -->
	
	<!-- FAP 잡페어 기업 게시판 리스트 검색 시작; 2019. 7. 16. 김경아 -->	
	<select id="company_board_contents_list_search" parameterType="hashmap" resultType="BoardContent">
		select * 
		from (
			select  (@ROWNUM := @ROWNUM + 1) as rn, A.* 
			from (
				select
					content.board_seq
					, content.board_content_seq
					, content.board_content_title
					, content.board_content_nm
					, content.board_content_hit
					, DATE_FORMAT(board_content_ins_dt, '%Y-%m-%d') as board_content_ins_dt
					, DATE_FORMAT(board_content_udt_dt, '%Y-%m-%d') as board_content_udt_dt
					, groups.board_tp
					, groups.board_gb
					, groups.board_detail_gb
				from
					com_board_content_tb content
					inner join 
						com_board_group_tb groups
					on
						groups.board_seq = content.board_seq 
					, (SELECT @ROWNUM := 0) B
				where
				      groups.board_detail_gb = #{board_detail_gb}					
				<if test="board_detail_gb=='A1700'">
					and
						(select
							fap_notice_view_target_ck
						 from
						 	fap_notice_content_tb as notice_content
						 where
						 	notice_content.board_content_seq = content.board_content_seq
						 )  in ('B2600' , 'B2603')
					</if>
					<if test=" board_detail_gb=='A1701'">
					and
						(select
							job_info.fap_open_job_info_view_target_ck
						 from
						 	fap_open_job_info_tb as job_info
						 where
						 	job_info.board_content_seq = content.board_content_seq
						 )  in ('B2600' , 'B2603')
					</if>		
				   <if test="searchKey!=null and searchKey !=''">							
						<if test='searchKey=="searchTitle"'>
						and 
							board_content_title like concat('%',#{searchValue},'%')
						</if>  
							<if test='searchKey=="searchContent"'>
						and
							board_content_ct like concat('%',#{searchValue},'%')
						</if> 
					</if>	 
			) A
		    order by CAST(A.board_content_seq AS INTEGER) desc
		) C
		where
			rn between #{adminPager.pageBegin} and #{adminPager.pageEnd}
	</select>
	<!-- FAP 잡페어 기업 게시판 리스트 검색 종료 -->	
	
 
	<!-- 채용공고 게시판 세부내용 검색 시작 -->
	<resultMap type="hashmap" id="boardContentMap">
		<id property="board_content_seq" column="board_content_seq" />
		<result property="board_seq" column="board_seq" />
		<result property="board_content_title" column="board_content_title" />
		<result property="board_content_ct" column="board_content_ct" />
		<result property="board_content_nm" column="board_content_nm" />
		<result property="board_content_hit" column="board_content_hit" />
		<result property="board_content_udt_dt" column="board_content_udt_dt" />
		<result property="board_content_imp" column="board_content_imp" />
		<result property="fap_intern_view_target_ck" column="fap_intern_view_target_ck" />
		<association property="noticeContent" resultMap="fapNoticeContent"></association>
		<collection property="fileList" javaType="java.util.ArrayList" resultMap="boardContentFile" />
	</resultMap>
	<resultMap type="hashmap" id="boardContentFile">
		<id property="board_file_seq" column="board_file_seq" />
		<result property="board_file_saved" column="board_file_saved" />
		<result property="board_file_origin" column="board_file_origin" />
	</resultMap>
	<resultMap type="hashmap" id="fapNoticeContent">
		<id property="fap_notice_seq" column="fap_notice_seq"/>
		<result property="fap_notice_view_target_ck" column="fap_notice_view_target_ck"/>
		<result property="fap_notice_kind" column="fap_notice_kind"/>
	</resultMap>
	<select id="board_contents_detail" parameterType="int" resultMap="boardContentMap">
		select
			content.board_seq
			, content.board_content_seq
			, content.board_content_title
		    , content.board_content_ct
			, content.board_content_nm
			, content.board_content_hit
			, content.board_content_imp
			, DATE_FORMAT(content.board_content_udt_dt, '%Y-%m-%d') as board_content_udt_dt
		    , file.board_file_seq
		    , file.board_file_saved
		    , file.board_file_origin
		    , internship_content.fap_notice_view_target_ck as fap_intern_view_target_ck
		    , notice_content.fap_notice_seq
		    , notice_content.fap_notice_view_target_ck
		    , notice_content.fap_notice_kind
		from
			com_board_content_tb content
		left join
			com_board_file_tb file
		on
			content.board_content_seq = file.board_content_seq
		left join
			fap_notice_content_tb as notice_content
		on
			content.board_content_seq = notice_content.board_content_seq
		left join
			fap_internship_content_tb as internship_content
		on
			content.board_content_seq = internship_content.board_content_seq
		where
			content.board_content_seq = #{board_content_seq}
	</select>
	<!-- 채용공고 게시판 세부내용 검색 종료 -->
	
	<!-- 채용공고 정규지원자관리 진행중, 합격, 예비합격 지원자 정보 검색 시작; 2019. 2. 15 신동철 -->	
	<resultMap type="hashmap" id="applyInfoMap">
		<id property="fap_job_app_info_seq" column="fap_job_app_info_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_comp_id" column="fap_comp_id"/>
		<result property="user_id" column="user_id"/>
		<result property="fap_job_app_info_ins_dt" column="fap_job_app_info_ins_dt"/>
		<result property="fap_job_ad_is_mismatching" column="fap_job_ad_is_mismatching"/>
		<result property="user_flag" column="user_flag"/>
		<association property="resumeMap" resultMap="resumeMap"/>
		<collection property="applyResultMap" javaType="java.util.ArrayList" resultMap="applyResultMap"/>
		<collection property="finalResultMap" javaType="java.util.ArrayList" resultMap="finalResultMap"/>
		<collection property="resumeNmList" javaType="java.util.ArrayList" resultMap="resumeNmMap" />
	</resultMap>
	<resultMap type="hashmap" id="applyResultMap">
		<id property="fap_job_app_rt_seq" column="fap_job_app_rt_seq"/>
		<result property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq"/>		
		<result property="fap_job_app_rt_acp" column="fap_job_app_rt_acp"/>
	</resultMap>
	<resultMap type="hashmap" id="finalResultMap">
		<id property="fap_job_app_final_rt_seq" column="fap_job_app_final_rt_seq"/>
		<result property="fap_job_app_final_rt_acp" column="fap_job_app_final_rt_acp"/>		
		<result property="fap_job_app_standby_rank" column="fap_job_app_standby_rank"/>
		<result property="fap_job_app_pass_comment" column="fap_job_app_pass_comment"/>
		<result property="fap_job_app_choice_comp_gb" column="fap_job_app_choice_comp_gb"/>
		<result property="fap_job_app_approval_gb" column="fap_job_app_approval_gb"/>
	</resultMap>
	<resultMap type="hashmap" id="resumeMap">
		<id property="fap_resume_seq" column="fap_resume_seq"/>		
		<result property="fap_resume_gender" column="fap_resume_gender"/>
		<result property="fap_resume_birth" column="fap_resume_birth" />
		<result property="fap_resume_pic_saved" column="fap_resume_pic_saved" />		
	</resultMap>
	<resultMap type="hashmap" id="resumeNmMap">
		<id property="fap_resume_nm_seq" column="fap_resume_nm_seq" />
		<result property="fap_resume_nm" column="fap_resume_nm" />
		<result property="fap_resume_lang_gb" column="fap_resume_lang_gb" />
	</resultMap>
	
	<select id="search_applicant_info" parameterType="hashmap" resultMap="applyInfoMap">
		select
			apply_info.fap_job_app_info_seq
			, apply_info.fap_job_ad_seq
			, apply_info.fap_comp_id
			, DATE_FORMAT(apply_info.fap_job_app_info_ins_dt, '%Y-%m-%d') as fap_job_app_info_ins_dt
			, apply_info.fap_job_ad_is_mismatching
			, apply_result.fap_job_app_rt_seq
			, apply_result.fap_job_recruit_pcs_seq
			, apply_result.user_id
			, apply_result.fap_job_app_rt_acp			
			, final_result.fap_job_app_final_rt_seq
			, final_result.fap_job_app_final_rt_acp
			, final_result.fap_job_app_standby_rank
			, final_result.fap_job_app_pass_comment
			, final_result.fap_job_app_choice_comp_gb
			, final_result.fap_job_app_approval_gb
			, resume.fap_resume_seq
			, resume.fap_resume_gender
			, DATE_FORMAT(resume.fap_resume_birth, '%Y') as fap_resume_birth
			, resume.fap_resume_pic_saved
			, resume_name.fap_resume_nm_seq
			, resume_name.fap_resume_nm
			, resume_name.fap_resume_lang_gb
			, cuser.user_flag
		from
			fap_job_apply_info_tb apply_info
			inner join fap_job_apply_result_tb apply_result
				on apply_result.user_id = apply_info.user_id
				and apply_result.fap_job_app_info_seq = apply_info.fap_job_app_info_seq
			inner join fap_job_apply_final_result_tb final_result
				on final_result.fap_job_app_info_seq = apply_info.fap_job_app_info_seq	
			inner join fap_resume_tb resume
				on resume.user_id = apply_info.user_id
				and resume.fap_resume_seq = apply_info.fap_resume_seq
			inner join fap_resume_name_tb resume_name
				on resume_name.fap_resume_seq = resume.fap_resume_seq
			inner join com_user_tb cuser
				on apply_result.user_id = cuser.user_id
		where
			apply_info.fap_job_ad_seq = #{fap_job_ad_seq}
			and apply_info.fap_comp_id = #{fap_comp_id}
			and final_result.fap_job_app_final_rt_acp != 'D0002'
			and apply_info.fap_job_ad_is_mismatching = 'C4900'
		order by
			final_result.fap_job_app_final_rt_acp
			,final_result.fap_job_app_standby_rank
			,apply_info.fap_job_app_info_seq
			,apply_result.fap_job_app_rt_seq
			,resume_name.fap_resume_lang_gb
	</select>
	<!-- 채용공고 정규지원자관리 진행중, 합격, 예비합격 지원자 정보 검색 종료 -->
	
	<!-- 채용공고 미스매칭 지원자관리 진행중, 합격, 예비합격 지원자 정보 검색 시작; 2019. 2. 15 신동철 -->	
	<resultMap type="hashmap" id="missApplyInfoMap">
		<id property="fap_job_app_info_seq" column="fap_job_app_info_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_comp_id" column="fap_comp_id"/>
		<result property="user_id" column="user_id"/>
		<result property="fap_job_app_info_ins_dt" column="fap_job_app_info_ins_dt"/>
		<result property="fap_job_ad_is_mismatching" column="fap_job_ad_is_mismatching"/>
		<result property="user_flag" column="user_flag"/>
		<association property="missResumeMap" resultMap="missResumeMap"/>
		<collection property="missApplyResultMap" javaType="java.util.ArrayList" resultMap="missApplyResultMap"/>	
		<collection property="missFinalResultMap" javaType="java.util.ArrayList" resultMap="missFinalResultMap"/>	
		<collection property="missResumeNmList" javaType="java.util.ArrayList" resultMap="missResumeNmMap" />
	</resultMap>
	<resultMap type="hashmap" id="missApplyResultMap">
		<id property="fap_job_app_rt_seq" column="fap_job_app_rt_seq"/>
		<result property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq"/>		
		<result property="fap_job_app_rt_acp" column="fap_job_app_rt_acp"/>
	</resultMap>
	<resultMap type="hashmap" id="missFinalResultMap">
		<id property="fap_job_app_final_rt_seq" column="fap_job_app_final_rt_seq"/>
		<result property="fap_job_app_final_rt_acp" column="fap_job_app_final_rt_acp"/>		
		<result property="fap_job_app_standby_rank" column="fap_job_app_standby_rank"/>
		<result property="fap_job_app_pass_comment" column="fap_job_app_pass_comment"/>
		<result property="fap_job_app_choice_comp_gb" column="fap_job_app_choice_comp_gb"/>
		<result property="fap_job_app_approval_gb" column="fap_job_app_approval_gb"/>
	</resultMap>
	<resultMap type="hashmap" id="missResumeMap">
		<id property="fap_resume_seq" column="fap_resume_seq"/>		
		<result property="fap_resume_gender" column="fap_resume_gender"/>
		<result property="fap_resume_birth" column="fap_resume_birth" />
		<result property="fap_resume_pic_saved" column="fap_resume_pic_saved" />		
	</resultMap>
	<resultMap type="hashmap" id="missResumeNmMap">
		<id property="fap_resume_nm_seq" column="fap_resume_nm_seq" />
		<result property="fap_resume_nm" column="fap_resume_nm" />
		<result property="fap_resume_lang_gb" column="fap_resume_lang_gb" />
	</resultMap>
	
	<select id="search_missmatching_applicant_info" parameterType="hashmap" resultMap="missApplyInfoMap">
		select
			apply_info.fap_job_app_info_seq
			, apply_info.fap_job_ad_seq
			, apply_info.fap_comp_id
			, DATE_FORMAT(apply_info.fap_job_app_info_ins_dt, '%Y-%m-%d') as fap_job_app_info_ins_dt
			, apply_info.fap_job_ad_is_mismatching
			, apply_result.fap_job_app_rt_seq
			, apply_result.fap_job_recruit_pcs_seq
			, apply_result.user_id
			, apply_result.fap_job_app_rt_acp
			, final_result.fap_job_app_final_rt_seq
			, final_result.fap_job_app_final_rt_acp
			, final_result.fap_job_app_standby_rank
			, final_result.fap_job_app_pass_comment
			, final_result.fap_job_app_choice_comp_gb
			, final_result.fap_job_app_approval_gb
			, resume.fap_resume_seq
			, resume.fap_resume_gender
			, DATE_FORMAT(resume.fap_resume_birth, '%Y') as fap_resume_birth
			, resume.fap_resume_pic_saved
			, resume_name.fap_resume_nm_seq
			, resume_name.fap_resume_nm
			, resume_name.fap_resume_lang_gb
			, cuser.user_flag
		from
			fap_job_apply_info_tb apply_info
			inner join fap_job_apply_result_tb apply_result
				on apply_result.user_id = apply_info.user_id
				and apply_result.fap_job_app_info_seq = apply_info.fap_job_app_info_seq
			inner join fap_job_apply_final_result_tb final_result
				on final_result.fap_job_app_info_seq = apply_info.fap_job_app_info_seq
			inner join fap_resume_tb resume
				on resume.user_id = apply_info.user_id
				and resume.fap_resume_seq = apply_info.fap_resume_seq
			inner join fap_resume_name_tb resume_name
				on resume_name.fap_resume_seq = resume.fap_resume_seq		
			inner join com_user_tb cuser
				on apply_result.user_id = cuser.user_id
		where
			apply_info.fap_job_ad_seq = #{fap_job_ad_seq}
			and apply_info.fap_comp_id = #{fap_comp_id}
			and final_result.fap_job_app_final_rt_acp != 'D0002'
			and apply_info.fap_job_ad_is_mismatching = 'C4901'
		order by
			final_result.fap_job_app_final_rt_acp
			,final_result.fap_job_app_standby_rank
			,apply_info.fap_job_app_info_seq
			,apply_result.fap_job_app_rt_seq
			,resume_name.fap_resume_lang_gb
	</select>
	<!-- 채용공고 미스매칭 지원자관리 진행중, 합격, 예비합격 지원자 정보 검색 종료 -->
	
	<!-- 채용공고 지원자관리 채용전형 정보 검색 시작 2019.2.15. 신동철 -->
	<select id="select_job_ad_recruit_pcs" parameterType="Long" resultType="hashmap">
		select
			fap_job_recruit_pcs_seq
			, fap_job_recruit_pcs_gb
		from
			fap_job_recruit_pcs_tb
		where 
			fap_job_ad_seq = #{fap_job_ad_seq}
		order by 
			fap_job_recruit_pcs_od asc
	</select>
	<!-- 채용공고 지원자관리 채용전형 정보 검색 종료 -->
	
	<!-- 채용공고 지원자관리 불합격자 지원자 정보 검색 시작; 2019. 2. 15 신동철 -->	
	<resultMap type="hashmap" id="unacceptedApplyInfoMap">
		<id property="fap_job_app_info_seq" column="fap_job_app_info_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_comp_id" column="fap_comp_id"/>
		<result property="user_id" column="user_id"/>
		<result property="fap_job_app_info_ins_dt" column="fap_job_app_info_ins_dt"/>
		<result property="fap_job_ad_is_mismatching" column="fap_job_ad_is_mismatching"/>
		<result property="user_flag" column="user_flag"/>
		<association property="unacceptedResumeMap" resultMap="unacceptedResumeMap"/>
		<collection property="unacceptedApplyResultMap" javaType="java.util.ArrayList" resultMap="unacceptedApplyResultMap"/>		
		<collection property="unacceptedResumeNmList" javaType="java.util.ArrayList" resultMap="unacceptedResumeNmMap" />
	</resultMap>
	<resultMap type="hashmap" id="unacceptedApplyResultMap">
		<id property="fap_job_app_rt_seq" column="fap_job_app_rt_seq"/>
		<result property="fap_job_recruit_pcs_seq" column="fap_job_recruit_pcs_seq"/>		
		<result property="fap_job_app_rt_acp" column="fap_job_app_rt_acp"/>
	</resultMap>
	<resultMap type="hashmap" id="unacceptedResumeMap">
		<id property="fap_resume_seq" column="fap_resume_seq"/>		
		<result property="fap_resume_gender" column="fap_resume_gender"/>
		<result property="fap_resume_birth" column="fap_resume_birth" />
		<result property="fap_resume_pic_saved" column="fap_resume_pic_saved" />		
	</resultMap>
	<resultMap type="hashmap" id="unacceptedResumeNmMap">
		<id property="fap_resume_nm_seq" column="fap_resume_nm_seq" />
		<result property="fap_resume_nm" column="fap_resume_nm" />
		<result property="fap_resume_lang_gb" column="fap_resume_lang_gb" />
	</resultMap>
	
	<select id="search_unaccepted_applicant_info" parameterType="hashmap" resultMap="unacceptedApplyInfoMap">
		select
			apply_info.fap_job_app_info_seq
			, apply_info.fap_job_ad_seq
			, apply_info.fap_comp_id
			, DATE_FORMAT(apply_info.fap_job_app_info_ins_dt, '%Y-%m-%d') as fap_job_app_info_ins_dt
			, apply_info.fap_job_ad_is_mismatching
			, apply_result.fap_job_app_rt_seq
			, apply_result.fap_job_recruit_pcs_seq
			, apply_result.user_id
			, apply_result.fap_job_app_rt_acp
			, resume.fap_resume_seq
			, resume.fap_resume_gender
			, DATE_FORMAT(resume.fap_resume_birth, '%Y') as fap_resume_birth
			, resume.fap_resume_pic_saved
			, resume_name.fap_resume_nm_seq
			, resume_name.fap_resume_nm
			, resume_name.fap_resume_lang_gb			
			, cuser.user_flag
		from
			fap_job_apply_info_tb apply_info
			inner join fap_job_apply_result_tb apply_result
				on apply_result.user_id = apply_info.user_id
				and apply_result.fap_job_app_info_seq = apply_info.fap_job_app_info_seq
			inner join fap_job_apply_final_result_tb final_result
				on final_result.fap_job_app_info_seq = apply_result.fap_job_app_info_seq
			inner join fap_resume_tb resume
				on resume.user_id = apply_info.user_id
				and resume.fap_resume_seq = apply_info.fap_resume_seq
			inner join fap_resume_name_tb resume_name
				on resume_name.fap_resume_seq = resume.fap_resume_seq		
			inner join com_user_tb cuser
				on apply_result.user_id = cuser.user_id
		where
			apply_info.fap_job_ad_seq = #{fap_job_ad_seq}
			and apply_info.fap_comp_id = #{fap_comp_id}
			and final_result.fap_job_app_final_rt_acp = 'D0002'
	</select>
	<!-- 채용공고 지원자관리 불합격자 지원자 정보 검색 종료 -->
	
	<!-- 시험전형 파일 정보 -->
	<!-- file path에 recruit_pcs_seq가 필요하므로, 편의상 exam_seq에 담아옴 -->
	<select id="select_job_exam_file" parameterType="long" resultType="JobExamFile">
		select
			exam_file.fap_job_exam_file_seq
		    , exam_file.fap_job_exam_file_saved
		    , exam_file.fap_job_exam_file_origin
		    , exam.fap_job_recruit_pcs_seq as fap_job_exam_seq
		from
			fap_job_exam_file_tb exam_file
		join
			fap_job_exam_tb exam
		on
			exam_file.fap_job_exam_seq = exam.fap_job_exam_seq
		join
			fap_job_recruit_pcs_tb pcs
		on
			exam.fap_job_recruit_pcs_seq = pcs.fap_job_recruit_pcs_seq
		where
			pcs.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 시험전형 파일 정보 -->

	<!-- 지원자 전형별 지원결과 수정 시작; 2019. 2. 23. 신동철 -->
	<update id="update_fap_job_apply_result" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_job_apply_result_tb
			set			
		      	fap_job_app_rt_acp = #{element.fap_job_app_rt_acp}
		      	, fap_job_app_rt_udt_id = #{element.fap_job_app_rt_udt_id}
			where			
				fap_job_app_rt_seq = #{element.fap_job_app_rt_seq}
		</foreach>
	</update>
	<!-- 지원자 전형별 지원결과 수정 종료 -->

	<!-- 지원자 최종결과 수정 시작; 2019. 2. 23. 신동철 -->
	<update id="update_fap_job_final_result" parameterType="java.util.ArrayList">
		<foreach item="element" index="index" collection="list" open=" " separator=";" close=" ">
			update
				fap_job_apply_final_result_tb
			set			
		      	fap_job_app_final_rt_acp = #{element.fap_job_app_final_rt_acp}
		      	,fap_job_app_final_rt_acp_user = #{element.fap_job_app_final_rt_acp}
		      	, fap_job_app_standby_rank = #{element.fap_job_app_standby_rank}
		      	, fap_job_app_standby_rank_user = #{element.fap_job_app_standby_rank}
		      	, fap_job_app_final_rt_udt_id = #{element.fap_job_app_final_rt_udt_id}
			where			
				fap_job_app_final_rt_seq = #{element.fap_job_app_final_rt_seq}
		</foreach>
	</update>
	<!-- 지원자 최종결과 수정 종료 -->

	<!-- 지원자 최종결과 합격사유 등록 시작; 2019. 2. 24. 신동철 -->
	<update id="insert_pass_comment" parameterType="JobApplyFinalResult">
			update
				fap_job_apply_final_result_tb
			set			
		      	fap_job_app_pass_comment = #{fap_job_app_pass_comment}
		      	, fap_job_app_final_rt_udt_id = #{fap_job_app_final_rt_udt_id}
			where			
				fap_job_app_final_rt_seq = #{fap_job_app_final_rt_seq}
	</update>
	<!-- 지원자 최종결과 합격사유 등록 종료 -->
	
	<!-- 최종결과 합격한 내정자 등록 시작; 2019. 2. 26 신동철 -->
	<insert id="insert_nominee" parameterType="java.util.ArrayList">
		insert into
			fap_nominee_tb
			(
                fap_job_ad_seq
                , fap_jobfair_seq     
                , fap_jobfair_divide_seq
                , fap_comp_id
                , user_id
                , fap_nominee_ins_id
                , fap_nominee_udt_id
			)values
			<foreach item="element" index="index" collection="list" open=" " separator="," close=" ">
			(
				#{element.fap_job_ad_seq}
                , #{element.fap_jobfair_seq}
                , #{element.fap_jobfair_divide_seq}
                , #{element.fap_comp_id}
                , #{element.user_id}
                , #{element.fap_nominee_ins_id}
                , #{element.fap_nominee_udt_id}
			)
			</foreach>
	</insert>	
	<!-- 최종결과 합격한 내정자 등록 종료 -->

	<!-- 내정자 정보 검색 시작; 2019. 2. 26. 신동철-->
	<select id="select_nominee" parameterType="hashmap" resultType="FAPNominee">
		select
			fap_nominee_seq
			, fap_job_ad_seq
			, fap_jobfair_seq
			, fap_jobfair_divide_seq
			, fap_comp_id
			, user_id
		from
			fap_nominee_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
			and user_id = #{user_id}
	</select>

	<!-- 최종결과가 불합격으로 바뀐 내정자 삭제 시작; 2019. 2. 26. 신동철 -->
	<delete id="delete_nominee" parameterType="long">
		delete
		from 
			fap_nominee_tb
		where
			fap_nominee_seq = #{fap_nominee_seq}	
	</delete>
	<!-- 최종결과가 불합격으로 바뀐 내정자 삭제 종료 -->

	
	<resultMap type="hashmap" id="jobQNAq">
		<id property="fap_job_qna_question_seq" column="fap_job_qna_question_seq"/>
		<result property="fap_job_qna_question_seq" column="fap_job_qna_question_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_job_qna_question_title" column="fap_job_qna_question_title"/>
		<result property="fap_job_qna_question_content" column="fap_job_qna_question_content"/>
		<result property="fap_job_qna_question_per" column="fap_job_qna_question_per"/>
		<result property="fap_job_qna_question_state" column="fap_job_qna_question_state"/>
		<result property="fap_job_qna_question_ins_id" column="fap_job_qna_question_ins_id"/>
		<result property="fap_job_qna_question_ins_dt" column="fap_job_qna_question_ins_dt"/>
		<result property="fap_job_qna_question_udt_dt" column="fap_job_qna_question_udt_dt"/>
		<result property="fap_job_qna_refuse_reason" column="fap_job_qna_refuse_reason"/>
		<association property="jobQNAa" resultMap="jobQNAa"/>
	</resultMap>
	<resultMap type="hashmap" id="jobQNAa">
		<id property="fap_job_qna_answer_seq" column="fap_job_qna_answer_seq"/>
		<result property="fap_job_qna_answer_seq" column="fap_job_qna_answer_seq"/>		
		<result property="fap_job_qna_question_seq" column="fap_job_qna_question_seq"/>
		<result property="fap_job_qna_answer_content" column="fap_job_qna_answer_content"/>
		<result property="fap_job_qna_answer_ins_dt" column="fap_job_qna_answer_ins_dt"/>
		<result property="fap_job_qna_answer_udt_dt" column="fap_job_qna_answer_udt_dt"/>
	</resultMap>
	
	<!-- Q&A 리스트 가져오기; 2019.03.05 원병호 -->
	<select id="select_job_qna" parameterType="long" resultMap="jobQNAq">
		select
			q.fap_job_qna_question_seq
		    , q.fap_job_ad_seq
		    , q.fap_job_qna_question_title
		    , q.fap_job_qna_question_content
		    , q.fap_job_qna_question_per
		    , q.fap_job_qna_question_state
		    , q.fap_job_qna_refuse_reason
		    , DATE_FORMAT(q.fap_job_qna_question_ins_dt, '%Y-%m-%d') as fap_job_qna_question_ins_dt
		    , DATE_FORMAT(q.fap_job_qna_question_udt_dt, '%Y-%m-%d') as fap_job_qna_question_udt_dt
		from
			fap_job_qna_question_tb q
		where
			q.fap_job_ad_seq = #{fap_job_ad_seq}
		and
			q.fap_job_qna_question_per = 'C5101'
		order by
			q.fap_job_qna_question_ins_dt desc
	
	</select>

	<!-- Q&A 질문+답변 가져오기; 2019.03.06 원병호 -->
	<select id="select_job_qna_one" parameterType="long" resultMap="jobQNAq">
		select
			q.fap_job_qna_question_seq
		    , q.fap_job_ad_seq
		    , q.fap_job_qna_question_title
		    , q.fap_job_qna_question_content
		    , q.fap_job_qna_question_per
		    , q.fap_job_qna_question_state
		    , q.fap_job_qna_refuse_reason
		    , q.fap_job_qna_question_ins_id
		    , DATE_FORMAT(q.fap_job_qna_question_ins_dt, '%Y-%m-%d') as fap_job_qna_question_ins_dt
		    , DATE_FORMAT(q.fap_job_qna_question_udt_dt, '%Y-%m-%d') as fap_job_qna_question_udt_dt
		    , a.fap_job_qna_answer_seq
		    , a.fap_job_qna_question_seq
		    , a.fap_job_qna_answer_content
		    , DATE_FORMAT(a.fap_job_qna_answer_ins_dt, '%Y-%m-%d') as fap_job_qna_answer_ins_dt
		    , DATE_FORMAT(a.fap_job_qna_answer_udt_dt, '%Y-%m-%d') as fap_job_qna_answer_udt_dt
		from
			fap_job_qna_question_tb q
		left join
			fap_job_qna_answer_tb a
		on
			q.fap_job_qna_question_seq = a.fap_job_qna_question_seq
		where
			q.fap_job_qna_question_seq = #{fap_job_qna_question_seq}
	</select>

	<!-- Q&A 답변 등록; 2019.03.06 원병호 -->
	<insert id="insert_job_qna_question" parameterType="FapQnaA">
		insert into
			fap_job_qna_answer_tb(
			fap_job_qna_question_seq
		    , fap_job_qna_answer_content
		    , fap_job_qna_answer_ins_id
		    , fap_job_qna_answer_udt_id
		    )values(
				#{fap_job_qna_question_seq}
		        , #{fap_job_qna_answer_content}
		        , #{fap_job_qna_answer_ins_id}
		        , #{fap_job_qna_answer_udt_id}
		    )
	</insert>
	
	<!-- Q&A 질문 상태를 답변완료로 바꾸는 쿼리; 2019.03.06 원병호 -->
	<update id="update_job_qna_question_approve" parameterType="long">
		update
			fap_job_qna_question_tb
		set
			fap_job_qna_question_state = 'C1101'
		where
			fap_job_qna_question_seq = #{fap_job_qna_question_seq}
	</update>
	
	<!-- Q&A 답변 수정; 2019.03.06 원병호 -->
	<update id="update_job_qna_question" parameterType="FapQnaA">
		update
			fap_job_qna_answer_tb
		set
			fap_job_qna_answer_content = #{fap_job_qna_answer_content}
			, fap_job_qna_answer_udt_id = #{fap_job_qna_answer_udt_id}
		where
			fap_job_qna_answer_seq = #{fap_job_qna_answer_seq}
	</update>

	<!-- 잡페어 세부별 최종합격자 결정 시한 설정 정보 검색 시작; 2019. 3. 14 신동철 -->
	<select id="search_jobfair_divide_final_select_info" parameterType="int" resultType="hashmap">
		select
			fap_jobfair_divide_seq
			, fap_jobfair_divide_final_select_st
			, fap_jobfair_divide_final_select_et
		from
			fap_jobfair_divide_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}	
	</select>

	<!-- 관리자 게시판 조회수 증가 시작 -->
	<update id="board_contents_hit_update" parameterType="int">
		update
			com_board_content_tb
		set
			board_content_hit = board_content_hit + 1
		where
			board_content_seq = #{board_content_seq}
	</update>	
	<!-- 관리자 게시판 조회수 증가 종료 -->
	
	
	<!-- 게시판 이름 조회  시작-->
	<select id="select_comp_name" parameterType="String" resultType="String">
	 	select
	 		board_nm
		from
			com_board_group_tb
	    where
		    board_detail_gb = #{board_detail_gb}
	</select>	
	<!-- 게시판 이름 조회  종료-->
	
	<!-- 채용공고별 현지면접 대상자 인원제한 체크용 검색 시작 -->
	<select id="select_interview_limit_check" parameterType="long" resultType="hashmap">
		select
			ad.fap_job_ad_seq as fap_job_ad_seq
		    ,ad.fap_jobfair_seq as fap_jobfair_seq
		    ,ad.fap_jobfair_divide_seq as fap_jobfair_divide_seq
		    ,ad.fap_job_ad_category_type as fap_job_ad_category_type
		    ,itv.fap_job_itv_per_settled_num as fap_job_itv_per_settled_num
		from
			fap_job_ad_tb ad
		inner join
			fap_job_interview_per_tb itv
		on
			ad.fap_job_ad_seq = itv.fap_job_ad_seq
		where
			ad.fap_job_ad_seq = #{fap_job_ad_seq}
	</select>
	<!-- 채용공고별 현지면접 대상자 인원제한 체크용 검색 종료 -->
	
	<!-- 특정 잡페어의 현지면접 인원제한 계열 검색 시작 -->
	<select id="select_interview_limit_type" parameterType="int" resultType="string">
		select
			fap_limit_interview_type
		from
			fap_limit_interview_set_tb
		where
			fap_jobfair_seq = #{fap_jobfair_seq}
	</select>
	<!-- 특정 잡페어의 현지면접 인원제한 계열 검색 종료 -->
	
	<!-- 도쿄페어 전형 등록 가능 여부 확인 시작 -->
	<select id="tokyofair_screening_date_check" parameterType="int" resultType="int">
		<![CDATA[
			select
				count(*)
			from
				fap_jobfair_set_tb
			where
				fap_jobfair_set_gb = 'E0000'
			and
				fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
			and
				convert(concat(date_format(fap_jobfair_set_comp_sd, '%Y-%m-%d'),' ',fap_jobfair_set_comp_st),DATETIME) <= now()
			and
				convert(concat(date_format(fap_jobfair_set_comp_ed, '%Y-%m-%d'),' ',fap_jobfair_set_comp_et),DATETIME) >= now()
		]]>
	</select>
	<!-- 도쿄페어 전형 등록 가능 여부 확인 종료 -->
	
	<!-- 도쿄페어 전형 대상자 조회 시작 -->
	<select id="tokyofair_screening_subject_search" parameterType="long" resultType="hashmap">
		select
	        resume.user_id as user_id
			,resume.fap_resume_seq as fap_resume_seq
	        ,DATE_FORMAT(resume.fap_resume_birth,'%Y-%m-%d') as fap_resume_birth
	        ,resume_nm.fap_resume_nm as fap_resume_nm
		from
			fap_job_apply_result_tb result
		inner join
			fap_job_apply_info_tb info
		on
			info.fap_job_app_info_seq = result.fap_job_app_info_seq
		inner join
			fap_resume_tb resume
		on
			info.fap_resume_seq = resume.fap_resume_seq
		inner join
			fap_resume_name_tb resume_nm
		on
			resume.fap_resume_seq = resume_nm.fap_resume_seq
		and
			resume_nm.fap_resume_lang_gb = 'B3102'
		where
			info.fap_job_ad_seq = #{fap_job_ad_seq}
		and
			result.fap_job_recruit_pcs_seq in (
												select
													t1.fap_job_recruit_pcs_seq
												from
													fap_job_recruit_pcs_tb t1,
													(
														select
															fap_job_ad_seq
															,max(fap_job_recruit_pcs_od) as max_od
														from
															fap_job_recruit_pcs_tb
														group by
															fap_job_ad_seq
												   ) t2
												where
													t1.fap_job_recruit_pcs_od = t2.max_od
												and
													t1.fap_job_ad_seq = t2.fap_job_ad_seq
											)
		and
			result.fap_job_app_rt_acp = 'D0001'
	</select>
	<!-- 도쿄페어 전형 대상자 조회 종료 -->
	
	<!-- 도쿄페어 전형 확정대상자 제외 대상자 조회 시작 -->
	<select id="tokyofair_screening_subject_search_some" parameterType="long" resultType="hashmap">
		select
	        resume.fap_resume_seq as fap_resume_seq
	        ,DATE_FORMAT(resume.fap_resume_birth,'%Y-%m-%d') as fap_resume_birth
	        ,resume_nm.fap_resume_nm as fap_resume_nm
		from
			fap_job_apply_result_tb result
		inner join
			fap_job_apply_info_tb info
		on
			info.fap_job_app_info_seq = result.fap_job_app_info_seq
		inner join
			fap_resume_tb resume
		on
			info.fap_resume_seq = resume.fap_resume_seq
		inner join
			fap_resume_name_tb resume_nm
		on
			resume.fap_resume_seq = resume_nm.fap_resume_seq
		and
			resume_nm.fap_resume_lang_gb = 'B3102'
		where
			info.fap_job_ad_seq = #{fap_job_ad_seq}
		and
			result.fap_job_recruit_pcs_seq in (
												select
													t1.fap_job_recruit_pcs_seq
												from
													fap_job_recruit_pcs_tb t1,
													(
														select
															fap_job_ad_seq
															,max(fap_job_recruit_pcs_od) as max_od
														from
															fap_job_recruit_pcs_tb
														group by
															fap_job_ad_seq
												   ) t2
												where
													t1.fap_job_recruit_pcs_od = t2.max_od
												and
													t1.fap_job_ad_seq = t2.fap_job_ad_seq
											)
		and
			result.fap_job_app_rt_acp = 'D0001'
		and
			info.fap_resume_seq not in (
											select
												scr_user.fap_tokyofair_scr_resume_seq
											from
												fap_tokyofair_screening_tb screen
											inner join
												fap_tokyofair_scr_user_tb scr_user
											on
												screen.fap_tokyofair_screening_seq = scr_user.fap_tokyofair_screening_seq
											where
												screen.fap_job_ad_seq = #{fap_job_ad_seq}
										)
	</select>
	<!-- 도쿄페어 전형 확정대상자 제외 대상자 조회 종료 -->
	
	<!-- 도쿄페어 전형 등록 시작 -->
	<insert id="tokyofair_screening_insert" parameterType="tokyofairScr" useGeneratedKeys="true" keyProperty="fap_tokyofair_screening_seq">
		insert into
			fap_tokyofair_screening_tb(
				fap_job_ad_seq
				,fap_comp_id
				,fap_tokyofair_screening_gb
				,fap_tokyofair_screening_nm
				,fap_tokyofair_screening_type
				<if test="fap_tokyofair_screening_user_num != 0">
					,fap_tokyofair_screening_user_num
				</if>
				,fap_tokyofair_screening_time
				<if test="fap_tokyofair_screening_comp_num != 0">
					,fap_tokyofair_screening_comp_num
				</if>
				,fap_tokyofair_screening_admin_req
				,fap_tokyofair_screening_user_req
				,fap_tokyofair_screening_ins_id
				,fap_tokyofair_screening_udt_id
			)values(
				#{fap_job_ad_seq}
				,#{fap_comp_id}
				,#{fap_tokyofair_screening_gb}
				,#{fap_tokyofair_screening_nm}
				,#{fap_tokyofair_screening_type}
				<if test="fap_tokyofair_screening_user_num != 0">
					,#{fap_tokyofair_screening_user_num}
				</if>
				,#{fap_tokyofair_screening_time}
				<if test="fap_tokyofair_screening_comp_num != 0">
					,#{fap_tokyofair_screening_comp_num}
				</if>
				,#{fap_tokyofair_screening_admin_req}
				,#{fap_tokyofair_screening_user_req}
				,#{fap_tokyofair_screening_ins_id}
				,#{fap_tokyofair_screening_udt_id}
			)
	</insert>
	<!-- 도쿄페어 전형 등록 종료 -->
	
	<!-- 도쿄페어 전형 인원 등록 시작 -->
	<insert id ="tokyofair_scr_user_insert" parameterType="list">
		insert into fap_tokyofair_scr_user_tb(
			fap_tokyofair_screening_seq
			,fap_tokyofair_scr_resume_seq
		)
		values
		<foreach item ="scrUserList" collection="list" index="index" open=" " separator="," close=" ">
		(	
			#{scrUserList.fap_tokyofair_screening_seq}
			,#{scrUserList.fap_tokyofair_scr_resume_seq}
		)
		</foreach>
	</insert>
	<!-- 도쿄페어 전형 인원 등록 종료 -->
	
	<!-- 도쿄페어 전형 인원 삭제 시작 -->
	<delete id="tokyofair_scr_user_delete" parameterType="int">
		delete from
			fap_tokyofair_scr_user_tb
		where
			fap_tokyofair_screening_seq = #{fap_tokyofair_screening_seq}
	</delete>
	<!-- 도쿄페어 전형 인원 삭제 종료 -->
	
	<!-- 도쿄페어 전형 수정 시작 -->
	<update id="tokyofair_screening_update" parameterType="tokyofairScr">
		update
			fap_tokyofair_screening_tb
		set
			fap_tokyofair_screening_nm = #{fap_tokyofair_screening_nm}
			<if test="fap_tokyofair_screening_gb != null">
				,fap_tokyofair_screening_gb = #{fap_tokyofair_screening_gb}
			</if>
			<if test="fap_tokyofair_screening_type != null">
				,fap_tokyofair_screening_type = #{fap_tokyofair_screening_type}
			</if>
			<if test="fap_tokyofair_screening_user_num != 0">
				,fap_tokyofair_screening_user_num = #{fap_tokyofair_screening_user_num}
			</if>
			<if test="fap_tokyofair_screening_time != 0">
				,fap_tokyofair_screening_time = #{fap_tokyofair_screening_time}
			</if>
			,fap_tokyofair_screening_comp_num = #{fap_tokyofair_screening_comp_num}
			,fap_tokyofair_screening_admin_req = #{fap_tokyofair_screening_admin_req}
			,fap_tokyofair_screening_user_req = #{fap_tokyofair_screening_user_req}
			,fap_tokyofair_screening_udt_id = #{fap_tokyofair_screening_udt_id}
			,fap_tokyofair_screening_udt_dt = now()
		where
			fap_tokyofair_screening_seq = #{fap_tokyofair_screening_seq}
	</update>
	<!-- 도쿄페어 전형 수정 종료 -->
	
	<!-- 도쿄페어 전형 등록인원 조회 시작 -->
	<select id="tokyofair_scr_user_select" parameterType="long" resultType="tokyofairScrUser">
		select
			scr_user.fap_tokyofair_scr_resume_seq
		from
			fap_tokyofair_screening_tb main
		inner join
			fap_tokyofair_scr_user_tb scr_user
		on
			main.fap_tokyofair_screening_seq = scr_user.fap_tokyofair_screening_seq
		where
			main.fap_job_ad_seq = #{fap_job_ad_seq}
		and
			main.fap_tokyofair_screening_type = 'E0601'
	</select>
	<!-- 도쿄페어 전형 등록인원 조회 종료 -->
	
	<!-- 도쿄페어 전형별 등록인원 조회 시작 -->
	<select id="tokyofair_scr_user_select_group" parameterType="int" resultType="hashmap">
		select
			resume.fap_resume_seq as fap_resume_seq
			,DATE_FORMAT(resume.fap_resume_birth,'%Y-%m-%d') as fap_resume_birth
		    ,resume_nm.fap_resume_nm as fap_resume_nm
		from
			fap_tokyofair_screening_tb main
		inner join
			fap_tokyofair_scr_user_tb scr_user
		on
			main.fap_tokyofair_screening_seq = scr_user.fap_tokyofair_screening_seq
		inner join
			fap_resume_tb resume
		on
			scr_user.fap_tokyofair_scr_resume_seq = resume.fap_resume_seq
		inner join
			fap_resume_name_tb resume_nm
		on
			resume.fap_resume_seq = resume_nm.fap_resume_seq
		and
			resume_nm.fap_resume_lang_gb = 'B3102'
		where
			main.fap_tokyofair_screening_seq = #{fap_tokyofair_screening_seq}
		order by
			scr_user.fap_tokyofair_scr_user_seq
	</select>
	<!-- 도쿄페어 전형별 등록인원 조회 종료 -->
	
	<!-- 도쿄페어 전형 등록 갯수 조회 시작 -->
	<select id="tokyofair_screening_search_count" parameterType="long" resultType="int">
		select
			count(*)
		from
			fap_tokyofair_screening_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
		and
			fap_tokyofair_screening_gb in ('E0500','E0501')
	</select>
	<!-- 도쿄페어 전형 등록 갯수 조회 종료 -->
	
	<!-- 도쿄페어 전형 리스트 조회 시작 -->
	<select id="tokyofair_screening_search" parameterType="long" resultType="tokyofairScr">
		select
			fap_tokyofair_screening_seq as fap_tokyofair_screening_seq
		    ,fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
		    ,DATE_FORMAT(fap_tokyofair_screening_ins_dt, '%Y-%m-%d') as fap_tokyofair_screening_ins_dt
		    ,fap_tokyofair_screening_sch_gb as fap_tokyofair_screening_sch_gb
		from
			fap_tokyofair_screening_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
		and
			fap_tokyofair_screening_gb in ('E0500','E0501')
	</select>
	<!-- 도쿄페어 전형 리스트 조회 종료 -->
	
	<!-- 도쿄페어 전형 중 일정 미등록 리스트 조회 시작 -->
	<select id="tokyofair_screening_search_bookable" parameterType="long" resultType="tokyofairScr">
		select
			fap_tokyofair_screening_seq as fap_tokyofair_screening_seq
		    ,fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
		    ,DATE_FORMAT(fap_tokyofair_screening_ins_dt, '%Y-%m-%d') as fap_tokyofair_screening_ins_dt
		from
			fap_tokyofair_screening_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}
		and
			fap_tokyofair_screening_sch_gb = 'E0700'
	</select>
	<!-- 도쿄페어 전형 중 일정 미등록 리스트 조회 종료 -->
	
	<!-- 도쿄페어 전형 정보 조회 시작 -->
	<resultMap type="hashmap" id="tokyoScrMap">
		<id property="fap_tokyofair_screening_seq" column="fap_tokyofair_screening_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_tokyofair_screening_gb" column="fap_tokyofair_screening_gb"/>
		<result property="fap_tokyofair_screening_nm" column="fap_tokyofair_screening_nm"/>
		<result property="fap_tokyofair_screening_type" column="fap_tokyofair_screening_type"/>
		<result property="fap_tokyofair_screening_user_num" column="fap_tokyofair_screening_user_num"/>
		<result property="fap_tokyofair_screening_time" column="fap_tokyofair_screening_time"/>
		<result property="fap_tokyofair_screening_comp_num" column="fap_tokyofair_screening_comp_num"/>
		<result property="fap_tokyofair_screening_admin_req" column="fap_tokyofair_screening_admin_req"/>
		<result property="fap_tokyofair_screening_user_req" column="fap_tokyofair_screening_user_req"/>
		<result property="fap_tokyofair_screening_sch_gb" column="fap_tokyofair_screening_sch_gb"/>
		<collection property="tokyoScrUserList" javaType="java.util.ArrayList" resultMap="tokyoScrUserMap" />
	</resultMap>
	<resultMap type="hashmap" id="tokyoScrUserMap">
		<id property="fap_tokyofair_scr_user_seq" column="fap_tokyofair_scr_user_seq"/>
		<result property="fap_resume_seq" column="fap_tokyofair_scr_resume_seq"/>		
		<result property="fap_resume_nm" column="fap_resume_nm"/>		
		<result property="fap_resume_birth" column="fap_resume_birth"/>
		<result property="user_id" column="user_id"/>
	</resultMap>
	
	<select id="tokyofair_screening_search_one" parameterType="int" resultMap="tokyoScrMap">
		select
			main.fap_tokyofair_screening_seq as fap_tokyofair_screening_seq
		    ,main.fap_job_ad_seq as fap_job_ad_seq
		    ,main.fap_tokyofair_screening_gb as fap_tokyofair_screening_gb
		    ,main.fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
		    ,main.fap_tokyofair_screening_type as fap_tokyofair_screening_type
		    ,main.fap_tokyofair_screening_user_num as fap_tokyofair_screening_user_num
		    ,main.fap_tokyofair_screening_time as fap_tokyofair_screening_time
		    ,main.fap_tokyofair_screening_comp_num as fap_tokyofair_screening_comp_num
		    ,main.fap_tokyofair_screening_admin_req as fap_tokyofair_screening_admin_req
		    ,main.fap_tokyofair_screening_user_req as fap_tokyofair_screening_user_req
		    ,main.fap_tokyofair_screening_sch_gb as fap_tokyofair_screening_sch_gb
		    ,sub.fap_tokyofair_scr_user_seq as fap_tokyofair_scr_user_seq
		    ,sub.fap_tokyofair_scr_resume_seq as fap_tokyofair_scr_resume_seq
		    ,DATE_FORMAT(resume.fap_resume_birth, '%Y-%m-%d') as fap_resume_birth
		    ,resume_nm.fap_resume_nm as fap_resume_nm
		    ,resume.user_id as user_id
		from
			fap_tokyofair_screening_tb main
		inner join
			fap_tokyofair_scr_user_tb sub
		on
			main.fap_tokyofair_screening_seq = sub.fap_tokyofair_screening_seq
		inner join
			fap_resume_tb resume
		on
			sub.fap_tokyofair_scr_resume_seq = resume.fap_resume_seq
		inner join
			fap_resume_name_tb resume_nm
		on
			resume.fap_resume_seq = resume_nm.fap_resume_seq
		and
			resume_nm.fap_resume_lang_gb = 'B3102'
		where
			main.fap_tokyofair_screening_seq = #{fap_tokyofair_screening_seq}
		order by
			sub.fap_tokyofair_scr_user_seq
	
	</select>
	<!-- 도쿄페어 전형 정보 조회 종료 -->
	
	<!-- 도쿄페어 전형 삭제 시작 -->
	<delete id="tokyofair_screening_delete" parameterType="int">
		delete from
			fap_tokyofair_screening_tb
		where
			fap_tokyofair_screening_seq = #{fap_tokyofair_screening_seq}
	</delete>
	<!-- 도쿄페어 전형 삭제 종료 -->
	
	<!-- 설정된 도쿄페어 설정 정보 조회 시작 -->
	<select id="tokyofair_schedule_set_search" parameterType="int" resultType="FAPAdminJobfairSet">
		select
			fap_jobfair_set_seq
			,fap_jobfair_divide_seq
			,fap_jobfair_set_nm
			,fap_jobfair_set_addr
			,DATE_FORMAT(fap_jobfair_set_comp_sd, '%Y-%m-%d') as fap_jobfair_set_comp_sd
			,DATE_FORMAT(fap_jobfair_set_comp_ed, '%Y-%m-%d') as fap_jobfair_set_comp_ed
			,fap_jobfair_set_comp_st
			,fap_jobfair_set_comp_et
			,DATE_FORMAT(fap_jobfair_set_st, '%Y-%m-%d') as fap_jobfair_set_st
			,DATE_FORMAT(fap_jobfair_set_et, '%Y-%m-%d') as fap_jobfair_set_et
			,fap_jobfair_set_room_st
			,fap_jobfair_set_room_et
			,fap_jobfair_set_room_cnt
			,fap_jobfair_set_itv_cnt
			,fap_jobfair_set_itv_stu_dt
			,fap_jobfair_set_itv_comp_dt
            ,fap_jobfair_set_gb
		from
			fap_jobfair_set_tb
		where
			fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			fap_jobfair_set_gb = 'E0000'
	</select>
	<!-- 설정된 도쿄페어 설정 정보 조회 종료 -->
	
	<!-- 도쿄페어 날짜 정보 등록여부 확인 시작 -->
	<select id="tokyofair_schedule_date_check" parameterType="hashmap" resultType="int">
		select
			fap_tokyofair_date_seq
		from
			fap_tokyofair_date_tb
		where
			fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		and
			fap_tokyofair_date_room_num = #{fap_tokyofair_date_room_num}
	</select>
	<!-- 도쿄페어 날짜 정보 등록여부 확인 종료 -->
	
	<!-- 도쿄페어 날짜 정보 등록 시작 -->
	<insert id="tokyofair_schedule_date_insert" parameterType="hashmap">
		insert into
			fap_tokyofair_date_tb
			(
				fap_jobfair_set_seq
				,fap_tokyofair_date_dt
				,fap_tokyofair_date_room_num
				,fap_tokyofair_date_ins_id
				,fap_tokyofair_date_udt_id
			)values(
				#{fap_jobfair_set_seq}
				,#{fap_tokyofair_date_dt}
				,#{fap_tokyofair_date_room_num}
				,#{user_id}
				,#{user_id}
			)
		<selectKey keyProperty="fap_tokyofair_date_seq" resultType="Integer" order="AFTER">
			select last_insert_id() as fap_tokyofair_date_seq
		</selectKey>
	</insert>
	<!-- 도쿄페어 날짜 정보 등록 종료 -->
	
	<!-- 도쿄페어 일정 정보 등록 시작 -->
	<insert id="tokyofair_schedule_info_insert" parameterType="hashmap">
		insert into
			fap_tokyofair_schedule_tb
			(
				fap_tokyofair_date_seq
				,fap_tokyofair_screening_seq
				,fap_job_ad_seq
				,fap_comp_id
				,fap_tokyofair_schedule_st
				,fap_tokyofair_schedule_et
				,fap_tokyofair_schedule_merge
				,fap_tokyofair_schedule_ins_id
				,fap_tokyofair_schedule_udt_id
			)values(
				#{fap_tokyofair_date_seq}
				,#{fap_tokyofair_screening_seq}
				,#{fap_job_ad_seq}
				,#{fap_comp_id}
				,#{fap_tokyofair_schedule_st}
				,#{fap_tokyofair_schedule_et}
				,#{fap_tokyofair_schedule_merge}
				,#{user_id}
				,#{user_id}
			)
		<selectKey keyProperty="fap_tokyofair_schedule_seq" resultType="Long" order="AFTER">
			select last_insert_id() as fap_tokyofair_schedule_seq
		</selectKey>
	</insert>
	<!-- 도쿄페어 일정 정보 등록 종료 -->
	
	<!-- 도쿄페어 일정 가능여부 확인 시작 -->
	<select id="tokyofair_schedule_info_check" parameterType="hashmap" resultType="int">
	<![CDATA[
		select
			count(*)
		from
			fap_tokyofair_date_tb tokyoDate
		inner join
			fap_tokyofair_schedule_tb tokyoInfo
		on
			tokyoDate.fap_tokyofair_date_seq = tokyoInfo.fap_tokyofair_date_seq
		where
			tokyoDate.fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		and
			tokyoDate.fap_tokyofair_date_room_num = #{fap_tokyofair_date_room_num}
		and
			str_to_date(#{fap_tokyofair_schedule_st},'%H:%i') < str_to_date(tokyoInfo.fap_tokyofair_schedule_et, '%H:%i')
		and
			str_to_date(tokyoInfo.fap_tokyofair_schedule_st,'%H:%i') < date_add(str_to_date(#{fap_tokyofair_schedule_et}, '%H:%i'), interval #{fap_jobfair_set_itv_comp_dt} minute)
	]]>
	</select>
	<!-- 도쿄페어 일정 가능여부 확인 종료 -->
	
	<!-- 도쿄페어 일정 삭제 시작 -->
	<delete id="tokyofair_schedule_delete" parameterType="long">
		delete	from
			fap_tokyofair_schedule_tb
		where
			fap_tokyofair_schedule_seq = #{fap_tokyofair_schedule_seq}
	</delete>
	<!-- 도쿄페어 일정 삭제 종료 -->
	
	<!-- 도쿄페어 인원 삭제 시작 -->
	<delete id="tokyofair_schedule_member_delete" parameterType="long">
		delete from
			fap_tokyofair_member_tb
		where
			fap_tokyofair_schedule_seq = #{fap_tokyofair_schedule_seq}
	</delete>
	<!-- 도쿄페어 인원 삭제 종료 -->
	
	<!-- 도쿄페어 일정 최초 여부 판단 시작 -->
	<select id="tokyofair_schedule_first_check" parameterType="tokyofairDate" resultType="int">
		select
			count(sch.fap_tokyofair_schedule_seq)
		from
			fap_tokyofair_date_tb dt
		inner join
			fap_tokyofair_schedule_tb sch
		on
			dt.fap_tokyofair_date_seq = sch.fap_tokyofair_date_seq
		where
			dt.fap_jobfair_set_seq = #{fap_jobfair_set_seq}
		and
			dt.fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		and
			dt.fap_tokyofair_date_room_num = #{fap_tokyofair_date_room_num}
	</select>
	<!-- 도쿄페어 일정 최초 여부 판단 종료 -->
	
	<!-- 도쿄페어 일정 앞면접과의 준비시간 체크 시작 -->
	<select id="tokyofair_schedule_itv_comp_before_check" parameterType="hashmap" resultType="int">
	<![CDATA[
		select
			count(sch.fap_tokyofair_schedule_seq)
		from
			fap_tokyofair_date_tb dt
		inner join
			fap_tokyofair_schedule_tb sch
		on
			dt.fap_tokyofair_date_seq = sch.fap_tokyofair_date_seq
		where
			dt.fap_jobfair_set_seq = #{fap_jobfair_set_seq}
		and
			dt.fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		and
			dt.fap_tokyofair_date_room_num = #{fap_tokyofair_date_room_num}
		and
			date_sub(str_to_date(sch.fap_tokyofair_schedule_st,'%H:%i'), interval #{fap_jobfair_set_itv_comp_dt} minute) <= #{fap_tokyofair_schedule_st}
		and
			date_add(str_to_date(sch.fap_tokyofair_schedule_et,'%H:%i'), interval #{fap_jobfair_set_itv_comp_dt} minute) > #{fap_tokyofair_schedule_st}
		and
			sch.fap_comp_id <> #{fap_comp_id}
	]]>
	</select>
	<!-- 도쿄페어 일정 앞면접과의 준비시간 체크 종료 -->
	
	<!-- 도쿄페어 일정 여유도 체크 시작 -->
	<select id="tokyofair_schedule_term_check" parameterType="hashmap" resultType="int">
	<![CDATA[
		select
			count(sch.fap_tokyofair_schedule_seq)
		from
			fap_tokyofair_date_tb dt
		inner join
			fap_tokyofair_schedule_tb sch
		on
			dt.fap_tokyofair_date_seq = sch.fap_tokyofair_date_seq
		where
			dt.fap_jobfair_set_seq = #{fap_jobfair_set_seq}
		and
			dt.fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		and
			dt.fap_tokyofair_date_room_num = #{fap_tokyofair_date_room_num}
		and
			date_add(str_to_date(sch.fap_tokyofair_schedule_et,'%H:%i'), interval '2' hour) < #{fap_tokyofair_schedule_st}
		and
			date_add(str_to_date(sch.fap_tokyofair_schedule_et,'%H:%i'), interval '3' hour) > #{fap_tokyofair_schedule_st}
	]]>
	</select>
	<!-- 도쿄페어 일정 여유도 체크 종료 -->
	
	<!-- 도쿄페어 일정 인원 중복 체크 시작 -->
	<select id="tokyofair_schedule_member_duplicate_check" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			select
				resume_nm.fap_resume_nm as fap_resume_nm
				,DATE_FORMAT(resume.fap_resume_birth, '%Y-%m-%d') as fap_resume_birth
			from
				fap_tokyofair_date_tb tokyoDate
			inner join
				fap_tokyofair_schedule_tb tokyoSch
			on
				tokyoDate.fap_tokyofair_date_seq = tokyoSch.fap_tokyofair_date_seq
			inner join
				fap_tokyofair_member_tb tokyoMember
			on
				tokyoSch.fap_tokyofair_schedule_seq = tokyoMember.fap_tokyofair_schedule_seq
			inner join
				fap_resume_tb resume
			on
				tokyoMember.fap_tokyofair_member_resume_seq = resume.fap_resume_seq
			inner join
				fap_resume_name_tb resume_nm
			on
				resume.fap_resume_seq = resume_nm.fap_resume_seq
			and
				resume_nm.fap_resume_lang_gb = 'B3102'
			where
				tokyoDate.fap_jobfair_set_seq = #{fap_jobfair_set_seq}
			and
				tokyoDate.fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
			and
				tokyoDate.fap_tokyofair_date_room_num != #{fap_tokyofair_date_room_num}
			and
				tokyoMember.fap_tokyofair_member_id = #{fap_tokyofair_member_id}
			and
				str_to_date(#{fap_tokyofair_member_st},'%H:%i') < date_add(str_to_date(tokyoMember.fap_tokyofair_member_et,'%H:%i'), interval #{fap_jobfair_itv_stu_dt} minute)
			and
				date_sub(str_to_date(tokyoMember.fap_tokyofair_member_st,'%H:%i'), interval #{fap_jobfair_itv_stu_dt} minute) < str_to_date(#{fap_tokyofair_member_et},'%H:%i')
			group by
				fap_resume_nm , fap_resume_birth
		]]>	
	</select>
	<!-- 도쿄페어 일정 인원 중복 체크 종료 -->
	
	<!-- 도쿄페어 일정 인원 등록 시작 -->
	<insert id="tokyofair_schedule_member_insert" parameterType="hashmap">
		insert into
			fap_tokyofair_member_tb
			(
				fap_tokyofair_schedule_seq
				,fap_tokyofair_member_resume_seq
				,fap_tokyofair_member_id
				,fap_tokyofair_member_st
				,fap_tokyofair_member_et
			)values
			<foreach collection="memberArr" item="member" index="index" open=" " separator="," close=" ">
			(
				#{fap_tokyofair_schedule_seq}
				,#{member.fap_tokyofair_member_resume_seq}
				,#{member.fap_tokyofair_member_id}
				,#{member.fap_tokyofair_member_st}
				,#{member.fap_tokyofair_member_et}
			)
			</foreach>
	</insert>
	<!-- 도쿄페어 일정 인원 등록 종료 -->
	
	<!-- 도쿄페어 등록된 일정 검색 시작 -->
	<select id="tokyfair_schedule_booked_search" parameterType="hashmap" resultType="hashmap">
		select
			tokyoDate.fap_tokyofair_date_seq as fap_tokyofair_date_seq
		    ,tokyoDate.fap_jobfair_set_seq as fap_jobfair_set_seq
		    ,DATE_FORMAT(tokyoDate.fap_tokyofair_date_dt, '%Y-%m-%d') as fap_tokyofair_date_dt
		    ,tokyoDate.fap_tokyofair_date_room_num as fap_tokyofair_date_room_num
		    ,tokyoSch.fap_tokyofair_schedule_seq as fap_tokyofair_schedule_seq
		    ,tokyoSch.fap_job_ad_seq as fap_job_ad_seq
		    ,tokyoSch.fap_comp_id as fap_comp_id
		    ,tokyoSch.fap_tokyofair_schedule_st as fap_tokyofair_schedule_st
		    ,tokyoSch.fap_tokyofair_schedule_et as fap_tokyofair_schedule_et
		    ,tokyoSch.fap_tokyofair_schedule_merge as fap_tokyofair_schedule_merge
		    ,tokyoScreen.fap_tokyofair_screening_seq as fap_tokyofair_screening_seq
		    ,tokyoScreen.fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
		from
			fap_tokyofair_date_tb tokyoDate
		inner join
			fap_tokyofair_schedule_tb tokyoSch
		on
			tokyoDate.fap_tokyofair_date_seq = tokyoSch.fap_tokyofair_date_seq
		inner join
			fap_tokyofair_screening_tb tokyoScreen
		on
			tokyoSch.fap_tokyofair_screening_seq = tokyoScreen.fap_tokyofair_screening_seq
		where
			tokyoDate.fap_jobfair_set_seq = #{fap_jobfair_set_seq}
		and
			tokyoDate.fap_tokyofair_date_dt = #{fap_tokyofair_date_dt}
		order by
			fap_tokyofair_date_dt , fap_tokyofair_date_room_num
	</select>
	<!-- 도쿄페어 등록된 일정 검색 종료 -->
	
	<!-- 채용공고 회사 아이디 조회 시작 -->
	<select id="job_ad_comp_id_search" parameterType="long" resultType="string">
		select
			fap_comp_id
		from
			fap_job_ad_tb
		where
			fap_job_ad_seq = #{fap_job_ad_seq}	
	</select>
	<!-- 채용공고 회사 아이디 조회 종료 -->
	
	<!-- 도쿄페어 전형 일정등록 구분 변경 시작 -->
	<update id="tokyofair_screening_sch_gb_update" parameterType="hashmap">
		update
			fap_tokyofair_screening_tb
		set
			fap_tokyofair_screening_sch_gb = #{fap_tokyofair_screening_sch_gb}
		where
			fap_tokyofair_screening_seq = #{fap_tokyofair_screening_seq}
	</update>
	<!-- 도쿄페어 전형 일정등록 구분 변경 종료 -->
	
	<!-- 도쿄페어 일정 정보 및 인원 정보 검색 시작 -->
	<resultMap type="hashmap" id="tokyoScrUpdateMap">
		<id property="fap_tokyofair_schedule_seq" column="fap_tokyofair_schedule_seq"/>
		<result property="fap_tokyofair_date_seq" column="fap_tokyofair_date_seq"/>
		<result property="fap_tokyofair_screening_seq" column="fap_tokyofair_screening_seq"/>
		<result property="fap_job_ad_seq" column="fap_job_ad_seq"/>
		<result property="fap_comp_id" column="fap_comp_id"/>
		<result property="fap_tokyofair_screening_nm" column="fap_tokyofair_screening_nm"/>
		<result property="fap_tokyofair_screening_gb" column="fap_tokyofair_screening_gb"/>
		<result property="fap_tokyofair_screening_user_num" column="fap_tokyofair_screening_user_num"/>
		<result property="fap_tokyofair_screening_time" column="fap_tokyofair_screening_time"/>
		<collection property="tokyoScrUserUpdateList" javaType="java.util.ArrayList" resultMap="tokyoScrUserUpdateMap" />
	</resultMap>
	<resultMap type="hashmap" id="tokyoScrUserUpdateMap">
		<id property="fap_tokyofair_member_seq" column="fap_tokyofair_member_seq"/>
		<result property="fap_tokyofair_member_id" column="fap_tokyofair_member_id"/>		
		<result property="fap_tokyofair_member_st" column="fap_tokyofair_member_st"/>		
		<result property="fap_tokyofair_member_et" column="fap_tokyofair_member_et"/>
		<result property="fap_tokyofair_member_resume_seq" column="fap_tokyofair_member_resume_seq"/>
		<result property="fap_resume_birth" column="fap_resume_birth"/>
		<result property="fap_resume_nm" column="fap_resume_nm"/>
	</resultMap>
	
	<select id="tokyofair_schedule_search_detail" parameterType="long" resultMap="tokyoScrUpdateMap">
		select
			tokyoSch.fap_tokyofair_schedule_seq as fap_tokyofair_schedule_seq
		    ,tokyoSch.fap_tokyofair_date_seq as fap_tokyofair_date_seq
		    ,tokyoSch.fap_tokyofair_screening_seq as fap_tokyofair_screening_seq
		    ,tokyoSch.fap_job_ad_seq as fap_job_ad_seq
		    ,tokyoSch.fap_comp_id as fap_comp_id
			,tokyoScreen.fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
		    ,tokyoScreen.fap_tokyofair_screening_gb as fap_tokyofair_screening_gb
		    ,tokyoScreen.fap_tokyofair_screening_user_num as fap_tokyofair_screening_user_num
		    ,tokyoScreen.fap_tokyofair_screening_time as fap_tokyofair_screening_time
		    ,tokyoMember.fap_tokyofair_member_seq as fap_tokyofair_member_seq
		    ,tokyoMember.fap_tokyofair_member_resume_seq as fap_tokyofair_member_resume_seq
		    ,tokyoMember.fap_tokyofair_member_id as fap_tokyofair_member_id
		    ,tokyoMember.fap_tokyofair_member_st as fap_tokyofair_member_st
		    ,tokyoMember.fap_tokyofair_member_et as fap_tokyofair_member_et
		    ,DATE_FORMAT(resume.fap_resume_birth, '%Y-%m-%d') as fap_resume_birth
		    ,resume_nm.fap_resume_nm as fap_resume_nm
		from
			fap_tokyofair_schedule_tb tokyoSch
		inner join
			fap_tokyofair_screening_tb tokyoScreen
		on
			tokyoSch.fap_tokyofair_screening_seq = tokyoScreen.fap_tokyofair_screening_seq
		inner join
			fap_tokyofair_member_tb tokyoMember
		on
			tokyoSch.fap_tokyofair_schedule_seq = tokyoMember.fap_tokyofair_schedule_seq
		inner join
			fap_resume_tb resume
		on
			resume.fap_resume_seq = tokyoMember.fap_tokyofair_member_resume_seq
		inner join
			fap_resume_name_tb resume_nm
		on
			resume.fap_resume_seq = resume_nm.fap_resume_seq
		and
			resume_nm.fap_resume_lang_gb = 'B3102'
		where
			tokyoSch.fap_tokyofair_schedule_seq = #{fap_tokyofair_schedule_seq}
		order by
			fap_tokyofair_member_st
	</select>
	<!-- 도쿄페어 일정 정보 및 인원 정보 검색 종료 -->
	
	<!-- 도쿄페어 전체 일정 정보 확인 시작 -->
	<resultMap type="hashmap" id="tokyoScreenMap">
		<id property="fap_jobfair_set_seq" column="fap_jobfair_set_seq"/>
		<result property="fap_jobfair_set_nm" column="fap_jobfair_set_nm"/>
		<result property="fap_jobfair_set_addr" column="fap_jobfair_set_addr"/>
		<collection property="tokyoScheduleList" javaType="java.util.ArrayList" resultMap="tokyoScheduleMap" />
	</resultMap>
	<resultMap type="hashmap" id="tokyoScheduleMap">
		<id property="fap_tokyofair_schedule_seq" column="fap_tokyofair_schedule_seq"/>
		<result property="fap_tokyofair_screening_gb" column="fap_tokyofair_screening_gb"/>		
		<result property="fap_tokyofair_screening_nm" column="fap_tokyofair_screening_nm"/>		
		<result property="fap_tokyofair_screening_user_num" column="fap_tokyofair_screening_user_num"/>		
		<result property="fap_tokyofair_date_dt" column="fap_tokyofair_date_dt"/>		
		<result property="fap_tokyofair_date_room_num" column="fap_tokyofair_date_room_num"/>
		<collection property="tokyoScheduleMemberList" javaType="java.util.ArrayList" resultMap="tokyoScheduleMemberMap" />
	</resultMap>
	<resultMap type="hashmap" id="tokyoScheduleMemberMap">
		<id property="fap_tokyofair_member_seq" column="fap_tokyofair_member_seq"/>
		<result property="fap_tokyofair_member_st" column="fap_tokyofair_member_st"/>		
		<result property="fap_tokyofair_member_et" column="fap_tokyofair_member_et"/>		
		<result property="fap_resume_birth" column="fap_resume_birth"/>
		<result property="fap_resume_nm" column="fap_resume_nm"/>
	</resultMap>
	
	<select id="tokyofair_screening_search_total" parameterType="hashmap" resultMap="tokyoScreenMap">
		select
			jobfairSet.fap_jobfair_set_seq as fap_jobfair_set_seq
			,jobfairSet.fap_jobfair_set_nm as fap_jobfair_set_nm
		    ,jobfairSet.fap_jobfair_set_addr as fap_jobfair_set_addr
		    ,tokyoSch.fap_tokyofair_schedule_seq as fap_tokyofair_schedule_seq
		    ,tokyoScreen.fap_tokyofair_screening_gb as fap_tokyofair_screening_gb
		    ,tokyoScreen.fap_tokyofair_screening_nm as fap_tokyofair_screening_nm
		    ,tokyoScreen.fap_tokyofair_screening_user_num as fap_tokyofair_screening_user_num
		    ,DATE_FORMAT(tokyoDate.fap_tokyofair_date_dt, '%Y-%m-%d') as fap_tokyofair_date_dt
		    ,tokyoDate.fap_tokyofair_date_room_num as fap_tokyofair_date_room_num
		    ,tokyoMember.fap_tokyofair_member_seq as fap_tokyofair_member_seq
		    ,tokyoMember.fap_tokyofair_member_st as fap_tokyofair_member_st
		    ,tokyoMember.fap_tokyofair_member_et as fap_tokyofair_member_et
			,DATE_FORMAT(resume.fap_resume_birth, '%Y-%m-%d') as fap_resume_birth
			,resume_nm.fap_resume_nm as fap_resume_nm
		from
			fap_jobfair_set_tb jobfairSet
		inner join
			fap_tokyofair_date_tb tokyoDate
		on
			jobfairSet.fap_jobfair_set_seq = tokyoDate.fap_jobfair_set_seq
		inner join
			fap_tokyofair_schedule_tb tokyoSch
		on
			tokyoDate.fap_tokyofair_date_seq = tokyoSch.fap_tokyofair_date_seq
		inner join
			fap_tokyofair_screening_tb tokyoScreen
		on
			tokyoSch.fap_tokyofair_screening_seq = tokyoScreen.fap_tokyofair_screening_seq
		inner join
			fap_tokyofair_member_tb tokyoMember
		on
			tokyoSch.fap_tokyofair_schedule_seq = tokyoMember.fap_tokyofair_schedule_seq
		and
			tokyoSch.fap_comp_id = #{fap_comp_id}
		inner join
			fap_resume_tb resume
		on
			resume.fap_resume_seq = tokyoMember.fap_tokyofair_member_resume_seq
		inner join
			fap_resume_name_tb resume_nm
		on
			resume.fap_resume_seq = resume_nm.fap_resume_seq
		and
			resume_nm.fap_resume_lang_gb = 'B3102'
		where
			jobfairSet.fap_jobfair_divide_seq = #{fap_jobfair_divide_seq}
		and
			jobfairSet.fap_jobfair_set_gb = 'E0000'
		order by
			fap_tokyofair_date_dt, fap_tokyofair_schedule_seq, fap_tokyofair_date_room_num, fap_tokyofair_member_st
	</select>
	<!-- 도쿄페어 전체 일정 정보 확인 종료 -->
</mapper>